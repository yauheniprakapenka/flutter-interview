import '../model/qa_model.dart';

const List<QA> patternQuestions = [
  QA(
    q: '–ö–∞–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å Singleton –≤ Dart?',
    a: r'''
class MySingleton {
  static final MySingleton _singleton = MySingleton._internal();

  MySingleton._internal();

  factory MySingleton() => _singleton;
}

void main() {
  // –í—Å–µ –≤—ã–∑–æ–≤—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –û–î–ò–ù –ò –¢–û–¢ –ñ–ï –æ–±—ä–µ–∫—Ç
  var instance1 = MySingleton();
  var instance2 = MySingleton();
  var instance3 = MySingleton();

  print(identical(instance1, instance2)); // true
  print(identical(instance2, instance3)); // true
  print(instance1.hashCode);              // –û–¥–∏–Ω —Ö–µ—à-–∫–æ–¥
  print(instance2.hashCode);              // –¢–æ—Ç –∂–µ —Ö–µ—à-–∫–æ–¥
}



üéØ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é

class MySingleton {
  static final MySingleton _singleton = MySingleton._internal();

  // –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø–æ–ª—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
  late String _data;
  int _counter = 0;

  MySingleton._internal() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    _data = 'Singleton initialized at ${DateTime.now()}';
    print('Singleton —Å–æ–∑–¥–∞–Ω!');
  }

  factory MySingleton() => _singleton;

  // –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  String get data => _data;
  int get counter => _counter;

  void increment() => _counter++;

  void updateData(String newData) {
    _data = newData;
  }
}

void main() {
  var s1 = MySingleton();
  print(s1.data);        // –î–∞–Ω–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  s1.increment();

  var s2 = MySingleton();
  print(s2.counter);     // 1 (—Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç!)
  s2.increment();

  print(s1.counter);     // 2 (–∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–Ω—ã –≤–µ–∑–¥–µ)
}

''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ç—Ç–µ—Ä–Ω "–ê–¥–∞–ø—Ç–µ—Ä" –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è?',
    a: '''
–ê–¥–∞–ø—Ç–µ—Ä (Adapter) ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç–∞–º —Å –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤–º–µ—Å—Ç–µ.
–û–Ω –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –æ–¥–∏–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –¥—Ä—É–≥–æ–π, –æ–∂–∏–¥–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç–æ–º.
–ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–π –∫–æ–¥, —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–ª–∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.

// Data layer: –æ—Ç–≤–µ—Ç –æ—Ç API

class UserDto {
  final String id;
  final String name;
  final String email;

  UserDto({required this.id, required this.name, required this.email});
}

// Domain layer: –±–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å, –Ω–µ–∑–∞–≤–∏—Å–∏–º–∞—è –æ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö

class User {
  final String userId;
  final String fullName;

  User({required this.userId, required this.fullName});
}

// –ê–¥–∞–ø—Ç–µ—Ä: –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç DTO –≤ Domain-–º–æ–¥–µ–ª—å

class UserDtoAdapter {
  static User toDomain(UserDto dto) {
    return User(
      userId: dto.id,
      fullName: dto.name,
    );
  }
}

''',
  ),

  QA(
    q: '–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω Adapter –æ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–∞ Decorator?',
    a: '''
Adapter –∏–∑–º–µ–Ω—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±—ä–µ–∫—Ç–∞, —á—Ç–æ–±—ã –æ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª –¥—Ä—É–≥–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É.
Decorator —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.

Adapter = "–ø–µ—Ä–µ–≤–æ–¥–∏—Ç" –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å,
Decorator = "–æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç" —Å –¥–æ–±–∞–≤–∫–∞–º–∏.
''',
  ),

  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ç—Ç–µ—Ä–Ω "–ú–æ—Å—Ç" –∏ –≤ —á—ë–º –µ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ?',
    a: '''
–ü–∞—Ç—Ç–µ—Ä–Ω "–ú–æ—Å—Ç" (Bridge) ‚Äî —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–¥–µ–ª—è–µ—Ç –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é –æ—Ç –µ—ë —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –ø–æ–∑–≤–æ–ª—è—è –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞.

–û–Ω –ø–æ–ª–µ–∑–µ–Ω, –∫–æ–≥–¥–∞:
- –Ω—É–∂–Ω–æ –∏–∑–±–µ–∂–∞—Ç—å –∂—ë—Å—Ç–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–µ–π –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π,
- –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ,
- –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–º–ø–æ–∑–∏—Ü–∏—è –≤–º–µ—Å—Ç–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.

–ü—Ä–∏–º–µ—Ä: UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è) –∏ —Ä–∞–∑–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ —Ä–µ–Ω–¥–µ—Ä–µ—Ä—ã (—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è).
''',
  ),

  QA(
    q: '–ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ Bridge –≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ Flutter-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.',
    a: '''
Bridge –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, REST –∏ Firebase):

–ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è:
abstract class UserRepository {
  Future<User> getUser();
}

–†–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
class RestUserRepository implements UserRepository { ... }
class FirebaseUserRepository implements UserRepository { ... }

ViewModel –∑–∞–≤–∏—Å–∏—Ç –æ—Ç UserRepository, –Ω–æ –Ω–µ –∑–Ω–∞–µ—Ç, –∫–∞–∫–∞—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ‚Äî —ç—Ç–æ –∏ –µ—Å—Ç—å "–º–æ—Å—Ç".
''',
  ),

  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ç—Ç–µ—Ä–Ω "–ö–æ–º–ø–æ–Ω–æ–≤—â–∏–∫" (Composite)?',
    a: '''
–û–±–ª–µ–≥—á–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∏–µ—Ä–∞—Ä—Ö–∏–π –æ–±—ä–µ–∫—Ç–æ–≤, –≥–¥–µ –∫–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç –º–æ–∂–µ—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –∏–ª–∏ –∫–∞–∫ –Ω–∞–±–æ—Ä –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
''',
  ),

  QA(
    q: '–ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ Composite –≤–æ Flutter.',
    a: '''
Flutter —Å–∞–º —Ä–µ–∞–ª–∏–∑—É–µ—Ç Composite –≤ –¥–µ—Ä–µ–≤–µ –≤–∏–¥–∂–µ—Ç–æ–≤:

- `Widget` ‚Äî –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
- `Text`, `Image` ‚Äî –ª–∏—Å—Ç–æ–≤—ã–µ (–ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–µ) —É–∑–ª—ã.
- `Column`, `Row`, `Stack` ‚Äî —Å–æ—Å—Ç–∞–≤–Ω—ã–µ (–∫–æ–º–ø–æ–∑–∏—Ç–Ω—ã–µ) –≤–∏–¥–∂–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –¥—Ä—É–≥–∏–µ –≤–∏–¥–∂–µ—Ç—ã.

–í—Å–µ –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ –≤–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–µ, —á–µ—Ä–µ–∑ –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å `Widget`.

Composite –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –≥–∏–±–∫–∏–µ –∏–µ—Ä–∞—Ä—Ö–∏–∏ —Å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å—é –±–µ–∑ –≤–∑—Ä—ã–≤–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –ø–æ–¥–∫–ª–∞—Å—Å–æ–≤.

–û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–º–ø–æ–∑–∏—Ü–∏—é (–æ–±—ä–µ–∫—Ç—ã –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–æ–≤), –∞ –Ω–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, –∏ –¥–µ–ª–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ–π –∏ –ª–µ–≥–∫–æ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º–æ–π.
''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ç—Ç–µ—Ä–Ω "–î–µ–∫–æ—Ä–∞—Ç–æ—Ä" –∏ –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω?',
    a: '''
–ü–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –æ–±—ä–µ–∫—Ç–∞–º –Ω–æ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –Ω–µ –∏–∑–º–µ–Ω—è—è –∏—Ö –∏—Å—Ö–æ–¥–Ω—ã–π –∫–ª–∞—Å—Å.

–û–Ω –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç –≤ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç —Å —Ç–µ–º –∂–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º, –Ω–æ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º.

–ü—Ä–∏–º–µ—Ä: –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ, –≤–∞–ª–∏–¥–∞—Ü–∏—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏.

Flutter —Å–∞–º –∞–∫—Ç–∏–≤–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω –î–µ–∫–æ—Ä–∞—Ç–æ—Ä: –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤–∏–¥–∂–µ—Ç–æ–≤ UI –æ–±–æ—Ä–∞—á–∏–≤–∞—é—Ç—Å—è –≤ –¥—Ä—É–≥–∏–µ –≤–∏–¥–∂–µ—Ç—ã.

–ü—Ä–∏–º–µ—Ä—ã:
- Padding(child: ...)
- Center(child: ...)
- DecoratedBox(child: ...)
- Scrollbar(child: ListView(...))

–í—Å–µ –æ–Ω–∏ –¥–æ–±–∞–≤–ª—è—é—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ/–≤–∏–∑—É–∞–ª –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞.
''',
  ),

  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ç—Ç–µ—Ä–Ω "–§–∞—Å–∞–¥"?',
    a: '''
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–ø—Ä–æ—â—ë–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ —Å–ª–æ–∂–Ω–æ–π –ø–æ–¥—Å–∏—Å—Ç–µ–º–µ.

–û–Ω —Å–∫—Ä—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –æ–±—ä–µ–∫—Ç–∞–º–∏, –ø–æ–∑–≤–æ–ª—è—è –∫–ª–∏–µ–Ω—Ç—É —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–∏—Å—Ç–µ–º–æ–π —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π, —É–¥–æ–±–Ω—ã–π API.

–ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –¥–ª—è:
- —É–º–µ–Ω—å—à–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞,
- –∏–∑–æ–ª—è—Ü–∏–∏ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏,
- —É–ø—Ä–æ—â–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.

–ü—Ä–∏–º–µ—Ä: –µ–¥–∏–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.

class AuthFacade {
  final FirebaseAuthService _firebase;
  final GoogleSignInService _google;

  AuthFacade(this._firebase, this._google);

  Future<User> signInWithGoogle() async {
    final googleToken = await _google.getToken();
    return await _firebase.signInWithGoogleToken(googleToken);
  }

  Future<void> logout() async {
    await _firebase.logout();
    await _google.logout();
  }
}

–í UI –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ AuthFacade ‚Äî –æ—Å—Ç–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä—ã—Ç–∞.
''',
  ),

  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ç—Ç–µ—Ä–Ω "Flyweight"?',
    a: '''
–ø–æ–∑–≤–æ–ª—è–µ—Ç —ç–∫–æ–Ω–æ–º–∏—Ç—å –ø–∞–º—è—Ç—å –∑–∞ —Å—á—ë—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.

–í Dart —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç `static` –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ FlyweightFactory, –ø–æ—Ç–æ–º—É —á—Ç–æ:

- —É–¥–æ–±–Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã –≤ `static Map`;
- –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Å—Ç–∞–Ω—Å–∞ —Ñ–∞–±—Ä–∏–∫–∏.
''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ç—Ç–µ—Ä–Ω "–ü—Ä–æ–∫—Å–∏"?',
    a: '''
–ü—Ä–æ–∫—Å–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø–æ–º –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É, –ø–æ–∑–≤–æ–ª—è—è –¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –¥–æ –∏–ª–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –Ω–µ–º—É

Interceptor –≤ Dio –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞–∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø–∞—Ç—Ç–µ—Ä–Ω–∞ Proxy , –Ω–æ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –Ω—é–∞–Ω—Å–∞–º–∏.
''',
  ),

  QA(
    q: '''–ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è''',
    a: '''

## –ü–æ—Ä–æ–∂–¥–∞—é—â–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (Creational) 5 —à—Ç

- –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞ ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–µ–º–µ–π—Å—Ç–≤–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–µ –ø—Ä–∏–≤—è–∑—ã–≤–∞—è—Å—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∫–ª–∞—Å—Å–∞–º —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
- –§–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Å—É–ø–µ—Ä–∫–ª–∞—Å—Å–µ, –ø–æ–∑–≤–æ–ª—è—è –ø–æ–¥–∫–ª–∞—Å—Å–∞–º –∏–∑–º–µ–Ω—è—Ç—å —Ç–∏–ø —Å–æ–∑–¥–∞–≤–∞–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
- Singleton ‚Äî  –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —É –∫–ª–∞—Å—Å–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä, –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫ –Ω–µ–º—É –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É –¥–æ—Å—Ç—É–ø–∞.
- Builder ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø–æ—à–∞–≥–æ–≤–æ. –°—Ç—Ä–æ–∏—Ç–µ–ª—å –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∫–æ–¥ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π –æ–±—ä–µ–∫—Ç–æ–≤.
- Prototype ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã, –Ω–µ –≤–¥–∞–≤–∞—è—Å—å –≤ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∏—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.

## –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (Structural) 7 —à—Ç

- Adapter ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç–∞–º —Å –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–º–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –≤–º–µ—Å—Ç–µ.
- Decorator ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –æ–±—ä–µ–∫—Ç–∞–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, –æ–±–æ—Ä–∞—á–∏–≤–∞—è –∏—Ö –≤ –ø–æ–ª–µ–∑–Ω—ã–µ ¬´–æ–±—ë—Ä—Ç–∫–∏¬ª.
- Facade ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫ —Å–ª–æ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.
- Composite ‚Äî  –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –∞ –∑–∞—Ç–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–µ–π —Ç–∞–∫, –∫–∞–∫ –±—É–¥—Ç–æ —ç—Ç–æ –µ–¥–∏–Ω–∏—á–Ω—ã–π –æ–±—ä–µ–∫—Ç.
- Proxy (–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å) ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å –≤–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã-–∑–∞–º–µ–Ω–∏—Ç–µ–ª–∏. –≠—Ç–∏ –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—é—Ç –≤—ã–∑–æ–≤—ã –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É, –ø–æ–∑–≤–æ–ª—è—è —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –¥–æ –∏–ª–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ –≤—ã–∑–æ–≤–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—É.
- –ú–æ—Å—Ç - —Ä–∞–∑–¥–µ–ª—è–µ—Ç –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∞—Å—Å–æ–≤ –Ω–∞ –¥–≤–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∏–µ—Ä–∞—Ä—Ö–∏–∏ ‚Äî –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—é –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é, –ø–æ–∑–≤–æ–ª—è—è –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞.
- –õ–µ–≥–∫–æ–≤–µ—Å ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–º–µ—Å—Ç–∏—Ç—å –±√≥–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –æ—Ç–≤–µ–¥—ë–Ω–Ω—É—é –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–º—è—Ç—å. –õ–µ–≥–∫–æ–≤–µ—Å —ç–∫–æ–Ω–æ–º–∏—Ç –ø–∞–º—è—Ç—å, —Ä–∞–∑–¥–µ–ª—è—è –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –º–µ–∂–¥—É —Å–æ–±–æ–π, –≤–º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞–∂–¥–æ–º –æ–±—ä–µ–∫—Ç–µ.

## –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã (Behavioral) 10 —à—Ç

- Observer ‚Äî —Å–æ–∑–¥–∞—ë—Ç –º–µ—Ö–∞–Ω–∏–∑–º –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –æ–¥–Ω–∏–º –æ–±—ä–µ–∫—Ç–∞–º —Å–ª–µ–¥–∏—Ç—å –∏ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Å–æ–±—ã—Ç–∏—è, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–µ –≤ –¥—Ä—É–≥–∏—Ö –æ–±—ä–µ–∫—Ç–∞—Ö.
- Command ‚Äî –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –≤ –æ–±—ä–µ–∫—Ç—ã, –ø–æ–∑–≤–æ–ª—è—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–æ–≤, —Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã –≤ –æ—á–µ—Ä–µ–¥—å, –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏—Ö, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ—Ç–º–µ–Ω—É –æ–ø–µ—Ä–∞—Ü–∏–π.
- State ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç–∞–º –º–µ–Ω—è—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–≤–æ–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –ò–∑–≤–Ω–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª—Å—è –∫–ª–∞—Å—Å –æ–±—ä–µ–∫—Ç–∞.
- Strategy ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–µ–º–µ–π—Å—Ç–≤–æ —Å—Ö–æ–∂–∏—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –∏ –ø–æ–º–µ—â–∞–µ—Ç –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å, –ø–æ—Å–ª–µ —á–µ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º—ã –º–æ–∂–Ω–æ –≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è—Ç—å –ø—Ä—è–º–æ –≤–æ –≤—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã.
- Mediator (–ü–æ—Å—Ä–µ–¥–Ω–∏–∫) ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–º–µ–Ω—å—à–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω–æ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–æ–≤ –º–µ–∂–¥—É —Å–æ–±–æ–π, –±–ª–∞–≥–æ–¥–∞—Ä—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—é —ç—Ç–∏—Ö —Å–≤—è–∑–µ–π –≤ –æ–¥–∏–Ω –∫–ª–∞—Å—Å-–ø–æ—Å—Ä–µ–¥–Ω–∏–∫.
- –ò—Ç–µ—Ä–∞—Ç–æ—Ä ‚Äî –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ö–æ–¥–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ—Å—Ç–∞–≤–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è –∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è.
- –®–∞–±–ª–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–∫–µ–ª–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º–∞, –ø–µ—Ä–µ–∫–ª–∞–¥—ã–≤–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –µ–≥–æ —à–∞–≥–∏ –Ω–∞ –ø–æ–¥–∫–ª–∞—Å—Å—ã. –ü–∞—Ç—Ç–µ—Ä–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–∫–ª–∞—Å—Å–∞–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —à–∞–≥–∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∞, –Ω–µ –º–µ–Ω—è—è –µ–≥–æ –æ–±—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
- –¶–µ–ø–æ—á–∫–∞ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ø–æ —Ü–µ–ø–æ—á–∫–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. –ö–∞–∂–¥—ã–π –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—à–∞–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –æ–Ω –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å —Å–∞–º –∏ —Å—Ç–æ–∏—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –¥–∞–ª—å—à–µ –ø–æ —Ü–µ–ø–∏.
- –ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –Ω–µ –∏–∑–º–µ–Ω—è—è –∫–ª–∞—Å—Å—ã –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º–∏ —ç—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è.
- –°–Ω–∏–º–æ–∫ ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –ø—Ä–æ—à–ª—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤, –Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –∏—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.

''',
  ),

  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞?',
    a: '''

–ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–µ–º–µ–π—Å—Ç–≤–∞ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∏—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤.

class AndroidButton implements Button {}
class IosButton implements Button {}

abstract class CheckBox {}

class AndroidCheckBox implements CheckBox {}
class IosCheckBox implements CheckBox {}

abstract class WidgetFactory {}

class AndroidWidgetFactory implements WidgetFactory {
  AndroidButton createButton() => AndroidButton();
  AndroidCheckBox createCheckBox() => AndroidCheckBox();
}

class IosWidgetFactory implements WidgetFactory {
  IosButton createButton() => IosButton();
  IosCheckBox createCheckBox() => IosCheckBox();
}

void main() {
  final widgetFactory = IosWidgetFactory();
  final button = widgetFactory.createButton();
  final checkBox = widgetFactory.createCheckBox();
}

''',
  ),

  QA(
    q: '''–ß—Ç–æ —Ç–∞–∫–æ–µ –§–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥?''',
    a: '''
–¥–µ–ª–µ–≥–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ–¥–∫–ª–∞—Å—Å–∞–º,

abstract class NotificationWidget {}
class SuccessNotification extends NotificationWidget {}
class ErrorNotification extends NotificationWidget {}

enum NotificationType { success, error }

class NotificationFactory {
  static NotificationWidget create(NotificationType type) {
    switch (type) {
      case NotificationType.success:
        return SuccessNotification();
      case NotificationType.error:
        return ErrorNotification();
    }
  }
}

''',
  ),
  QA(
    q: '–ü–∞—Ç—Ç–µ—Ä–Ω –º–µ–¥–∏–∞—Ç–æ—Ä',
    a: r'''

// –ú–µ–¥–∏–∞—Ç–æ—Ä - —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑—É–µ—Ç –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
abstract class ChatMediator {
  void sendMessage(String message, User sender);
  void addUser(User user);
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–µ–¥–∏–∞—Ç–æ—Ä
class ChatRoom implements ChatMediator {
  final List<User> _users = [];

  @override
  void addUser(User user) {
    _users.add(user);
  }

  @override
  void sendMessage(String message, User sender) {
    // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∫—Ä–æ–º–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    for (final user in _users) {
      if (user != sender) {
        user.receiveMessage(message, sender.name);
      }
    }
  }
}

// –ö–æ–ª–ª–µ–≥–∏ - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—â–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –º–µ–¥–∏–∞—Ç–æ—Ä
abstract class User {
  final String name;
  final ChatMediator mediator;

  User(this.name, this.mediator);

  void send(String message) {
    print('$name –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç: $message');
    mediator.sendMessage(message, this);
  }

  void receiveMessage(String message, String senderName) {
    print('$name –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç $senderName: $message');
  }
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–æ–ª–ª–µ–≥–∏
class RegularUser extends User {
  RegularUser(String name, ChatMediator mediator) : super(name, mediator);
}

class AdminUser extends User {
  AdminUser(String name, ChatMediator mediator) : super(name, mediator);

  @override
  void send(String message) {
    print('–ê–¥–º–∏–Ω $name –æ–±—ä—è–≤–ª—è–µ—Ç: $message');
    mediator.sendMessage('[ADMIN] $message', this);
  }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
void main() {
  final chatRoom = ChatRoom();

  final user1 = RegularUser('Alice', chatRoom);
  final user2 = RegularUser('Bob', chatRoom);
  final admin = AdminUser('Admin', chatRoom);

  chatRoom.addUser(user1);
  chatRoom.addUser(user2);
  chatRoom.addUser(admin);

  user1.send('–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!');
  // Output:
  // Alice –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç: –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!
  // Bob –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Alice: –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!
  // Admin –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Alice: –ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!

  admin.send('–°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞');
  // Output:
  // –ê–¥–º–∏–Ω Admin –æ–±—ä—è–≤–ª—è–µ—Ç: –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞
  // Alice –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Admin: [ADMIN] –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞
  // Bob –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Admin: [ADMIN] –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞
}

''',
  ),
];



// QA(q: '''''', a: r'''
// '''),