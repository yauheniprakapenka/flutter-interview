// ignore_for_file: unnecessary_string_escapes, unnecessary_raw_strings

import '../model/qa_model.dart';

const List<QA> dartInterviewQuestions = [
  QA(
    tags: [Tag.dart],
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É final –∏ const?',
    a: '''
üéØ final —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤–æ –≤—Ä–µ–º—è runtime.

final String userName = getUserName(); // –ó–Ω–∞—á–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—Å—è –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏
final DateTime now = DateTime.now();   // –ö–∞–∂–¥—ã–π —Ä–∞–∑ —Ä–∞–∑–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
final List<int> numbers = [1, 2, 3];   // –°–ø–∏—Å–æ–∫ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å

üéØ const —Å–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–∑–≤–µ—Å—Ç–Ω–æ –Ω–∞ —ç—Ç–∞–ø–µ compile-time –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è.

const String appName = 'MyApp';
const int maxUsers = 100;
const Duration timeout = Duration(seconds: 30);

üíæ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏:

final list1 = [1, 2, 3];        // –ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
final list2 = [1, 2, 3];        // –ï—â–µ –æ–¥–∏–Ω –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
print(identical(list1, list2)); // false


const list1 = [1, 2, 3];  // –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
const list2 = [1, 2, 3];  // –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç
print(identical(list1, list2)); // true - —ç–∫–æ–Ω–æ–º–∏—è –ø–∞–º—è—Ç–∏!
  ''',
  ),
  QA(
    tags: [Tag.dart, Tag.future],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Future –∏ async/await?',
    a: '''
Future –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–æ –≤ –±—É–¥—É—â–µ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏).
–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ async –∏ await —É–ø—Ä–æ—â–∞—é—Ç —Ä–∞–±–æ—Ç—É —Å Future: async –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é Future,
–∞ await "–ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç" –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ extension?',
    a: '''
–º–µ—Ö–∞–Ω–∏–∑–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ç–∏–ø–∞–º –±–µ–∑ –∏—Ö –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏.

extension ExtensionName on TargetType {
  // –º–µ—Ç–æ–¥—ã, –≥–µ—Ç—Ç–µ—Ä—ã, —Å–µ—Ç—Ç–µ—Ä—ã, –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
}

extension StringX on String {
  String get capitalize {
    if (isEmpty) return this;
    return this[0].toUpperCase() + substring(1);
  }
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä ?? –∏ ??=',
    a: '''
??  –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤—ã–π –æ–ø–µ—Ä–∞–Ω–¥, –µ—Å–ª–∏ –ª–µ–≤—ã–π —Ä–∞–≤–µ–Ω null. –ù–∞–ø—Ä–∏–º–µ—Ä: a ?? b.
??= –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ —Ä–∞–≤–Ω–∞ null, –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—à–∏–±–∫–∏ –≤ Dart?',
    a: 'Dart –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é try-catch-finally –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Ç–∏–ø—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π –∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å —Å–≤–æ–∏ —Å –ø–æ–º–æ—â—å—é `throw`.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è var, dynamic –∏ Object?',
    a: '''
var     ‚Üí —Ç–∏–ø –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º –æ–¥–∏–Ω —Ä–∞–∑ –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, –¥–∞–ª—å—à–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –Ω–µ–ª—å–∑—è. –û—à–∏–±–∫–∏ –±—É–¥—É—Ç –Ω–∞ —ç—Ç–∞–ø–µ compile-time.
dynamic ‚Üí –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ª—é–±—ã—Ö —Ç–∏–ø–æ–≤ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç, –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –Ω–∞ runtime. –û—à–∏–±–∫–∏ –ª–æ–≤—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ runtime.


üéØ var - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥ —Ç–∏–ø–∞. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ç–∏–ø–æ–≤.

–ö–æ–≥–¥–∞ –≤—ã –ø–∏—à–µ—Ç–µ var x = 42, Dart –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞ —ç—Ç–∞–ø–µ compile-time.
var x = 42;   // x —Ç–µ–ø–µ—Ä—å –∏–º–µ–µ—Ç —Ç–∏–ø int –ù–ê–í–°–ï–ì–î–ê
x = 'hello';  // ‚ùå –û–®–ò–ë–ö–ê! –ù–µ–ª—å–∑—è –ø—Ä–∏—Å–≤–æ–∏—Ç—å String –≤ int
x = 3.14;     // ‚ùå –û–®–ò–ë–ö–ê! –ù–µ–ª—å–∑—è –ø—Ä–∏—Å–≤–æ–∏—Ç—å double –≤ int
x = 100;      // ‚úÖ –û–ö, —ç—Ç–æ —Ç–æ–∂–µ int


üéØ dynamic - –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ç–∏–ø–æ–≤. –ü–æ—Ç–µ—Ä—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.

dynamic –≥–æ–≤–æ—Ä–∏—Ç Dart: "–ù–µ –ø—Ä–æ–≤–µ—Ä—è–π —Ç–∏–ø—ã, —è —Å–∞–º –∑–Ω–∞—é —á—Ç–æ –¥–µ–ª–∞—é". –¢–∏–ø –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç.
dynamic y = 42;        // –°–µ–π—á–∞—Å int
print(y.runtimeType);  // int

y = 'hello';           // –¢–µ–ø–µ—Ä—å String
print(y.runtimeType);  // String

y = [1, 2, 3];         // –¢–µ–ø–µ—Ä—å List<int>
print(y.runtimeType);  // List<int>

y = true;              // –¢–µ–ø–µ—Ä—å bool
print(y.runtimeType);  // bool

dynamic - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏:

dynamic obj = 'hello';
// –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –ù–ï –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —ç—Ç–∏ –≤—ã–∑–æ–≤—ã:
obj.someMethod();      // –ö–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è, –Ω–æ —É–ø–∞–¥–µ—Ç –≤ runtime
obj.nonExistentField;  // –ö–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è, –Ω–æ —É–ø–∞–¥–µ—Ç –≤ runtime
int result = obj + 10; // –ö–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è, –Ω–æ —É–ø–∞–¥–µ—Ç –≤ runtime


üéØ Object - —ç—Ç–æ –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö non-nullable —Ç–∏–ø–æ–≤.

// Object - —è–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ "–ª—é–±–æ–π non-null —Ç–∏–ø"
Object obj1 = 42; // int
Object obj2 = 'hello'; // String
Object obj3 = [1, 2, 3]; // List<int>

Object obj4 = null;      // ‚ùå –û–®–ò–ë–ö–ê! Object –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null

–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ç–∏–ø–æ–≤ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
obj1.someMethod();       // ‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
obj1 + 10;               // ‚ùå –û–®–ò–ë–ö–ê –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏

–ù–æ –º–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∫–∞—Å—Ç–æ–≤–∞—Ç—å —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
if (obj1 is int) { // –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–∫–∞ The operator '+' isn't defined for the type 'Object'.
  print(obj1 + 10); // ‚úÖ –û–ö, —Ç–∏–ø –ø—Ä–æ–≤–µ—Ä–µ–Ω
}


// Object? –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å null
Object? nullableObj = null;  // ‚úÖ –û–ö
nullableObj = 42;           // ‚úÖ –û–ö
nullableObj = 'hello';      // ‚úÖ –û–ö

// –¢—Ä–µ–±—É–µ—Ç null-–ø—Ä–æ–≤–µ—Ä–∫–∏
if (nullableObj != null) {
  print(nullableObj.toString()); // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø
}


‚öñÔ∏è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞:

- var - –∫–æ–≥–¥–∞ —Ç–∏–ø –æ—á–µ–≤–∏–¥–µ–Ω –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø (int, String) - –∫–æ–≥–¥–∞ —Ç–∏–ø –∏–∑–≤–µ—Å—Ç–µ–Ω
- Object/Object? - –¥–ª—è –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é
- dynamic - —Ç–æ–ª—å–∫–æ –≤ –∫—Ä–∞–π–Ω–∏—Ö —Å–ª—É—á–∞—è—Ö (FFI, JSON, JS interop)

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ late?',
    a: '–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä `late` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö. –≠—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —Å—Ä–∞–∑—É, –Ω–æ —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω–æ –¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –µ—Å—Ç—å —Å–ø–æ—Å–æ–±—ã –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º?',
    a: '''
üéØ 1. for - –∫–æ–≥–¥–∞ –Ω—É–∂–µ–Ω –∏–Ω–¥–µ–∫—Å

for (var i = 0; i < list.length; i++) {
  print(list[i]);
}

üéØ 2. for-in - –∫–æ–≥–¥–∞ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç

for (final value in list) {
  print(value);
}

üéØ 3. forEach - –ú–µ—Ç–æ–¥ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç callback. –ú–µ–Ω–µ–µ —É–¥–æ–±–µ–Ω –¥–ª—è break/continue.

list.forEach((value) => print(value));

üéØ 4. –ò—Ç–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ Iterable API - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∫–∞–∫ .map, .where, .fold, .reduce –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–±—Ö–æ–¥–∞.

list.map((e) => e * 2).forEach(print);

üéØ 5. while / do-while
–ì–∏–±–∫–æ, –Ω–æ —á–∞—â–µ –∏–∑–±—ã—Ç–æ—á–Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π.

var i = 0;
while (i < list.length) {
  print(list[i++]);
}

üéØ 6. iterator –≤—Ä—É—á–Ω—É—é
–ü—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ Iterator –¥–ª—è —Ç–æ–Ω–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è.

final it = list.iterator;
while (it.moveNext()) {
  print(it.current);
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ const –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä?',
    a: '''
const –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å compile-time –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è.
Const-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç Dart –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, —á—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥ –ø–∞–º—è—Ç–∏.''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É static –∏ instance –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏ –º–µ—Ç–æ–¥–∞–º–∏?',
    a: '`static` –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –º–µ—Ç–æ–¥—ã –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç —Å–∞–º–æ–º—É –∫–ª–∞—Å—Å—É –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞. Instance-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã?',
    a: '''
–î–∞, –≤ Dart –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ operator.

–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã:
+ - * / ~/ % << >> & | ^ < > <= >= == [] []= unary- unary~

class Vector2D {
  final double x, y;

  const Vector2D(this.x, this.y);

  // –ê—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
  Vector2D operator +(Vector2D other) => Vector2D(x + other.x, y + other.y);
  Vector2D operator -(Vector2D other) => Vector2D(x - other.x, y - other.y);
  Vector2D operator *(double scalar) => Vector2D(x * scalar, y * scalar);
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ tear-off –≤ Dart?',
    a: '''
Tear-off ‚Äî —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–µ—Ç–æ–¥ –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ –≤—ã–∑–æ–≤–∞.

// –û–±—ã—á–Ω—ã–π –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞
print('Hello'); // –≤—ã–∑–æ–≤

// Tear-off - —Å—Å—ã–ª–∫–∞ –Ω–∞ –º–µ—Ç–æ–¥
var printFunction = print; // tear-off

printFunction('Hello'); // —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π (immutable) –æ–±—ä–µ–∫—Ç –≤ Dart?',
    a: '–°–æ–∑–¥–∞—Ç—å immutable-–æ–±—ä–µ–∫—Ç –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é `final` –ø–æ–ª–µ–π –∏ `const` –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ typedef?',
    a: '''
`typedef` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞ —Ç–∏–ø–∞ —Ñ—É–Ω–∫—Ü–∏–∏. –≠—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç —á—Ç–µ–Ω–∏–µ –∫–æ–¥–∞.
–ü—Ä–∏–º–µ—Ä: `typedef IntCallback = void Function(int value);`.


typedef MyString = String;
MyString name = 'Hello';
MyString –∏ String –¥–ª—è Dart –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ. –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –Ω–µ –±—É–¥–µ—Ç –∏—Ö —Ä–∞–∑–ª–∏—á–∞—Ç—å.
–¢–∞–∫–æ–π –∞–ª–∏–∞—Å –∏–º–µ–µ—Ç —Å–º—ã—Å–ª —Ç–æ–ª—å–∫–æ –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ String –≤ –∫–æ–¥–µ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å–µ–º–∞–Ω—Ç–∏–∫—É: typedef UserId = String

üéØ –ü–æ–ª–µ–∑–Ω–æ –ø—Ä–∏ –¥–ª–∏–Ω–Ω—ã—Ö generic-—Ç–∏–ø–∞—Ö.

typedef IntMap = Map<String, int>;
IntMap scores = {'Alice': 10, 'Bob': 20};

üéØ –°–æ–∑–¥–∞–µ—Ç –ø—Å–µ–≤–¥–æ–Ω–∏–º—ã (aliases) —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∏–ø–æ–≤.

typedef ValueChanged<T> = void Function(T value);
typedef VoidCallback = void Function();

typedef IntList = List<int>;
typedef StringCallback = void Function(String);

void main() {
  List<int> list1 = [1, 2, 3];
  IntList list2 = [1, 2, 3];

  // –≠—Ç–æ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ç–∏–ø!
  print(list1.runtimeType == list2.runtimeType); // true

  // –ú–æ–∂–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥—É –±–µ–∑ –∫–∞—Å—Ç–∞
  list1 = list2;
  list2 = list1;
}
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä `as` –∏ —á–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç `is`?',
    a: '`is` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–∏–ø –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: `obj is String`. `as` –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞ –∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ: `obj as String`.',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ enum –∏ –º–æ–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –∫ –Ω–∏–º –º–µ—Ç–æ–¥—ã?',
    a: r'''
—ç—Ç–æ —Ç–∏–ø, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç.

–° Dart 2.17 –ø–æ—è–≤–∏–ª–∏—Å—å —É–ª—É—á—à–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è (enhanced enums), –ø–æ–∑–≤–æ–ª—è—é—â–∏–µ:
- –î–æ–±–∞–≤–ª—è—Ç—å –ø–æ–ª—è (–≤–∫–ª—é—á–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã, –≥–µ—Ç—Ç–µ—Ä—ã, —Å–µ—Ç—Ç–µ—Ä—ã)
- –û–ø—Ä–µ–¥–µ–ª—è—Ç—å –º–µ—Ç–æ–¥—ã
- –ò–º–µ—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, int, String)

enum Status {
  pending('–í –æ–∂–∏–¥–∞–Ω–∏–∏'),
  inProgress('–í –ø—Ä–æ—Ü–µ—Å—Å–µ'),
  done('–ì–æ—Ç–æ–≤–æ');

  final String label;
  const Status(this.label);

  bool get isFinal => this == Status.done;

  void log() => print('–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: $label');
}

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç factory –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä?',
    a: r'''
Factory-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø—Ä–æ—Ü–µ—Å—Å–æ–º —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ –∏ –º–æ–∂–µ—Ç:

- –í–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—ä–µ–∫—Ç
- –í—ã–ø–æ–ª–Ω—è—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º
- –í–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–æ–¥–∫–ª–∞—Å—Å—ã –∏–ª–∏ —Ä–∞–∑–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏


–ú–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–æ–¥–∫–ª–∞—Å—Å—ã

abstract class Animal {
  void speak();

  factory Animal(String type) {
    switch (type) {
      case 'dog':
        return Dog();
      case 'cat':
        return Cat();
      default:
        throw ArgumentError('Unknown animal type: $type');
    }
  }
}

// –ü–æ–¥–∫–ª–∞—Å—Å—ã
class Dog implements Animal {
  @override
  void speak() => print("Woof!");
}

class Cat implements Animal {
  @override
  void speak() => print("Meow!");
}

void main() {
  Animal a1 = Animal('dog'); // –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω–µ—Ç—Å—è Dog
  Animal a2 = Animal('cat'); // –§–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω–µ—Ç—Å—è Cat

  a1.speak(); // Woof!
  a2.speak(); // Meow!
}


–≤ factory –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ª—é–±—É—é –ª–æ–≥–∏–∫—É ‚Äî —ç—Ç–æ –æ–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å—Ç–æ –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞.

class User {
  final String name;
  final String email;
  final bool isValid;

  User(this.name, this.email, this.isValid);

  factory User(String name, String email) {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (name.isEmpty) {
      throw ArgumentError('Name cannot be empty');
    }

    return User(name, email, true);
  }
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–ª–∞—Å—Å–æ–≤ –≤ Dart?',
    a: '–ù–µ—Ç, Dart –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω–æ—á–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ. –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å mixin.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è –æ–±—ä–µ–∫—Ç—ã?',
    a: '''
1. –ü–æ —Å—Å—ã–ª–∫–µ (identical)

final a = [1, 2, 3];
final b = [1, 2, 3];
final c = a;

print(identical(a, b)); // false - —Ä–∞–∑–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
print(identical(a, c)); // true - —Ç–∞ –∂–µ —Å—Å—ã–ª–∫–∞
print(a == b);          // false - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ —Å—Å—ã–ª–∫–µ



2. –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ == –∏ hashCode

class Person {
  final String name;
  final int age;

  Person(this.name, this.age);

  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;        // 1 identical
    if (other is! Person) return false;             // 2 type
    return name == other.name && age == other.age;  // 3 fields
  }

  @override
  int get hashCode => name.hashCode ^ age.hashCode; // hashcode fields
}

–ü–æ—Å–ª–µ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è == –∏ hashCode:

final p1 = Person('John', 25);
final p2 = Person('John', 25);
print(p1 == p2); // true

–ë–µ–∑ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è == –∏ hashCode –±—É–¥–µ—Ç false


–ü—Ä–∞–≤–∏–ª–æ: –í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–π hashCode –ø—Ä–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ ==, –∏–Ω–∞—á–µ –æ–±—ä–µ–∫—Ç—ã –Ω–µ –±—É–¥—É—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ Set, Map –∏ –¥—Ä—É–≥–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –µ—Å—Ç—å —Å–ø–æ—Å–æ–±—ã —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π?',
    a: '''
üéØ 1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `const` –¥–ª—è –ª–∏—Ç–µ—Ä–∞–ª–æ–≤: `const list = [1, 2]`.

üéØ 2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Unmodifiable –∫–ª–∞—Å—Å—ã –∏–∑ `package:collection`, –Ω–∞–ø—Ä–∏–º–µ—Ä `UnmodifiableListView`.

üéØ 3. –° Dart 2.17+: `List.unmodifiable()`
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç getter –∏ setter?',
    a: r'''
Getter –∏ setter ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –∫–ª–∞—Å—Å–∞.

Getter/setter –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—é –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞, –æ—Å—Ç–∞–≤–∞—è—Å—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏ –ø—Ä–æ—Å—Ç—ã–º–∏ –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞.

class User {
  String _name; // –ü—Ä–∏–≤–∞—Ç–Ω–æ–µ –ø–æ–ª–µ

  User(this._name);

  String get name => _name; // Getter - –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è

  set name(String value) { // Setter - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è
    if (value.isEmpty) throw ArgumentError('Name cannot be empty');
    _name = value;
  }
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –µ—Å—Ç—å –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏?',
    a: '''

–í —è–∑—ã–∫–µ Dart –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ (–∏–ª–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ) ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –º–∞—Ä–∫–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É,
–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (IDE), –∞ —Ç–∞–∫–∂–µ –¥—Ä—É–≥–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º. –û–Ω–∏ –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞, –Ω–æ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞,
–∞–Ω–∞–ª–∏–∑–∞, –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –¥—Ä—É–≥–∏—Ö —Ü–µ–ª–µ–π.

üîß –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ Dart

üéØ 1. @override - –£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –º–µ—Ç–æ–¥, –≥–µ—Ç—Ç–µ—Ä –∏–ª–∏ —Å–µ—Ç—Ç–µ—Ä –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—É–ø–µ—Ä–∫–ª–∞—Å—Å.

class Parent {
  void doSomething() {}
}

class Child extends Parent {
  @override
  void doSomething() {
    // –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
  }
}

üéØ 2. @deprecated - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ –∫–æ–¥–∞.

@deprecated
void oldMethod() {}

üéØ 3. @protected - –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Å–∞–º–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏–ª–∏ –µ–≥–æ –ø–æ–¥–∫–ª–∞—Å—Å–æ–≤
–¢—Ä–µ–±—É–µ—Ç –∏–º–ø–æ—Ä—Ç–∞: package:meta/meta.dart

class Vehicle {
  @protected
  void startEngine() {
    print('Engine started');
  }
}

class Car extends Vehicle {
  void drive() {
    startEngine(); // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ protected –º–µ—Ç–æ–¥–∞ –≤ –ø–æ–¥–∫–ª–∞—Å—Å–µ
  }
}

void main() {
  var car = Car();
  car.drive(); // –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ –ø—É–±–ª–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–¥–∫–ª–∞—Å—Å–∞
}

üéØ 4. @visibleForTesting - –ü–æ–º–µ—á–∞–µ—Ç —á–ª–µ–Ω –∫–ª–∞—Å—Å–∞ –∫–∞–∫ –≤–∏–¥–∏–º—ã–π —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.


üß© –î—Ä—É–≥–∏–µ –ø–æ–ª–µ–∑–Ω—ã–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –∏–∑ package:meta

dev_dependencies:
  meta: 1.11.0


üéØ @mustCallSuper - –¢—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã –ø–æ–¥–∫–ª–∞—Å—Å –≤—ã–∑—ã–≤–∞–ª super.method() –ø—Ä–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –º–µ—Ç–æ–¥–∞.

abstract class StatefulWidget {
  @mustCallSuper
  void dispose() {}

  void build();
}

class MyWidget extends StatefulWidget {
  @override
  void dispose() {
    super.dispose(); // ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ: –≤—ã–∑—ã–≤–∞–µ–º super.dispose() –≤ –∫–æ–Ω—Ü–µ
  }

  @override
  void build() {
    print('MyWidget: building UI');
  }
}

üéØ @immutable - –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –±—É–¥–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—Ç—å, –µ—Å–ª–∏ –≤ –∫–ª–∞—Å—Å–µ –µ—Å—Ç—å –∏–∑–º–µ–Ω—è–µ–º—ã–µ –ø–æ–ª—è.

üéØ @sealed - –ó–∞–ø—Ä–µ—â–∞–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –∏–ª–∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –≤–Ω–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –≥–¥–µ –æ–Ω –æ–ø—Ä–µ–¥–µ–ª—ë–Ω.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞—Ç–∏–≤–Ω—ã–µ sealed –∫–ª–∞—Å—Å—ã –µ—Å–ª–∏:
- –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Dart 3.0+
- –ù—É–∂–Ω–∞ –≥–∞—Ä–∞–Ω—Ç–∏—è –ø–æ–ª–Ω–æ—Ç—ã –ø—Ä–∏ pattern matching

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ @sealed –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é –µ—Å–ª–∏:
- –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Dart < 3.0
- –ù—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
- –•–æ—á–µ—Ç—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π, –∞ –Ω–µ –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏

üéØ @experimental - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á—Ç–æ API –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è.

üéØ @internal - –£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø–∞–∫–µ—Ç–µ.

üéØ @pragma('vm:entry-point') - –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –£–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –∏–ª–∏ –∫–ª–∞—Å—Å —è–≤–ª—è–µ—Ç—Å—è —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è Flutter –∏–ª–∏ AOT –∫–æ–º–ø–∏–ª—è—Ü–∏–∏).

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–µ—Ñ–ª–µ–∫—Å–∏—è (reflection)?',
    a: '''
–†–µ—Ñ–ª–µ–∫—Å–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–±—ä–µ–∫—Ç–æ–≤ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é dart:mirrors`.

Flutter –µ—ë –∏–∑–±–µ–≥–∞–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ `dart:mirrors` –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ tree-shaking –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

–†–µ—Ñ–ª–µ–∫—Å–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å –∫–æ–¥ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ‚Äî —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–ª–∞—Å—Å–∞–º–∏, –º–µ—Ç–æ–¥–∞–º–∏ –∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏.
–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è, –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –Ω–µ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–∞–∫–æ–π –∫–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–µ–Ω, –ø–æ—ç—Ç–æ–º—É –æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Å—ë.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ tree-shaking –∏ –ø–æ—á–µ–º—É –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ—Ñ–ª–µ–∫—Å–∏–µ–π?',
    a: '''
Tree-shaking ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–∏.

class MathUtils {
  static int add(int a, int b) => a + b;
  static int multiply(int a, int b) => a * b;
  static int divide(int a, int b) => a ~/ b;  // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
  static int subtract(int a, int b) => a - b; // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
}

void main() {
  print(MathUtils.add(2, 3));
  print(MathUtils.multiply(4, 5));
  // divide –∏ subtract –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è
}

–ü–æ—Å–ª–µ tree-shaking –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è —Ç–æ–ª—å–∫–æ add –∏ multiply.



üéØ Platform-specific –∫–æ–¥:

if (Platform.isIOS) {
  // Android-–∫–æ–¥ –±—É–¥–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω –≤ iOS-—Å–±–æ—Ä–∫–µ
  return CupertinoButton(...);
} else {
  // iOS-–∫–æ–¥ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –≤ Android-—Å–±–æ—Ä–∫–µ
  return ElevatedButton(...);
}

Flutter –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç tree-shaking –≤ release-—Å–±–æ—Ä–∫–∞—Ö, –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–∞—è —Ä–∞–∑–º–µ—Ä APK/IPA.

üéØ Tree-shaking –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –†–µ—Ñ–ª–µ–∫—Å–∏–µ–π (dart:mirrors)

import 'dart:mirrors';

class UserService {
  void createUser() => print('Creating user');
  void deleteUser() => print('Deleting user');
  void updateUser() => print('Updating user');
}

void main() {
  final service = UserService();

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ —ç—Ç–æ
  service.createUser();

  // –ù–æ —á–µ—Ä–µ–∑ —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ
  final mirror = reflect(service);
  final methodName = getMethodFromConfig(); // –ò–∑ –∫–æ–Ω—Ñ–∏–≥–∞, API, etc
  mirror.invoke(Symbol(methodName), []);
}

String getMethodFromConfig() {
  // –ú–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å 'deleteUser', 'updateUser' –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥
  return 'deleteUser';
}

–ü—Ä–æ–±–ª–µ–º–∞: Tree-shaker –≤–∏–¥–∏—Ç, —á—Ç–æ —è–≤–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ createUser(), –Ω–æ –∏–∑-–∑–∞ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –Ω–µ –º–æ–∂–µ—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ deleteUser() –∏ updateUser() –Ω–µ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –≤ —Ä–∞–Ω—Ç–∞–π–º–µ.
–†–µ–∑—É–ª—å—Ç–∞—Ç: –í—Å–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å–±–æ—Ä–∫–µ.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç —Å–ø–æ—Å–æ–±—ã –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–≤—É—Ö —Å–ø–∏—Å–∫–æ–≤?',
    a: '''
üéØ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä spread (`...`): `[...list1, ...list2]`

üéØ –º–µ—Ç–æ–¥ `addAll()`

üéØ `List.from(list1)..addAll(list2)`. –î–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç null ‚Äî `...?list2`.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–µ—Ç–æ–¥ `map()` —É –∫–æ–ª–ª–µ–∫—Ü–∏–π?',
    a: '–ú–µ—Ç–æ–¥ `map()` –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Iterable. –ü—Ä–∏–º–µ—Ä: `[1,2,3].map((e) => e * 2)` –≤–µ—Ä–Ω—ë—Ç `(2,4,6)`.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å nullable-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏?',
    a: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å null-aware –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: `??`, `??=`, `?.`, `!...`, –∞ —Ç–∞–∫–∂–µ `required`, `late`, `assert()` –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ null –≤—Ä—É—á–Ω—É—é. –í–∞–∂–Ω–æ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å API —Ç–∞–∫, —á—Ç–æ–±—ã null –±—ã–ª –æ—Å–º—ã—Å–ª–µ–Ω.',
  ),
  QA(
    tags: [Tag.dart, Tag.future],
    q: '–ö–∞–∫ –≤ Dart —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–∞–π–º–∞—É—Ç–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ Future?',
    a: r'''
–í Dart –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ Future —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ .timeout(Duration).

–û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Future.
–ï—Å–ª–∏ Future –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥, –±—É–¥–µ—Ç –≤—ã–±—Ä–æ—à–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ TimeoutException, –ª–∏–±–æ –º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É.

try {
  await longOperation().timeout(Duration(seconds: 2));
} on TimeoutException catch (e) {
  print('–¢–∞–π–º–∞—É—Ç: $e');
}

–¢–∞–π–º–∞—É—Ç –æ—Ç–º–µ–Ω—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Future?
- –ù–µ—Ç. –û–Ω –Ω–µ –æ—Ç–º–µ–Ω—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Future, –∞ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
''',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–¥–∞—Ç—å —Ç–∞–π–º–∞—É—Ç –¥–ª—è stream?',
    a: r'''
–î–∞, –º–æ–∂–Ω–æ

final stream = Stream<int>.periodic(Duration(seconds: 2), (x) => x);

stream
    .timeout(
      Duration(seconds: 1),
      onTimeout: (sink) => sink.addError('Timeout!'),
    )
    .listen(
      (event) => print('Received: $event'),
      onError: (e) => print('Error: $e'),
    );
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è Set, List –∏ Map?',
    a: '`List` ‚Äî —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è —Å –¥–æ—Å—Ç—É–ø–æ–º –ø–æ –∏–Ω–¥–µ–∫—Å—É. `Set` ‚Äî –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. `Map` ‚Äî –∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤ (–∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ).',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä `!` (null assertion)?',
    a: '–û–ø–µ—Ä–∞—Ç–æ—Ä `!` –≥–æ–≤–æ—Ä–∏—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–æ—á–Ω–æ –Ω–µ —Ä–∞–≤–Ω–∞ null. –ï—Å–ª–∏ –æ–Ω–∞ –≤—Å—ë –∂–µ null ‚Äî –±—É–¥–µ—Ç –≤—ã–±—Ä–æ—à–∞–Ω–æ `NullThrownError` –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –ø–æ–≤—ã—Å–∏—Ç—å —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å –∫–æ–¥–∞ –Ω–∞ Dart?',
    a: '–ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è style guide (dart.dev/guides/language/effective-dart), –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å meaningful names, –∏–∑–±–µ–≥–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è, –¥–µ–∫–æ–º–ø–æ–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å const –∏ final, –ø–∏—Å–∞—Ç—å unit-—Ç–µ—Å—Ç—ã.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Iterable –∏ —á–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç List?',
    a: '`Iterable` ‚Äî —ç—Ç–æ –∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è. `List` ‚Äî –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è Iterable —Å –¥–æ—Å—Ç—É–ø–æ–º –ø–æ –∏–Ω–¥–µ–∫—Å—É.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –≤ Dart –ø–∏—à—É—Ç—Å—è unit-—Ç–µ—Å—Ç—ã?',
    a: '''
dev_dependencies:
  test: 1.24.0

üéØ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
test() ‚Äî –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–¥–∏–Ω —Ç–µ—Å—Ç.
group() ‚Äî –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç—ã.
setUp() ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º.
expect() ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, equals(5)).

void main() {
  group('Calculator', () {
    late Calculator calculator;

    setUp(() {
      calculator = Calculator();
    });

    test('add returns correct result', () {
      expect(calculator.add(2, 3), equals(5));
    });

    test('subtract returns correct result', () {
      expect(calculator.subtract(5, 3), equals(2));
    });
  });
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `assert()` –∏ –∫–æ–≥–¥–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',
    a: '`assert()` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏–π. –ï—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ ‚Äî –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ. –í —Ä–µ–ª–∏–∑–Ω–æ–π —Å–±–æ—Ä–∫–µ `assert()` –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ Dart –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–¥–∞?',
    a: 'Dart Analyzer (`dart analyze`) –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∏–ª—å, –æ—à–∏–±–∫–∏, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —á–µ—Ä–µ–∑ `analysis_options.yaml`.',
  ),
  QA(
    tags: [Tag.dart, Tag.memory],
    q: '–ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏?',
    a: '–í—Ä—É—á–Ω—É—é –æ—Ç–ø–∏—Å—ã–≤–∞—Ç—å—Å—è (`cancel()`), –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `dispose()` –∏ `finalize()` –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –º–µ—Å—Ç–∞—Ö.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç DevTools –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏?',
    a: 'Flutter DevTools –≤–∫–ª—é—á–∞–µ—Ç: Inspector (–¥—Ä–µ–≤–æ –≤–∏–¥–∂–µ—Ç–æ–≤), Performance (timeline), Memory, CPU Profiler, Network –∏ Logging. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ—Ä–∏–∑–æ–≤, –ª–∏–∫–æ–≤, rebuild-–æ–≤.',
  ),
  QA(
    tags: [Tag.dart, Tag.oop],
    q: '–ú–æ–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–º –∫–ª–∞—Å—Å–µ?',
    a: r'''
–î–∞, –≤ Dart –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –≤ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö –∫–ª–∞—Å—Å–∞—Ö.
–≠—Ç–æ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—â–∏—Ö –ø–æ–ª–µ–π –∏–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—â–µ–π –ª–æ–≥–∏–∫–∏ –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏ –∫–ª–∞—Å—Å–æ–≤.

abstract class Animal {
  final String name;
  final int age;

  Animal(this.name, this.age); // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–º –∫–ª–∞—Å—Å–µ

  void makeSound(); // –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥

  void introduce() { // –û–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥
    print('–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç $name, –º–Ω–µ $age –ª–µ—Ç');
  }
}

class Dog extends Animal {
  Dog(String name, int age) : super(name, age);

  @override
  void makeSound() {
    print('–ì–∞–≤-–≥–∞–≤!');
  }
}

üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
- –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ super() –≤ –ø–æ–¥–∫–ª–∞—Å—Å–∞—Ö
- –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–∞—Ç—Ç–µ—Ä–Ω —Ñ–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥

abstract class Shape {
  factory Shape(String type, double size) {
    if (type == 'circle') {
      return Circle(size);
    } else if (type == 'square') {
      return Square(size);
    }
    throw ArgumentError('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∏–≥—É—Ä—ã: $type');
  }
}

class Circle implements Shape { }
class Square implements Shape { }

''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –º–µ—Ç–æ–¥—ã –≤ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–º –∫–ª–∞—Å—Å–µ?',
    a: '''
–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–µ–∞–ª–∏–∑—É—é—Ç—Å—è —á–µ—Ä–µ–∑ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –≥–µ—Ç—Ç–µ—Ä—ã/—Å–µ—Ç—Ç–µ—Ä—ã
–í—Å–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —á–ª–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö
–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –±–µ–∑ —Ç–µ–ª–∞

abstract class Vehicle {
  String get brand;              // –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –≥–µ—Ç—Ç–µ—Ä

  set speed(double value);       // –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π —Å–µ—Ç—Ç–µ—Ä

  void startEngine();            // –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥
}

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `covariant`?',
    a: r'''
covariant - —ç—Ç–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ –≤ –ø–æ–¥–∫–ª–∞—Å—Å–µ
–∏–Ω–≤–∞—Ä–∏–∞–Ω—Ç–Ω—ã - –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è—Ö

class Animal {}
class Dog extends Animal {}

class Base {
  void feed(Animal animal) {}
}

class Sub extends Base {
  @override
  void feed(Dog dog) {} // ‚ùå –û—à–∏–±–∫–∞ –±–µ–∑ covariant!
}

‚úÖ –†–µ—à–µ–Ω–∏–µ: covariant

class Sub extends Base {
  @override
  void feed(covariant Dog dog) {
    print('Feeding dog: $dog');
  }
}

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–∞–π–ª–∞–º–∏ –≤ —á–∏—Å—Ç–æ–º Dart (–±–µ–∑ Flutter)?',
    a: r'''

üéØ readAsString() - –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Future<String>
- –ù–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫
- –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å await –∏–ª–∏ .then()
- –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤

    final file = File('data.txt');
    final contents = await file.readAsString(); // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ


üéØ readAsStringSync() - –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
- –ë–ª–æ–∫–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
- –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
- –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤

    final file = File('data.txt');
    final contents = file.readAsStringSync(); // –°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ


file.writeAsStringSync('–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!');
await file.writeAsString('–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!');


final file = File('data.txt');
if (await file.exists()) {
  print('–§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
}


final file = File('image.jpg');
final bytes = await file.readAsBytes();


final dir = Directory('new_folder');
await dir.create();

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å/–¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã –≤ JSON?',
    a: '–° –ø–æ–º–æ—â—å—é `dart:convert`: `jsonEncode()` –∏ `jsonDecode()`.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä `==` –±–µ–∑ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è `hashCode`?',
    a: '–ú–æ–∂–Ω–æ, –Ω–æ –Ω–µ –Ω—É–∂–Ω–æ. –≠—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç –∫–æ–Ω—Ç—Ä–∞–∫—Ç `Object`, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç–µ –≤ `Set`, `Map` –∏ –¥—Ä—É–≥–∏—Ö —Ö—ç—à-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ö.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É throw –∏ rethrow?',
    a: r'''
throw
- –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π exception –≤ —Å—Ç–µ–∫-—Ç—Ä–µ–π—Å–µ
- –¢–µ—Ä—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏
- –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–µ—Ä–Ω—É—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.

rethrow
- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫-—Ç—Ä–µ–π—Å
- –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ catch –±–ª–æ–∫–∞
- –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–∞–ª—å—à–µ

// ‚ùå –ü–ª–æ—Ö–æ - —Ç–µ—Ä—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫-—Ç—Ä–µ–π—Å
void badExample() {
  try {
    riskyOperation();
  } catch (e) {
    logger.error('Operation failed: $e');
    throw e; // –ù–æ–≤—ã–π —Å—Ç–µ–∫-—Ç—Ä–µ–π—Å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å
  }
}

// ‚úÖ –•–æ—Ä–æ—à–æ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–µ–∫-—Ç—Ä–µ–π—Å
void goodExample() {
  try {
    riskyOperation();
  } catch (e) {
    logger.error('Operation failed: $e');
    rethrow; // –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –º–µ—Å—Ç–æ –∏—Å—Ö–æ–¥–Ω–æ–π –æ—à–∏–±–∫–∏
  }
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É `const []` –∏ `List.empty(growable: false)`?',
    a: '`const []` —Å–æ–∑–¥–∞—ë—Ç compile-time –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫. `List.empty(growable: false)` ‚Äî —Ç–æ–∂–µ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π, –Ω–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –≤–æ –≤—Ä–µ–º—è runtime –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è const.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞—Ç—å enum —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ Dart?',
    a: r'''
–î–∞, –≤ Dart 2.17+ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å enum —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –º–µ—Ç–æ–¥–∞–º–∏ –∏ –≥–µ—Ç—Ç–µ—Ä–∞–º–∏.

1. Enum —Å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º –∏ –ø–æ–ª—è–º–∏

enum Status {
  pending('–í –æ–∂–∏–¥–∞–Ω–∏–∏', Colors.orange),
  approved('–û–¥–æ–±—Ä–µ–Ω–æ', Colors.green),
  rejected('–û—Ç–∫–ª–æ–Ω–µ–Ω–æ', Colors.red),
  cancelled('–û—Ç–º–µ–Ω–µ–Ω–æ', Colors.grey);

  const Status(this.title, this.color);

  final String title;
  final Color color;
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
final status = Status.approved;
print(status.title); // "–û–¥–æ–±—Ä–µ–Ω–æ"
print(status.color); // Colors.green

2. Enum —Å –º–µ—Ç–æ–¥–∞–º–∏

enum HttpMethod {
  get('GET', false),
  post('POST', true),
  put('PUT', true),
  delete('DELETE', false);

  const HttpMethod(this.name, this.hasBody);

  final String name;
  final bool hasBody;

  bool get isIdempotent => this == HttpMethod.get || this == HttpMethod.put;

  String buildRequest(String url, [Map<String, dynamic>? body]) {
    if (hasBody && body != null) {
      return '$name $url\nBody: ${jsonEncode(body)}';
    }
    return '$name $url';
  }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
final method = HttpMethod.post;
print(method.isIdempotent); // false
print(method.buildRequest('/api/users', {'name': 'John'}));

3. Enum —Å —Ñ–∞–±—Ä–∏—á–Ω—ã–º–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏

enum Environment {
  development._('dev', 'http://localhost:3000', true),
  staging._('stage', 'https://staging.app.com', true),
  production._('prod', 'https://app.com', false);

  const Environment._(this.shortName, this.baseUrl, this.debugMode);

  final String shortName;
  final String baseUrl;
  final bool debugMode;

  factory Environment.fromString(String value) {
    return Environment.values.firstWhere(
      (env) => env.shortName == value,
      orElse: () => Environment.development,
    );
  }

  String get apiUrl => '$baseUrl/api';
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
final env = Environment.fromString('prod');
print(env.apiUrl); // "https://app.com/api"
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –≤—ã –∑–∞–±—É–¥–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å ReceivePort, –Ω–æ —É–±—å—ë—Ç–µ Isolate?',
    a: '–ò–∑–æ–ª—è—Ç –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–∞–±–æ—Ç—É, –Ω–æ ReceivePort, –æ—Å—Ç–∞–≤–∞—è—Å—å –æ—Ç–∫—Ä—ã—Ç—ã–º –≤ —Ä–æ–¥–∏—Ç–µ–ª–µ, –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –≤ event loop –∏ –Ω–µ –¥–∞—Å—Ç –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã ‚Äî —ç—Ç–æ –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ —É—Ç–µ—á–∫–µ –ø–∞–º—è—Ç–∏.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏?',
    a: '''
_controller.dispose();
_subscription?.cancel();
_timer?.cancel();

void _cleanupIsolate() {
  _receivePort?.close();
  _sendPort = null;
  _isolate?.kill();
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `dart:ffi`?',
    a: '`dart:ffi` –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å C-—Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç—å—é –∏–∑ Dart-–∫–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç `build_runner` –∏ –∫–∞–∫ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',
    a: '`build_runner` —É–ø—Ä–∞–≤–ª—è–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∫–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è `json_serializable`, `freezed`). –ó–∞–ø—É—Å–∫: `dart run build_runner build` –∏–ª–∏ `watch` –¥–ª—è —Å–ª–µ–∂–µ–Ω–∏—è –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –æ–¥–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ?',
    a: '''
–ù–µ—Ç, –Ω–∞–ø—Ä—è–º—É—é –Ω–µ–ª—å–∑—è. –í Flutter/Dart –ø—Ä–æ–µ–∫—Ç–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –≤–µ—Ä—Å–∏—è –∫–∞–∂–¥–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.

–ü–æ—á–µ–º—É —Ç–∞–∫:

- Dart –∏—Å–ø–æ–ª—å–∑—É–µ—Ç flat dependency resolution
- Pub solver –≤—ã–±–∏—Ä–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é, —Å–æ–≤–º–µ—Å—Ç–∏–º—É—é —Å–æ –≤—Å–µ–º–∏ constraints
- –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤–µ—Ä—Å–∏–π –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –æ—à–∏–±–∫–∞–º —Å–±–æ—Ä–∫–∏

–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞—Ö:

1) Dependency overrides (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ):
- dependency_overrides:
    package_name: 2.0.0

2) –û–±–Ω–æ–≤–∏—Ç—å constraints –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–æ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö –≤–µ—Ä—Å–∏–π
3) –§–æ—Ä–∫ –ø—Ä–æ–±–ª–µ–º–Ω–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–∏—Ç—å –µ—ë
4) –ñ–¥–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç –º–µ–π–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        ''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –±—ã–≤–∞—é—Ç —Ç–∏–ø—ã —Ç–µ—Å—Ç–æ–≤?',
    a: '1) Unit-—Ç–µ—Å—Ç—ã ‚Äî –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ (–±—ã—Å—Ç—Ä–æ). 2) Widget-—Ç–µ—Å—Ç—ã ‚Äî UI –±–µ–∑ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞. 3) Integration-—Ç–µ—Å—Ç—ã ‚Äî —Å–∫–≤–æ–∑–Ω—ã–µ, —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º/—ç–º—É–ª—è—Ç–æ—Ä–æ–º',
  ),
  QA(
    tags: [Tag.flutter],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ golden tests –≤ Flutter?',
    a: '–≠—Ç–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–Ω—ã–µ —Ç–µ—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç —Ä–µ–Ω–¥–µ—Ä UI —Å —ç—Ç–∞–ª–æ–Ω–Ω—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–π —Ä–µ–≥—Ä–µ—Å—Å–∏–∏.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –∏–∑–º–µ—Ä–∏—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ–¥–∞ –≤ Dart?',
    a: r'''

üìå –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ Stopwatch:

–í Dart –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–ª–∞—Å—Å Stopwatch.
–û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ—á–Ω–æ –∏–∑–º–µ—Ä–∏—Ç—å –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±–ª–æ–∫–∞ –∫–æ–¥–∞.

void main() {
  final stopwatch = Stopwatch()..start();

  // –ö–æ–¥, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ –∏–∑–º–µ—Ä—è–µ–º
  doSomethingHeavy();

  stopwatch.stop();
  print('–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${stopwatch.elapsedMilliseconds} –º—Å');
}

void doSomethingHeavy() {
  for (var i = 0; i < 1000000; i++) {
    final _ = i * i;
  }
}

üß™ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–¥—Ö–æ–¥:

–î–ª—è –±–µ–Ω—á–º–∞—Ä–∫–æ–≤ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –ø–∞–∫–µ—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä:
benchmark_harness

–ü—Ä–∏–º–µ—Ä:
import 'package:benchmark_harness/benchmark_harness.dart';

class MyBenchmark extends BenchmarkBase {
  MyBenchmark() : super("MyBenchmark");

  @override
  void run() {
    // –ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ—Ä—è–µ—Ç—Å—è
    for (var i = 0; i < 100000; i++) {
      final _ = i * i;
    }
  }
}

void main() {
  MyBenchmark().report();
}

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é –≤ Dart?',
    a: '''
–í Dart –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö, —Ö–æ—Ç—è –∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥—Ä—É–≥–∏–º–∏ —è–∑—ã–∫–∞–º–∏.

class Deprecated {
  final String reason;
  const Deprecated([this.reason = 'Use alternative']);
}

class JsonIgnore {
  const JsonIgnore();
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
class User {
  final String name;

  User(this.name);

  @Deprecated('Use fullName instead')
  String get displayName => name;

  @JsonIgnore()
  String? password;
}
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ JS interop –≤ Dart?',
    a: '–° –ø–æ–º–æ—â—å—é `package:js` –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å JS-–∫–æ–¥ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Dart-—Ñ—É–Ω–∫—Ü–∏–∏. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ `@JS()`, `@anonymous` –∏ —Å–≤—è–∑—ã–≤–∞—é—Ç—Å—è —Å JS API.',
  ),

  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ runZoned –∏ runZonedGuarded?',
    a: r'''

üìå runZoned - –£—Å—Ç–∞—Ä–µ–≤—à–∏–π. –°–æ–∑–¥–∞–µ—Ç –∑–æ–Ω—É (–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è) —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.

–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç

import 'dart:async';

void main() {
  runZoned(() {
    // –ö–æ–¥ –≤ –∑–æ–Ω–µ
    print('–í –∑–æ–Ω–µ');
    throw Exception('–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞');
  }, onError: (error, stack) {
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
    print('–û—à–∏–±–∫–∞: $error');
  });

  print('–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
}


üìå runZonedGuarded - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π - –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ, –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏.

void main() {
  runZonedGuarded(() {
    runApp(MyApp());
  }, (error, stackTrace) {
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    print('Global error: $error');
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    // Crashlytics, Sentry –∏ —Ç.–¥.
  });
}


runZonedGuarded –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≤–º–µ—Å—Ç–∏–º —Å async/await –∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏.

void main() {
  runZonedGuarded(() async {
    WidgetsFlutterBinding.ensureInitialized();
    await initializeDependencies();
    runApp(const MyApp());
  }, (error, stackTrace) {
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    logError(error, stackTrace);
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Crashlytics, Sentry –∏ —Ç.–¥.
  });
}

Future<void> initializeDependencies() async {
  // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  await SharedPreferences.getInstance();
  await Firebase.initializeApp();
}



runZonedGuarded –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –≤ –∏–∑–æ–ª—è—Ç–∞—Ö, –ø–æ—Ç–æ–º—É —á—Ç–æ:

- –ò–∑–æ–ª—è—Ç—ã - —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
- –ó–æ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ –∏–∑–æ–ª—è—Ç–∞
- –ö–∞–∂–¥—ã–π –∏–∑–æ–ª—è—Ç –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –ø–∞–º—è—Ç–∏ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è


void main() {
  runZonedGuarded(() async {
    print('–û—Å–Ω–æ–≤–Ω–æ–π –∏–∑–æ–ª—è—Ç');

    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–∑–æ–ª—è—Ç–∞
    await Isolate.spawn(backgroundTask, 'data');

  }, (error, stack) {
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ —Ç–æ–ª—å–∫–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–∑–æ–ª—è—Çe
    print('–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–∑–æ–ª—è—Çe: $error');
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∏–∑–æ–ª—è—Çe
void backgroundTask(String data) {
  // –≠—Ç–∞ –æ—à–∏–±–∫–∞ –ù–ï –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ runZonedGuarded –∏–∑ main()
  throw Exception('–û—à–∏–±–∫–∞ –≤ –∏–∑–æ–ª—è—Çe');
}
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –∏–∑–æ–ª—è—Ç–∞—Ö?',
    a: r'''
void main() {
  runZonedGuarded(() async {
    final receivePort = ReceivePort();

    final isolate = await Isolate.spawn(
      backgroundTask,
      receivePort.sendPort
    );

    receivePort.listen((message) {
      if (message is SendError) {
        print('–û—à–∏–±–∫–∞ –∏–∑ –∏–∑–æ–ª—è—Ç–∞: ${message.error}');
      }
    });

  }, (error, stack) {
    print('–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–∑–æ–ª—è—Çe: $error');
  });
}

class SendError {
  final Object error;
  final StackTrace stackTrace;
  SendError(this.error, this.stackTrace);
}

void backgroundTask(SendPort sendPort) {
  try {
    // –†–∞–±–æ—Ç–∞ –≤ –∏–∑–æ–ª—è—Çe
    throw Exception('–û—à–∏–±–∫–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º –∏–∑–æ–ª—è—Çe');
  } catch (error, stack) {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–∑–æ–ª—è—Ç
    sendPort.send(SendError(error, stack));
  }
}
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ FlutterError.onError?',
    a: r'''
üìå —ç—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ Flutter, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –≤–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–µ Flutter.

void main() {
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫ Flutter
  FlutterError.onError = (FlutterErrorDetails details) {
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    print('Flutter Error: ${details.exception}');
    print('Stack trace: ${details.stack}');

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Firebase Crashlytics)
    FirebaseCrashlytics.instance.recordFlutterError(details);

    // –í debug —Ä–µ–∂–∏–º–µ —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —ç–∫—Ä–∞–Ω
    if (kDebugMode) {
      FlutterError.presentError(details);
    }
  };

  runApp(MyApp());
}

üìå –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –æ—à–∏–±–∫–∏

class CustomErrorWidget extends StatelessWidget {
  final FlutterErrorDetails errorDetails;

  const CustomErrorWidget({required this.errorDetails});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫'),
        backgroundColor: Colors.red,
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),

            if (kDebugMode) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Ç–æ–ª—å–∫–æ –≤ debug —Ä–µ–∂–∏–º–µ
              Padding(
                padding: EdgeInsets.all(16),
                child: Text(
                  errorDetails.exception.toString(),
                  style: TextStyle(fontSize: 12, color: Colors.grey),
                  textAlign: TextAlign.center,
                ),
              ),
          ],
        ),
      ),
    );
  }
}

void main() {
  FlutterError.onError = (details) {
    _handleError(details.exception, details.stack);

    // –ó–∞–º–µ–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –∫—Ä–∞—Å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—ã–π
    FlutterError.presentError(details);
  };

  // –ö–∞—Å—Ç–æ–º–Ω—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –æ—à–∏–±–æ–∫
  ErrorWidget.builder = (FlutterErrorDetails details) {
    return CustomErrorWidget(errorDetails: details);
  };

  runApp(MyApp());
}
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É FlutterError.onError –∏ runZonedGuarded',
    a: r'''

–†–µ—à–∞—é—Ç —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏.

FlutterError.onError ‚Üí —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ Flutter —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
runZonedGuarded      ‚Üí –≤—Å–µ –Ω–µ–ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è Dart

üìå void main() {
  // –ù–ï–ü–û–õ–ù–ê–Ø –∑–∞—â–∏—Ç–∞ - —Ç–æ–ª—å–∫–æ Flutter –æ—à–∏–±–∫–∏
  FlutterError.onError = (details) {
    print('Flutter Error: ${details.exception}');
  };

  runApp(MyApp());
}

üìåvoid main() {
  // –ù–ï–ü–û–õ–ù–ê–Ø –∑–∞—â–∏—Ç–∞ - –Ω–µ –ª–æ–≤–∏—Ç Flutter —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –æ—à–∏–±–∫–∏
  runZonedGuarded(() {
    runApp(MyApp());
  }, (error, stack) {
    print('Zone Error: $error');
  });
}

üìå –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥

void main() {
  runZonedGuarded(() {
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º Flutter –æ—à–∏–±–∫–∏ –≤ runZonedGuarded
    FlutterError.onError = (details) {
      Zone.current.handleUncaughtError(
        details.exception,
        details.stack ?? StackTrace.current
      );
    };

    runApp(const MyApp());
  }, (error, stackTrace) {
    // –ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –í–°–ï–• –æ—à–∏–±–æ–∫
    print('–ï–¥–∏–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: $error');

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Crashlytics, Sentry –∏ —Ç.–¥.
    reportError(error, stackTrace);
  });
}
''',
  ),

  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–ò–∑–æ–ª—è—Ç—ã –æ–±—â–∞—é—Ç—Å—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏–ª–∏ —Å—Å—ã–ª–∫–∞–º–∏?',
    a: '''
–ò–∑–æ–ª—è—Ç—ã –æ–±—â–∞—é—Ç—Å—è –ö–û–ü–ò–†–û–í–ê–ù–ò–ï–ú, –Ω–µ —Å—Å—ã–ª–∫–∞–º–∏! –≠—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∏–∑–æ–ª—è—Ü–∏–∏ –≤ Dart.

–ö–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏–∑–æ–ª—è—Ç–æ–≤:

üìå –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π:
–ü—Ä–æ—Å—Ç—ã–µ —Ç–∏–ø—ã (int, String, bool) –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é
–°–ø–∏—Å–∫–∏ –∏ Map –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –∫–∞–∫ –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã

üìå –ù–µ—Ç –æ–±—â–µ–π –ø–∞–º—è—Ç–∏:
// –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç –Ω–∞–ø—Ä—è–º—É—é
// sendPort.send(sharedObjectReference); // –û—à–∏–±–∫–∞!

üìå –ù—É–∂–Ω–æ —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏
sendPort.send({'data': [1, 2, 3], 'type': 'array'});
''',
  ),

  QA(
    tags: [Tag.dart, Tag.isolate, Tag.memory],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ TransferableTypedData?',
    a: r'''
TransferableTypedData ‚Äî —ç—Ç–æ –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –∏–∑–æ–ª—è—Ç–∞–º–∏ –±–µ–∑ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏.

–ö–æ–Ω—Ü–µ–ø—Ç—É–∞–ª—å–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã:
- Zero-copy –ø–µ—Ä–µ–¥–∞—á–∞ ‚Äî –¥–∞–Ω–Ω—ã–µ –Ω–µ –∫–æ–ø–∏—Ä—É—é—Ç—Å—è, –∞ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ
- –†–∞–±–æ—Ç–∞ —Å –∏–∑–æ–ª—è—Ç–∞–º–∏ ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏
- –í–ª–∞–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ ‚Äî –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
- –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ‚Äî –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö
- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ‚Äî —Ç–æ–ª—å–∫–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã

// TransferableTypedData - —ç—Ç–æ –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è TypedData
abstract final class TransferableTypedData {
  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤
  external factory TransferableTypedData.fromList(List<TypedData> list);

  // –ú–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–æ–≤–æ–º –∏–∑–æ–ª—è—Ç–µ
  List<ByteBuffer> materialize();
}

üéØ –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø–∞–º—è—Ç–∏:

–î–û –ø–µ—Ä–µ–¥–∞—á–∏:
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   –û–ó–£           ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ  [1,2,3,...]    ‚îÇ ‚Üê –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∞–¥—Ä–µ—Å: 0x123456)
‚îÇ  ‚Üë              ‚îÇ
‚îÇ originalData    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

–ü–û–°–õ–ï –æ–±—ã—á–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏:
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   –û–ó–£           ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ  [1,2,3,...]    ‚îÇ ‚Üê –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∞–¥—Ä–µ—Å: 0x123456)
‚îÇ  ‚Üë              ‚îÇ
‚îÇ originalData    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ  [1,2,3,...]    ‚îÇ ‚Üê –ö–û–ü–ò–Ø –¥–∞–Ω–Ω—ã—Ö (–∞–¥—Ä–µ—Å: 0x789012)
‚îÇ                 ‚îÇ   ‚Üê –≠—Ç–∞ –∫–æ–ø–∏—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∏–∑–æ–ª—è—Ç
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

–ò–¢–û–ì–û: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ 2 –ú–ë –ø–∞–º—è—Ç–∏ –≤–º–µ—Å—Ç–æ 1 –ú–ë!

üéØ –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ ¬´–ø–æ —Å—Å—ã–ª–∫–µ¬ª (zero-copy), —Ç–æ –Ω–∞–¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TransferableTypedData:

// ‚úÖ ZERO-COPY –ø–µ—Ä–µ–¥–∞—á–∞
final ttd = TransferableTypedData.fromList([originalData]);
sendPort.send([ttd, answerPort.sendPort]);

1Ô∏è‚É£ –í –º–æ–º–µ–Ω—Ç sendPort.send(...)
- Dart –Ω–µ –∫–æ–ø–∏—Ä—É–µ—Ç –±–∞–π—Ç—ã –∏–∑ originalData.
- –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –æ–Ω ¬´–æ—Ç—Ü–µ–ø–ª—è–µ—Ç¬ª –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±—É—Ñ–µ—Ä Uint8List –æ—Ç main –∏–∑–æ–ª—è—Ç–∞.
- –≠—Ç–æ—Ç –±—É—Ñ–µ—Ä —Ç–µ–ø–µ—Ä—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ main ‚Äî –ª—é–±–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ originalData –≤—ã–∑–æ–≤–µ—Ç StateError (¬´buffer detached¬ª).
- –í–ª–∞–¥–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∏–∑–æ–ª—è—Ç—É-–ø–æ–ª—É—á–∞—Ç–µ–ª—é.

2Ô∏è‚É£ –í –∏–∑–æ–ª—è—Ç–µ-–ø–æ–ª—É—á–∞—Ç–µ–ª–µ

final ttd = message[0] as TransferableTypedData;
final data = ttd.materialize().asUint8List();

ttd.materialize() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ByteBuffer –∏–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
.asUint8List() –¥–∞—ë—Ç –æ–±—ã—á–Ω—ã–π Uint8List –ø–æ–≤–µ—Ä—Ö —ç—Ç–æ–≥–æ –∂–µ –±—É—Ñ–µ—Ä–∞ (–±–µ–∑ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è).
–¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç –∏–∑–æ–ª—è—Ç ‚Äî –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–ª–∞–¥–µ–ª–µ—Ü —ç—Ç–æ–≥–æ –±–ª–æ–∫–∞ –ø–∞–º—è—Ç–∏ –∏ –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å/–ø–∏—Å–∞—Ç—å –≤ –Ω–µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é.


üéØ materialize() –≤ TransferableTypedData ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª (–º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑—É–µ—Ç)
–ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –±–ª–æ–∫ –ø–∞–º—è—Ç–∏, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∏–º –∫–∞–∫ —Å –æ–±—ã—á–Ω—ã–º ByteBuffer/Uint8List.

–ö–æ–≥–¥–∞ —Å–æ–∑–¥–∞–µ–º TransferableTypedData –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ —á–µ—Ä–µ–∑ –∏–∑–æ–ª—è—Ç:
1) –í –∏—Å—Ö–æ–¥–Ω–æ–º –∏–∑–æ–ª—è—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Ü–µ–ø–ª—è—é—Ç—Å—è –æ—Ç —Å–≤–æ–µ–≥–æ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –±—É—Ñ–µ—Ä–∞ –∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (–≤–ª–∞–¥–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç).
2) –í –ø–æ–ª—É—á–∞—é—â–µ–º –∏–∑–æ–ª—è—Ç–µ –ø–æ–ª—É—á–∞–µ–º ¬´–∑–∞–ø–∞–∫–æ–≤–∞–Ω–Ω—ã–π¬ª –æ–±—ä–µ–∫—Ç TransferableTypedData, –∫–æ—Ç–æ—Ä—ã–π –µ—â—ë –Ω–µ–ª—å–∑—è –Ω–∞–ø—Ä—è–º—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.
3) –í—ã–∑–æ–≤ .materialize() –æ—Ç–¥–∞—ë—Ç —Ç–µ–±–µ —É–∂–µ –≥–æ—Ç–æ–≤—ã–π ByteBuffer, –∫–æ—Ç–æ—Ä—ã–π –∏ –µ—Å—Ç—å —Ç–∞ –∂–µ —Å–∞–º–∞—è –ø–∞–º—è—Ç—å, –Ω–æ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–∞—è –≤ —ç—Ç–æ–º –∏–∑–æ–ª—è—Ç–µ.

''',
  ),

  QA(
    tags: [Tag.dart, Tag.memory, Tag.isolate],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –£–∫–∞–∑–∞—Ç–µ–ª—å –≤ –ø–∞–º—è—Ç–∏?',
    a: '''
–£–∫–∞–∑–∞—Ç–µ–ª—å ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –∞–¥—Ä–µ—Å –≤ –ø–∞–º—è—Ç–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ.

// –ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º –ø–∞–º—è—Ç—å –∫–∞–∫ –º–∞—Å—Å–∏–≤ —è—á–µ–µ–∫:
–ü–∞–º—è—Ç—å:
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ 0x1000‚îÇ 0x1001‚îÇ 0x1002‚îÇ 0x1003‚îÇ 0x1004‚îÇ ‚Üê –ê–¥—Ä–µ—Å–∞
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ   1   ‚îÇ   2   ‚îÇ   3   ‚îÇ   4   ‚îÇ   5   ‚îÇ ‚Üê –ó–Ω–∞—á–µ–Ω–∏—è
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

// –£–∫–∞–∑–∞—Ç–µ–ª—å:
int* pointer = 0x1000;  // –£–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤—É—é —è—á–µ–π–∫—É

// –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å:
print(*pointer);     // –í—ã–≤–æ–¥–∏—Ç: 1
print(*(pointer+1)); // –í—ã–≤–æ–¥–∏—Ç: 2 (—Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç)

 –í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ Dart –∏ –∏–∑–æ–ª—è—Ç–æ–≤:

üéØ –û–±—ã—á–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ (Uint8List)

Main Isolate:   pointer1 ‚Üí [–¥–∞–Ω–Ω—ã–µ –ø–æ –∞–¥—Ä–µ—Å—É 0x1000]
Worker Isolate: pointer2 ‚Üí [–ö–û–ü–ò–Ø –¥–∞–Ω–Ω—ã—Ö –ø–æ –∞–¥—Ä–µ—Å—É 0x2000]

- pointer1 –æ—Å—Ç–∞—ë—Ç—Å—è —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Å–≤–æ–π –±—É—Ñ–µ—Ä –≤ –ø–∞–º—è—Ç–∏ main –∏–∑–æ–ª—è—Ç–∞ (0x1000).
- pointer2 —Å–æ–∑–¥–∞—ë—Ç—Å—è –≤ heap –≤–æ—Ä–∫–µ—Ä–∞ –∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–æ–≤—ã–π –±—É—Ñ–µ—Ä (0x2000), –≤ –∫–æ—Ç–æ—Ä—ã–π Dart –ø–æ–±–∞–π—Ç–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª –¥–∞–Ω–Ω—ã–µ.

–≠—Ç–∏ –±—É—Ñ–µ—Ä—ã –∂–∏–≤—É—Ç –≤ —Ä–∞–∑–Ω—ã—Ö –∫—É—á–∞—Ö (heap) ‚Äî —É –∫–∞–∂–¥–æ–≥–æ –∏–∑–æ–ª—è—Ç–∞ —Å–≤–æ–π GC –∏ –ø–∞–º—è—Ç—å.

–ò–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ pointer2 –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–µ, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç pointer1, –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.

üéØ Zero-copy —á–µ—Ä–µ–∑ TransferableTypedData

–î–û –ø–µ—Ä–µ–¥–∞—á–∏:
Main Isolate:   pointer1 ‚Üí [–¥–∞–Ω–Ω—ã–µ –ø–æ –∞–¥—Ä–µ—Å—É 0x1000]

–ü–û–°–õ–ï –ø–µ—Ä–µ–¥–∞—á–∏:
Main Isolate:   pointer1 ‚Üí ‚ùå (–∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω)
Worker Isolate: pointer2 ‚Üí [–¥–∞–Ω–Ω—ã–µ –ø–æ –∞–¥—Ä–µ—Å—É 0x1000]

- TransferableTypedData ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–¥–∞—á–∞ –≤–ª–∞–¥–µ–Ω–∏—è –±—É—Ñ–µ—Ä–æ–º.
- –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Dart –Ω–µ –∫–æ–ø–∏—Ä—É–µ—Ç –±–∞–π—Ç—ã, –∞ –æ—Ç–¥–∞—ë—Ç —Å–∞–º –±–ª–æ–∫ –ø–∞–º—è—Ç–∏ –≤–æ—Ä–∫–µ—Ä—É.
- pointer1 –≤ main –∏–∑–æ–ª—è—Ç–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–º ‚Äî Dart –∑–∞–ø—Ä–µ—â–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –±—É—Ñ–µ—Ä—É, —á—Ç–æ–±—ã –¥–≤–∞ –∏–∑–æ–ª—è—Ç–∞ –Ω–µ —Ç—Ä–æ–≥–∞–ª–∏ –æ–¥–Ω—É –ø–∞–º—è—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∏–∑–æ–ª—è—Ü–∏—è GC).
- pointer2 –≤ –≤–æ—Ä–∫–µ—Ä–µ —Ç–µ–ø–µ—Ä—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ—Ç –∂–µ —Å–∞–º—ã–π –∞–¥—Ä–µ—Å –≤ –ø–∞–º—è—Ç–∏ (0x1000) –∏ –ø–æ–ª—É—á–∞–µ—Ç —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ –Ω–∞ —Ä–∞–±–æ—Ç—É —Å —ç—Ç–∏–º –±—É—Ñ–µ—Ä–æ–º.

–ò–∑–æ–ª—è—Ç—ã –ø—Ä–∏–Ω—Ü–∏–ø–∏–∞–ª—å–Ω–æ –Ω–µ —Ä–∞–∑–¥–µ–ª—è—é—Ç –ø–∞–º—è—Ç—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –≥–æ–Ω–æ–∫ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–æ–±–ª–µ–º —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π.
TransferableTypedData ‚Äî –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –Ω–æ –æ–Ω–æ –Ω–µ –¥–µ–ª–∞–µ—Ç shared-memory, –∞ –∏–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥–∞—ë—Ç –≤–ª–∞–¥–µ–Ω–∏–µ (move semantics).
''',
  ),

  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ isolates –∏ –∫–∞–∫ –æ–Ω–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç –º–µ–∂–¥—É —Å–æ–±–æ–π?',
    a: 'Isolates ‚Äî —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–∞–º—è—Ç—å—é. –û–Ω–∏ –æ–±—â–∞—é—Ç—Å—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º —á–µ—Ä–µ–∑ –æ–±–º–µ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (SendPort/ReceivePort), —á—Ç–æ –∏—Å–∫–ª—é—á–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–Ω–æ–∫.',
  ),
  QA(
    tags: [Tag.dart, Tag.future],
    q: '–í —á—ë–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ `await` –≤ —Ü–∏–∫–ª–µ?',
    a: '''
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `await` –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ Future, —á—Ç–æ –º–æ–∂–µ—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.
–ß—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ, –ª—É—á—à–µ —Å–æ–±—Ä–∞—Ç—å –≤—Å–µ Future –≤ —Å–ø–∏—Å–æ–∫ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å await Future.wait().
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–µ–∫—É—Ä—Å–∏—è –∏ –µ—Å—Ç—å –ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≥–ª—É–±–∏–Ω–µ?',
    a: '''
–†–µ–∫—É—Ä—Å–∏—è ‚Äî –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∞–º–æ–π —Å–µ–±—è. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç–µ–∫–∞ ‚Äî —Å–ª–∏—à–∫–æ–º –≥–ª—É–±–æ–∫–∞—è —Ä–µ–∫—É—Ä—Å–∏—è –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ StackOverflowError.

/// –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞
int factorial(int n) {
  // –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π: —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª 0 –∏ 1 —Ä–∞–≤–µ–Ω 1
  if (n <= 1) {
    return 1;
  }
  // –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π —Å–ª—É—á–∞–π: n! = n * (n-1)!
  return n * factorial(n - 1);
}

void main() {
  print(factorial(5)); // –í—ã–≤–æ–¥: 120
  print(factorial(0)); // –í—ã–≤–æ–¥: 1
}
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ shadowing –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ Dart –∏ –∫–∞–∫ –µ–≥–æ –∏–∑–±–µ–∂–∞—Ç—å?',
    a: 'Shadowing ‚Äî –∫–æ–≥–¥–∞ –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–º–µ–µ—Ç —Ç–æ –∂–µ –∏–º—è, —á—Ç–æ –∏ –≤–Ω–µ—à–Ω—è—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–æ–¥–∏—Ç—å –∫ –æ—à–∏–±–∫–∞–º. –ò–∑–±–µ–≥–∞—é—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–ª–∏ —É–º–µ–Ω—å—à–µ–Ω–∏–µ–º –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ cascade notation (–∫–∞—Å–∫–∞–¥–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä)?',
    a: '''
Cascade notation (..) –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ –æ–¥–Ω–∏–º –æ–±—ä–µ–∫—Ç–æ–º –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–æ.

// –û–±—ã—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥
var list = <int>[];
list.add(1);
list.add(2);
list.add(3);

// cascade notation
var list = <int>[]
  ..add(1)
  ..add(2)
  ..add(3);
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `await for` –∏ –≥–¥–µ –æ–Ω –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è?',
    a: r'''
`await for` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ Stream, –ø–æ–∑–≤–æ–ª—è—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –ø–æ –º–µ—Ä–µ –∏—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.

Stream<int> counterStream() async* {
  for (int i = 0; i < 3; i++) {
    await Future.delayed(Duration(seconds: 1));
    yield i;
  }
}

void main() async {
  await for (final value in counterStream()) {
    print('–ü–æ–ª—É—á–µ–Ω–æ: $value');
  }
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä `is!` –≤ Dart?',
    a: '–û–ø–µ—Ä–∞—Ç–æ—Ä `is!` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∑–∞–¥–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º. –ù–∞–ø—Ä–∏–º–µ—Ä, `if (obj is! String)` –æ–∑–Ω–∞—á–∞–µ—Ç "–µ—Å–ª–∏ obj –Ω–µ —Å—Ç—Ä–æ–∫–∞".',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É const –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤?',
    a: '''
–ö–ª–∞—Å—Å —Å const –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–º –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ final –ø–æ–ª—è.

class A {
  final int x;
  const A(this.x); // –æ–∫
}

const factory –≤–æ–∑–º–æ–∂–µ–Ω, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å const.


–ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
const –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º, –∏–∑–≤–µ—Å—Ç–Ω—ã–º –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.
const a = 5; // –æ–∫
const b = DateTime.now(); // –æ—à–∏–±–∫–∞
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ this?',
    a: '''
–≠—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞.

üéØ 1. –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –∏–º–µ–Ω
class User {
  String name;

  User(String name) {
    this.name = name; // this –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏ –ø–æ–ª—è
  }
}

üéØ 2. –Ø–≤–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –∫–ª–∞—Å—Å–∞

class Widget {
  String title = 'Default';

  void updateTitle(String newTitle) {
    this.title = newTitle; // this –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ —É–ª—É—á—à–∞–µ—Ç —á–∏—Ç–∞–µ–º–æ—Å—Ç—å
  }

  void printInfo() {
    print(this.title); // —Ç–æ –∂–µ, —á—Ç–æ print(title)
  }
}

this –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç–æ–¥–∞—Ö
–í –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å–ª—É—á–∞–µ–≤ this –æ–ø—É—Å–∫–∞–µ—Ç—Å—è –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ –∏–º–µ–Ω –∏–ª–∏ —è–≤–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `deferred` –∑–∞–≥—Ä—É–∑–∫–∞?',
    a: '''
deferred –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π (–ª–µ–Ω–∏–≤–æ–π) –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫.

–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ –ø–æ–¥–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∞ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ—Ç –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –æ–Ω–∞ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è.

import 'heavy_library.dart' deferred as heavy;

Future<void> main() async {
  print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–∞");
  // –ö–æ–¥ –∏–∑ heavy_library –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
  await heavy.loadLibrary(); // <- –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
  print(heavy.heavyFunction()); // —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `call` –º–µ—Ç–æ–¥?',
    a: '–ú–µ—Ç–æ–¥ `call` –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º –∫–ª–∞—Å—Å–æ–≤ –≤–µ—Å—Ç–∏ —Å–µ–±—è –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ–∑–≤–æ–ª—è—è –≤—ã–∑—ã–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫–∞–∫ `instance()`.',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Stream?',
    a: 'Stream ‚Äî —ç—Ç–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏–π (–¥–∞–Ω–Ω—ã—Ö), –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —Å–ª—É—à–∞—Ç—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ –º–µ—Ä–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å single-subscription Stream?',
    a: '–ö–æ–≥–¥–∞ –ø–æ—Ç–æ–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–Ω–æ–≥–æ —Å–ª—É—à–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π –∏–ª–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –æ–¥–Ω–æ–º—É –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—é.',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å broadcast Stream?',
    a: '–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞.',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ö–∞–∫ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Stream?',
    a: '–° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ `listen()`, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç callback –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π, –æ—à–∏–±–æ–∫ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ Stream?',
    a: '–í—ã–∑–≤–∞—Ç—å `cancel()` —É –æ–±—ä–µ–∫—Ç–∞ `StreamSubscription`, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ `listen()`.',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ StreamController?',
    a: '''
StreamController –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å Stream –≤—Ä—É—á–Ω—É—é, –¥–æ–±–∞–≤–ª—è—Ç—å —Å–æ–±—ã—Ç–∏—è –∏ –æ—à–∏–±–∫–∏.

class UserRepository {
  final _controller = StreamController<List<User>>.broadcast();

  Stream<List<User>> get usersStream => _controller.stream;

  void updateUsers(List<User> users) {
    _controller.add(List.unmodifiable(users));
  }

  void dispose() {
    _controller.close();
  }
}
''',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ß—Ç–æ –¥–µ–ª–∞—é—Ç –º–µ—Ç–æ–¥—ã `where()` –∏ `take()` —É Stream?',
    a: '`where()` —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏—è –ø–æ —É—Å–ª–æ–≤–∏—é, `take()` –±–µ—Ä—ë—Ç —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–±—ã—Ç–∏–π –∏–∑ –Ω–∞—á–∞–ª–∞ –ø–æ—Ç–æ–∫–∞.',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ö–∞–∫ –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ Stream –≤ –æ–¥–∏–Ω?',
    a: '''
import 'package:rxdart/rxdart.dart';

final stream1 = Stream.value(1);
final stream2 = Stream.value(2);

MergeStream([stream1, stream2]).listen(print); // 1, 2
''',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ Stream?',
    a: r'''
üéØ 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ listen

myStream.listen(
  (data) {
    print('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: $data');
  },
  onError: (error, stackTrace) {
    print('–û—à–∏–±–∫–∞: $error');
  },
  onDone: () {
    print('–°—Ç—Ä–∏–º –∑–∞–≤–µ—Ä—à—ë–Ω');
  },
  cancelOnError: true, // –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
);

üéØ 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ handleError

myStream
  .handleError((error) {
    print('–û—à–∏–±–∫–∞ –≤–Ω—É—Ç—Ä–∏ handleError: $error');
  })
  .listen((data) {
    print('–î–∞–Ω–Ω—ã–µ: $data');
  });

–û—Ç–ª–∏—á–∏–µ: handleError –º–æ–∂–µ—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å, –∫–∞–∫–∏–µ –æ—à–∏–±–∫–∏ –ª–æ–≤–∏—Ç—å.

myStream.handleError(
  (error) => print('–õ–æ–≤–∏–º —Ç–æ–ª—å–∫–æ FormatException: $error'),
  test: (e) => e is FormatException,
).listen((data) => print('–î–∞–Ω–Ω—ã–µ: $data'));

üéØ 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ async* –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞—Ö

Stream<int> numbers() async* {
  try {
    for (int i = 0; i < 5; i++) {
      if (i == 3) throw Exception("–û—à–∏–±–∫–∞ –Ω–∞ $i");
      yield i;
    }
  } catch (e, st) {
    print("–ü–æ–π–º–∞–ª–∏ –æ—à–∏–±–∫—É: $e");
    rethrow; // –∏–ª–∏ –º–æ–∂–Ω–æ –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –¥–∞–ª—å—à–µ
  }
}

üéØ 4. –í StreamBuilder

StreamBuilder<int>(
  stream: myStream,
  builder: (context, snapshot) {
    if (snapshot.hasError) {
      return Text('–û—à–∏–±–∫–∞: ${snapshot.error}');
    }
    if (!snapshot.hasData) {
      return CircularProgressIndicator();
    }
    return Text('–î–∞–Ω–Ω—ã–µ: ${snapshot.data}');
  },
);

''',
  ),
  QA(
    tags: [Tag.dart, Tag.stream],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `async*` –∏ `yield` –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ Stream?',
    a: '`async*` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ Stream, –∞ `yield` ‚Äî –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –≤ –ø–æ—Ç–æ–∫.',
  ),
  QA(
    q: '–ö–∞–∫ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å Stream –≤ Future?',
    a: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã `first`, `last`, `single` –∏–ª–∏ `toList()` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–∑ Stream –∫–∞–∫ Future.',
  ),
  QA(
    q: '–ö–∞–∫–∏–µ –µ—Å—Ç—å —Å–ø–æ—Å–æ–±—ã —Å–æ–∑–¥–∞–Ω–∏—è Stream?',
    a: '''
üéØ 1. Async generator
Stream<int> asyncGenerator() async* {
  yield 1;
  yield 2;
}

üéØ 2. StreamController
final controller = StreamController<String>();
controller.add('data');
Stream<String> stream = controller.stream;

üéØ 3. Stream.fromIterable
Stream<String> fromList = Stream.fromIterable(['a', 'b', 'c']);

üéØ 4. Stream.periodic
Stream<int> periodic = Stream.periodic(
  Duration(seconds: 1),
  (count) => count,
);

üéØ 5. Stream.fromFuture
Stream<String> fromFuture = Stream.fromFuture(fetchData());
''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ broadcast Stream –∏ –∫–∞–∫ –µ–≥–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å?',
    a: r'''
–ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–º–µ—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–ª—É—à–∞—Ç–µ–ª–µ–π.

üéØ –ò–∑ –æ–±—ã—á–Ω–æ–≥–æ Stream:
final streamController = StreamController<int>();
final broadcastStream = streamController.stream.asBroadcastStream();

üéØ –°—Ä–∞–∑—É –∫–∞–∫ Broadcast Stream:
final broadcastController = StreamController<int>.broadcast();

- –ö–∞–∂–¥—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫ –ø–æ–ª—É—á–∞–µ—Ç –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ —Å–æ–±—ã—Ç–∏–µ, –µ—Å–ª–∏ –æ–Ω –ø–æ–¥–ø–∏—Å–∞–Ω –¥–æ –∏–ª–∏ –≤–æ –≤—Ä–µ–º—è –µ–≥–æ —ç–º–∏—Å—Å–∏–∏.
- –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–µ –ø–æ–ª—É—á–∞—é—Ç –ø—Ä–æ—à–ª—ã—Ö —Å–æ–±—ã—Ç–∏–π.
- –ï—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è (unsubscribe), –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥–æ–ª–∂–∞—é—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ.

final controller = StreamController<String>.broadcast();

controller.stream.listen((data) => print('Listener A: $data'));
controller.stream.listen((data) => print('Listener B: $data'));

controller.add('Hello');
// –í—ã–≤–µ–¥–µ—Ç:
// Listener A: Hello
// Listener B: Hello
''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ StreamTransformer?',
    a: '''
–ò–Ω–æ–≥–¥–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ—Ç–æ–∫–æ–≤ (map, where, take –∏ —Ç.–ø.) –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.
StreamTransformer –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –∫–∞—Å—Ç–æ–º–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —Å—Ç—Ä–∏–º–æ–≤.

–î–æ–ø—É—Å—Ç–∏–º, –µ—Å—Ç—å –ø–æ—Ç–æ–∫ —á–∏—Å–µ–ª, –∏ —Ö–æ—Ç–∏–º —É–º–Ω–æ–∂–∞—Ç—å –∏—Ö –Ω–∞ 10:

import 'dart:async';

final multiplyByTen = StreamTransformer<int, int>.fromHandlers(
  handleData: (value, sink) {
    sink.add(value * 10);
  },
);

void main() {
  final stream = Stream.fromIterable([1, 2, 3, 4]);

  stream
      .transform(multiplyByTen)
      .listen((data) => print(data)); // 10, 20, 30, 40
}

–ó–¥–µ—Å—å:
- StreamTransformer<int, int> –æ–∑–Ω–∞—á–∞–µ—Ç: –≤—Ö–æ–¥–Ω–æ–π —Ç–∏–ø int, –≤—ã—Ö–æ–¥–Ω–æ–π —Ç–∏–ø —Ç–æ–∂–µ int.
- handleData –ø–æ–ª—É—á–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç value –∏ sink, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.
- –ú–æ–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å, –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –¥–∞–∂–µ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Ö–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.
''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Future?',
    a: 'Future –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ –±—É–¥—É—â–µ–º –ª–∏–±–æ –æ—à–∏–±–∫—É.',
  ),
  QA(
    q: '–ß–µ–º Future –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç Stream?',
    a: 'Future –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, Stream ‚Äî –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π –≤–æ –≤—Ä–µ–º–µ–Ω–∏.',
  ),
  QA(
    q: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å Future?',
    a: '–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä `Future(() => value)`, —Ñ–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥ `Future.value()`, –∏–ª–∏ async-—Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç Future.',
  ),
  QA(
    q: '–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç Future?',
    a: '–° –ø–æ–º–æ—â—å—é `then()` –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, `catchError()` ‚Äî –¥–ª—è –æ—à–∏–±–æ–∫, –∏ `whenComplete()` ‚Äî –¥–ª—è –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ.',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ —Ü–µ–ø–æ—á–∫–∏ Future?',
    a: '–¶–µ–ø–æ—á–∫–∏ Future ‚Äî –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ `then()`, –≥–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–¥–Ω–æ–≥–æ Future –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–º—É, –ø–æ–∑–≤–æ–ª—è—è –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥.',
  ),
  QA(
    q: '–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –µ—Å–ª–∏ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –≤ Future?',
    a: '–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–º—É –∏—Å–∫–ª—é—á–µ–Ω–∏—é (unhandled exception), —á—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Å–±–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –≤—ã–≤–æ–¥ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è.',
  ),
  QA(
    q: '–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Future?',
    a: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π Future –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä—è–º—É—é. –î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, Stream —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç–º–µ–Ω—ã –∏–ª–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã.',
  ),
  QA(
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–µ—Ç–æ–¥ `Future.wait()`?',
    a: '–û–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö Future –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Future —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –≤—Å–µ—Ö, –∏–ª–∏ –æ—à–∏–±–∫—É –ø—Ä–∏ –ª—é–±–æ–º —Å–±–æ–µ.',
  ),
  QA(
    q: '–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `Future.delayed()`?',
    a: '–°–æ–∑–¥–∞–µ—Ç Future, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏, —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–µ–∫ –∏–ª–∏ —Ç–∞–π–º–∞—É—Ç–æ–≤.',
  ),
  QA(
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É `then()` –∏ `await`?',
    a: '`then()` ‚Äî –º–µ—Ç–æ–¥ Future –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —á–µ—Ä–µ–∑ callback, `await` ‚Äî —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–π —Å–∞—Ö–∞—Ä, –¥–µ–ª–∞—é—â–∏–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ –ø–æ—Ö–æ–∂–∏–º –Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π.',
  ),
  QA(
    tags: [Tag.dart, Tag.future],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ eagerError –≤ Future.wait([], eagerError: true) ?',
    a: '''
–ï—Å–ª–∏ eagerError = false (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):
Future.wait –∂–¥—ë—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö futures. –î–∞–∂–µ –µ—Å–ª–∏ –æ–¥–Ω–∞ –∏–∑ –Ω–∏—Ö —É–ø–∞–ª–∞ —Å –æ—à–∏–±–∫–æ–π, –¥—Ä—É–≥–∏–µ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –¥–æ –∫–æ–Ω—Ü–∞.
–ò—Ç–æ–≥–æ–≤—ã–π Future –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —Å –æ—à–∏–±–∫–æ–π (–ø–µ—Ä–≤–æ–π –ø–æ–ø–∞–≤—à–µ–π—Å—è), –Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–≤–µ—Ä—à–∞—Ç—Å—è.

–ï—Å–ª–∏ eagerError = true:
Future.wait –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —Å—Ä–∞–∑—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Ö–æ—Ç—å –æ–¥–∏–Ω Future —É–ø–∞–¥—ë—Ç —Å –æ—à–∏–±–∫–æ–π.
–û—Å—Ç–∞–ª—å–Ω—ã–µ –º–æ–≥—É—Ç –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è ¬´–≤ —Ñ–æ–Ω–µ¬ª, –Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç wait —É–∂–µ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω —Å –æ—à–∏–±–∫–æ–π.
''',
  ),
  QA(
    q: '–ö–∞–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ Future —Å —Ä–∞–∑–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è?',
    a: '–ò—Å–ø–æ–ª—å–∑—É—é—Ç `Future.wait()`, `Future.any()`, `Future.wait([...], eagerError: true)`, –∏–ª–∏ –∫–æ–º–±–∏–Ω–∏—Ä—É—é—Ç —Å async/await –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∏—Å–∫–ª—é—á–µ–Ω–∏–π.',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `Future.sync()`?',
    a: r'''
–ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Future, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏–ª–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–µ–Ω, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Future –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.

Future.sync –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –°–ò–ù–•–†–û–ù–ù–û, –Ω–µ –ø–æ–ø–∞–¥–∞—è –Ω–∏ –≤ –∫–∞–∫—É—é –æ—á–µ—Ä–µ–¥—å

  // Future.sync - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ù–ï–ú–ï–î–õ–ï–ù–ù–û
  Future.sync(() {
    print('2: Future.sync –≤—ã–ø–æ–ª–Ω–µ–Ω');
    return 'sync result';
  }).then((value) {
    print('3: Future.sync.then - –ø–æ–ø–∞–¥–∞–µ—Ç –≤ MICROTASK QUEUE');
  });

- –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤–µ—Ä–Ω—É—Ç—å Future, –Ω–æ —Ñ—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –∫–∞–∫ T, —Ç–∞–∫ –∏ Future<T>;

Future<void> main() async {
  print('Start');

  final future = Future.sync(() {
    print('Inside sync');
    return 'result';
  });

  future.then((value) => print('Value: $value'));

  print('End');
}

Start
Inside sync
End
Value: result
''',
  ),
  QA(
    q: '–ú–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å Future –∏–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏?',
    a: '–ù–µ—Ç, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ `async` –∏–ª–∏ —è–≤–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å Future, –∏–Ω–∞—á–µ –≤–µ—Ä–Ω–µ—Ç—Å—è –æ–±—ã—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.',
  ),

  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `FutureOr`?',
    a: '`FutureOr<T>` ‚Äî —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏–±–æ `T`, –ª–∏–±–æ `Future<T>`. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ä–∞–∑—É –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ Future.',
  ),
  QA(
    q: '–ö–∞–∫ –ª–æ–≤–∏—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤ async-—Ñ—É–Ω–∫—Ü–∏—è—Ö?',
    a: '''
–ß–µ—Ä–µ–∑ –±–ª–æ–∫–∏ `try-catch` –≤–æ–∫—Ä—É–≥ `await` –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ `catchError()` —É Future.

–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ Future —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏ (unhandled exceptions), —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏–ª–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.''',
  ),
  QA(
    q: '–ö–∞–∫–∏–µ –æ—á–µ—Ä–µ–¥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ Dart event loop?',
    a: '''
üéØ Event loop —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É:
1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—á–µ—Ä–µ–¥—å –º–∏–∫—Ä–æ–∑–∞–¥–∞—á (microtask queue) ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏
2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—á–µ—Ä–µ–¥—å —Å–æ–±—ã—Ç–∏–π (event queue) ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–Ω—É –∑–∞–¥–∞—á—É –∏–∑ –æ—á–µ—Ä–µ–¥–∏ —Å–æ–±—ã—Ç–∏–π
3. –ü–æ–≤—Ç–æ—Ä—è–µ—Ç —Ü–∏–∫–ª –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–±–µ –æ—á–µ—Ä–µ–¥–∏ –Ω–µ —Å—Ç–∞–Ω—É—Ç –ø—É—Å—Ç—ã–º–∏

üéØ –î–≤–µ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á:

1. Microtask Queue (–æ—á–µ—Ä–µ–¥—å –º–∏–∫—Ä–æ–∑–∞–¥–∞—á)
- –ò–º–µ–µ—Ç –≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
- –°–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–¥–∞—á–∏ –æ—Ç scheduleMicrotask() –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ Future
- –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π event queue

2. Event Queue (–æ—á–µ—Ä–µ–¥—å —Å–æ–±—ã—Ç–∏–π)
- –°–æ–¥–µ—Ä–∂–∏—Ç I/O —Å–æ–±—ã—Ç–∏—è, —Ç–∞–π–º–µ—Ä—ã, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
- –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–µ –∑–∞ –∏—Ç–µ—Ä–∞—Ü–∏—é
''',
  ),
  QA(
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Future –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ event loop?',
    a: 'Future –ø–æ–º–µ—â–∞–µ—Ç —Å–≤–æ–∏ callback‚Äô–∏ –≤ –æ—á–µ—Ä–µ–¥—å –º–∏–∫—Ä–æ—Ç–∞—Å–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞.',
  ),
  QA(
    q: '–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –º–∏–∫—Ä–æ—Ç–∞—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ?',
    a: '–ú–∏–∫—Ä–æ—Ç–∞—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ—á–µ—Ä–µ–¥—å –Ω–µ –æ–ø—É—Å—Ç–µ–µ—Ç. –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å event loop, –Ω–µ –¥–∞–≤–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è —Å–æ–±—ã—Ç–∏—è–º.',
  ),
  QA(
    q: '–ö–∞–∫–æ–≤–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞ —Å async/await –∏ event loop?',
    a: '–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤–µ—Å—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥, –∑–∞—Ç–µ–º –º–∏–∫—Ä–æ—Ç–∞—Å–∫–∏ (callback-–∏ Future), –ø–æ—Ç–æ–º —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–π–º–µ—Ä—ã).',
  ),
  QA(
    q: '–í –∫–∞–∫—É—é –æ—á–µ—Ä–µ–¥—å –ø–æ–ø–∞–¥–∞–µ—Ç Timer?',
    a: 'Timer ‚Äî —Å–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ—á–µ—Ä–µ–¥—å —Å–æ–±—ã—Ç–∏–π (event queue) –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –º–∏–∫—Ä–æ—Ç–∞—Å–∫–æ–≤.',
  ),
  QA(
    q: '–ö–∞–∫ –º–æ–∂–Ω–æ –∑–∞—Å—Ç–∞–≤–∏—Ç—å event loop –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ –ø–æ–∑–∂–µ, —á–µ–º microtask?',
    a: '''
- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Future –±–µ–∑ Future.microtask()
- –ö–æ–¥ –∏–∑ –æ–±—ã—á–Ω–æ–π Future, Timer, –∏ —Ç.–ø. –ø–æ–ø–∞–¥–∞–µ—Ç –≤ event queue –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∑–∂–µ, –ø–æ—Å–ª–µ –≤—Å–µ—Ö microtask'–æ–≤.

Future(() {
  // –≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ø–æ–∑–∂–µ, —á–µ–º –ª—é–±–æ–π microtask
});

Timer.run(() {
  // –¢–∞–∫–∂–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–µ–º event loop
});

void main() {
  print('1. sync start');
  Timer.run(() => print('2. event loop Timer.run'));
  Future(() => print('3. event loop Future()'));
  Future.delayed(Duration.zero, () => print('4. event loop delayed'));
  scheduleMicrotask(() => print('5. microtask via scheduleMicrotask'));
  Future.microtask(() => print('6. microtask via Future.microtask'));
  print('7. sync end');
}

1. sync start
7. sync end
5. microtask via scheduleMicrotask
6. microtask via Future.microtask
2. event loop Timer.run
3. event loop Future()
4. event loop delayed
''',
  ),
  QA(
    q: '–ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –ª—É—á—à–µ –ø–æ–º–µ—â–∞—Ç—å –≤ –º–∏–∫—Ä–æ—Ç–∞—Å–∫–∏, –∞ –∫–∞–∫–∏–µ –≤ —Å–æ–±—ã—Ç–∏—è?',
    a: '''
–ü—Ä–∞–≤–∏–ª–æ: –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π —Ñ—Ä–µ–π–º ‚Äî –º–∏–∫—Ä–æ—Ç–∞—Å–∫–∞. –ï—Å–ª–∏ –º–æ–∂–µ—Ç –ø–æ–¥–æ–∂–¥–∞—Ç—å ‚Äî —Å–æ–±—ã—Ç–∏–µ.

üéØ –ú–∏–∫—Ä–æ—Ç–∞—Å–∫–∏ (microtasks):

- –û–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ—Ä–µ–π–º–∞
- Future.then(), async/await completions
- Schedulers.instance.addPostFrameCallback() callbacks
- –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –±–ª–æ–∫–∏—Ä—É—é—Ç –æ—Ç—Ä–∏—Å–æ–≤–∫—É

// –ü–ª–æ—Ö–æ - –±–ª–æ–∫–∏—Ä—É–µ—Ç UI
Future.microtask(() {
  // –¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
  heavyComputation();
});

// –•–æ—Ä–æ—à–æ - –¥–ª—è –ª–µ–≥–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ—Å–ª–µ build
Future.microtask(() {
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ build
  controller.updateAfterBuild();
});

üéØ –°–æ–±—ã—Ç–∏—è (events/timers):

- –û–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–¥–æ–∂–¥–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π event loop
- Timer callbacks, Stream events
- I/O –æ–ø–µ—Ä–∞—Ü–∏–∏, HTTP –∑–∞–ø—Ä–æ—Å—ã
- –¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –æ—Ç–ª–æ–∂–∏—Ç—å
''',
  ),
  QA(
    q: '–ö–∞–∫ event loop –≤–ª–∏—è–µ—Ç –Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å UI –≤ Flutter?',
    a: 'Event loop —É–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ–±—ã—Ç–∏–π UI –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –º–∏–∫—Ä–æ—Ç–∞—Å–∫–æ–≤ –∏–ª–∏ –¥–æ–ª–≥–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –ø–æ–¥–≤–∏—Å–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.',
  ),
  QA(
    q: '–ö–∞–∫ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–¥–∞—á—É, –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –≤ –º–∏–∫—Ä–æ—Ç–∞—Å–∫?',
    a: '''
–í Dart –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ—Ç–º–µ–Ω–∏—Ç—å —É–∂–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –º–∏–∫—Ä–æ–∑–∞–¥–∞—á—É.

–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ —á–µ—Ä–µ–∑ Future —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–º–µ–Ω—ã

import 'dart:async';

class CancelToken {
  bool _cancelled = false;
  bool get cancelled => _cancelled;

  void cancel() => _cancelled = true;
}

Future<void> cancellableTask(CancelToken token, void Function() callback) {
  final completer = Completer<void>();

  scheduleMicrotask(() {
    if (token.cancelled) {
      completer.complete();
      return;
    }
    callback();
    completer.complete();
  });

  return completer.future;
}

void main() async {
  final token = CancelToken();

  cancellableTask(token, () => print('–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞'));
  token.cancel(); // –û—Ç–º–µ–Ω—è–µ–º

  await Future.delayed(Duration(milliseconds: 1));
  print('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}
''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ "run-to-completion" –º–æ–¥–µ–ª—å –≤ Dart event loop?',
    a: '–ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ (–º–∏–∫—Ä–æ—Ç–∞—Å–∫ –∏–ª–∏ —Å–æ–±—ã—Ç–∏–µ) –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –±–µ–∑ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è, —á—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–Ω–æ–∫.',
  ),
  QA(
    q: '–ö–∞–∫–∞—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É `Future.microtask()` –∏ `scheduleMicrotask()`?',
    a: r'''
Future.microtask() –∏ scheduleMicrotask() ‚Äî –∑–∞–ø—É—Å–∫–∞—é—Ç –∫–æ–¥ –≤ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–µ, –Ω–æ –µ—Å—Ç—å –æ—Ç–ª–∏—á–∏–µ.

‚úÖ 1. scheduleMicrotask()
‚Äî –Ω–∞–ø—Ä—è–º—É—é —Å—Ç–∞–≤–∏—Ç –∑–∞–¥–∞—á—É –≤ –æ—á–µ—Ä–µ–¥—å –º–∏–∫—Ä–æ–∑–∞–¥–∞—á
- –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Future, –±–µ–∑ await
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:	–¢–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Zone

void main() {
  scheduleMicrotask(() => print('microtask'));
  print('main');
}
üìå –í—ã–≤–æ–¥:
main
microtask

‚úÖ 2. Future.microtask()
‚Äî —Ç–æ–∂–µ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Future
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫: –ß–µ—Ä–µ–∑ .catchError() –∏–ª–∏ try

void main() {
  Future.microtask(() => print('microtask'));
  print('main');
}
üìå –í—ã–≤–æ–¥ ‚Äî —Ç–æ—Ç –∂–µ:
main
microtask
Future.microtask() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç Future ‚Äî –µ–≥–æ –º–æ–∂–Ω–æ await, then, –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ .catchError.

import 'dart:async';

void main() {
  runZonedGuarded(
    () {
      scheduleMicrotask(() {
        throw Exception('–û—à–∏–±–∫–∞ –≤ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–µ');
      });
    },
    (error, stack) {
      print('–ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞ –æ—à–∏–±–∫–∞: $error');
    },
  );
}


''',
  ),
  QA(
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –ø–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º–æ–º –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ—Å—Ç—å—é?',
    a: '''
–ö–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –Ω–∞ –æ–¥–Ω–æ–º —è–¥—Ä–µ
–ü–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞–¥–∞—á –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–¥—Ä–∞—Ö CPU
''',
  ),
  QA(
    q: '–ü–æ—á–µ–º—É Dart –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ—Ç–æ–∫–∏ (threads) —Å –æ–±—â–µ–π –ø–∞–º—è—Ç—å—é?',
    a: '–ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–ª–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≥–æ–Ω–æ–∫ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π, Dart –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Isolates —Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏–π.',
  ),
  QA(
    q: '–ö–∞–∫ –≤ Dart —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è concurrency?',
    a: '''
–ß–µ—Ä–µ–∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å Future, async/await –∏ event loop, –≥–¥–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –æ–¥–Ω–æ–º —è–¥—Ä–µ.

–ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã:
Main isolate ‚Äî –¥–ª—è UI –∏ –ª–µ–≥–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
–î–ª—è Flutter-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –æ–±—ã—á–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ async/await + compute() –¥–ª—è —Ä–µ–¥–∫–∏—Ö heavy operations.
''',
  ),
  QA(
    q: '–ú–æ–∂–Ω–æ –ª–∏ –≤ Dart –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ Future –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ?',
    a: r'''

Future –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ event loop, —Ç–æ –µ—Å—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ, –Ω–æ –Ω–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ

–í Dart –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è Future –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ.
–í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ –∏–∑–æ–ª—è—Ç–∞, –∞ –ù–ï –∏—Å—Ç–∏–Ω–Ω—ã–π –ø–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º.

Future.wait() - —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π —Å–ø–æ—Å–æ–±

Future<void> parallelExecution() async {
  // –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ Future –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
  final futures = [
    fetchUserData(),      // 2 —Å–µ–∫
    fetchWeatherData(),   // 1 —Å–µ–∫
    fetchNewsData(),      // 3 —Å–µ–∫
  ];

  try {
    // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö Future (–≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ‚âà 3 —Å–µ–∫, –Ω–µ 6!)
    final results = await Future.wait(futures);

    final userData = results[0];
    final weatherData = results[1];
    final newsData = results[2];

    print('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!');
  } catch (e) {
    print('–û—à–∏–±–∫–∞ –≤ –æ–¥–Ω–æ–º –∏–∑ Future: $e');
  }
}

// –°–∏–º—É–ª—è—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
Future<String> fetchUserData() async {
  await Future.delayed(Duration(seconds: 2));
  return 'User data';
}

Future<String> fetchWeatherData() async {
  await Future.delayed(Duration(seconds: 1));
  return 'Weather data';
}

Future<String> fetchNewsData() async {
  await Future.delayed(Duration(seconds: 3));
  return 'News data';
}
''',
  ),
  QA(
    q: '–ú–æ–∂–Ω–æ –ª–∏ –≤–Ω—É—Ç—Ä–∏ –∏–∑–æ–ª—è—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å Future?',
    a: r'''
–î–∞, –º–æ–∂–Ω–æ.

üìå –ü—Ä–∏–º–µ—Ä 1: –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

void main() async {
  final ReceivePort receivePort = ReceivePort();
  await Isolate.spawn(isolateFunction, receivePort.sendPort);
  final result = await receivePort.first;
  print(result); // "–î–∞–Ω–Ω—ã–µ –∏–∑ –∏–∑–æ–ª—è—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã!"
  receivePort.close();
}

// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –∏–∑–æ–ª—è—Ç–µ
Future<void> isolateFunction(SendPort sendPort) async {
  // Future —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–Ω—É—Ç—Ä–∏ –∏–∑–æ–ª—è—Ç–∞
  final result = await Future.delayed(
    Duration(seconds: 2),
    () => '–î–∞–Ω–Ω—ã–µ –∏–∑ –∏–∑–æ–ª—è—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã!',
  );

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ
  sendPort.send(result);
}


üìå –ü—Ä–∏–º–µ—Ä 2: –¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å HTTP –∑–∞–ø—Ä–æ—Å–æ–º

// –§—É–Ω–∫—Ü–∏—è –∏–∑–æ–ª—è—Ç–∞ —Å HTTP –∑–∞–ø—Ä–æ—Å–æ–º
void heavyWorkIsolate(List<dynamic> args) async {
  SendPort sendPort = args[0];
  String url = args[1];

  try {
    // Future –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–∞ –≤–Ω—É—Ç—Ä–∏ –∏–∑–æ–ª—è—Ç–∞
    final client = HttpClient();
    final request = await client.getUrl(Uri.parse(url));
    final response = await request.close();
    final data = await response.transform(utf8.decoder).join();

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Ç—è–∂–µ–ª–∞—è —Ä–∞–±–æ—Ç–∞)
    await Future.delayed(Duration(seconds: 1)); // –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏

    sendPort.send({'success': true, 'data': data.length});
    client.close();
  } catch (e) {
    sendPort.send({'success': false, 'error': e.toString()});
  }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
void main() async {
  final receivePort = ReceivePort();

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–∑–æ–ª—è—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
  await Isolate.spawn(
    heavyWorkIsolate,
    [receivePort.sendPort, 'https://jsonplaceholder.typicode.com/posts']
  );

  final result = await receivePort.first;
  print('–†–µ–∑—É–ª—å—Ç–∞—Ç: $result');

  receivePort.close();
}

''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ "shared nothing" –º–æ–¥–µ–ª—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ Isolates?',
    a: '–ö–∞–∂–¥—ã–π Isolate –∏–º–µ–µ—Ç —Å–≤–æ—é –ø–∞–º—è—Ç—å –∏ –Ω–µ –¥–µ–ª–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ Isolate, —á—Ç–æ —É–ø—Ä–æ—â–∞–µ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º –±–µ–∑ –≥–æ–Ω–æ–∫.',
  ),
  QA(
    q: '–ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã (Iterable) –æ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö (Stream)?',
    a: '–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç Iterable –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç `sync*` –∏ `yield`. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç Stream, –∏—Å–ø–æ–ª—å–∑—É—é—Ç `async*` –∏ `yield` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π.',
  ),
  QA(
    q: '–í —á–µ–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–π —Å—Ä–∞–∑—É?',
    a: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –ª–µ–Ω–∏–≤–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É, —ç–∫–æ–Ω–æ–º—è –ø–∞–º—è—Ç—å –∏ –ø–æ–≤—ã—à–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–æ–ª—å—à–∏–º–∏ –∏–ª–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏.',
  ),
  QA(
    q: '–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä?',
    a: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ `sync*` –≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Iterable, –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä `yield` –¥–ª—è –≤—ã–¥–∞—á–∏ –∑–Ω–∞—á–µ–Ω–∏–π.',
  ),
  QA(
    q: '–ö–∞–∫ –æ–±—ä—è–≤–∏—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä?',
    a: '''
–í Dart –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ–±—ä—è–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é:

- async* –≤–º–µ—Å—Ç–æ async
- yield –≤–º–µ—Å—Ç–æ return
- –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π —Ç–∏–ø ‚Äî Stream<T>

Stream<int> countTo(int max) async* {
  for (int i = 1; i <= max; i++) {
    await Future.delayed(Duration(seconds: 1));
    yield i;
  }
}
''',
  ),
  QA(
    q: '–ú–æ–∂–µ—Ç –ª–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ–¥–µ—Ä–∂–∞—Ç—å `await`?',
    a: '–¢–æ–ª—å–∫–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (`async*`) –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å `await` –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –ø–µ—Ä–µ–¥ –≤—ã–¥–∞—á–µ–π –∑–Ω–∞—á–µ–Ω–∏—è.',
  ),
  QA(
    q: '–ö–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫–∏ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞—Ö?',
    a: '–ß–µ—Ä–µ–∑ `try-catch` –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Å `async*`, –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ —É Stream –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ.',
  ),
  QA(
    q: '–ú–æ–∂–Ω–æ –ª–∏ –ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –¥–æ—Å—Ä–æ—á–Ω–æ?',
    a: '''
üìå 1. –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (sync*)

Iterable<int> numbers() sync* {
  for (var i = 0; i < 5; i++) {
    yield i;
  }
}

–ü—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ç–µ—Ä–∞—Ü–∏—é:

for (var n in numbers()) {
  if (n == 2) break; // –¥–æ—Å—Ä–æ—á–Ω–æ –ø—Ä–µ—Ä—ã–≤–∞–µ–º
}

–ö–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è break, –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –±–æ–ª—å—à–µ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏ –µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ—Ä—è–µ—Ç—Å—è.

üìå 2. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä (async*)
Stream<int> numbers() async* {
  for (var i = 0; i < 5; i++) {
    yield i;
    await Future.delayed(Duration(milliseconds: 100));
  }
}

–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –æ—Ç–ø–∏—Å–∫—É –æ—Ç Stream:

final sub = numbers().listen((value) {
  print(value);
  if (value == 2) {
    sub.cancel(); // –æ—Ç–ø–∏—Å–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
  }
});

–ö–æ–≥–¥–∞ cancel() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ (–≤—ã–∑–æ–≤–µ—Ç—Å—è finally –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å).

üìå 3. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∏–∑–Ω—É—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞

–¢—ã –º–æ–∂–µ—à—å –∑–∞–≤–µ—Ä—à–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–æ—Å—Ä–æ—á–Ω–æ —Å –ø–æ–º–æ—â—å—é return:

Iterable<int> short() sync* {
  yield 1;
  yield 2;
  return; // –¥–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
  yield 3; // —É–∂–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è
}

–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è async*:

Stream<int> shortAsync() async* {
  yield 1;
  return; // –ø—Ä–µ—Ä—ã–≤–∞–µ–º
}

–í—ã–≤–æ–¥
- –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π: break/return –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å.
- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π: StreamSubscription.cancel() –∏–ª–∏ return –≤–Ω—É—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞.
''',
  ),
  QA(
    q: '–ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–∞–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ flavors?',
    a: '–£–ø—Ä–æ—â–∞—é—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–∞–º–∏, –ø–æ–∑–≤–æ–ª—è—é—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ API-–∫–ª—é—á–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∏–∫–æ–Ω–∫–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏.',
  ),
  QA(
    q: '–ö–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–∞–∑–Ω—ã–º–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º–∏ API URL –¥–ª—è —Ä–∞–∑–Ω—ã—Ö flavors?',
    a: r'''
üìå 1. Dart-define

–ó–∞–ø—É—Å–∫
flutter run --dart-define=FLAVOR=dev  --dart-define=API_URL=https://api.dev.example.com
flutter run --dart-define=FLAVOR=prod --dart-define=API_URL=https://api.prod.example.com

–ö–æ–¥

String.fromEnvironment('API_URL');

üìå 2. Enum-based –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

enum Environment { dev, staging, prod }

class EnvironmentConfig {
  static const Environment _current = Environment.values.byName(
    String.fromEnvironment('ENVIRONMENT', defaultValue: 'dev'),
  );

  static Environment get current => _current;

  static String get apiUrl {
    switch (_current) {
      case Environment.dev:
        return 'https://api.dev.example.com';
      case Environment.staging:
        return 'https://api.staging.example.com';
      case Environment.prod:
        return 'https://api.example.com';
    }
  }

üìå 3. JSON-—Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

assets/config/dev.json:
{
  "apiUrl": "https://api.dev.example.com",
  "timeout": 30000,
  "enableLogging": true
}

class ConfigLoader {
  static late Map<String, dynamic> _config;

  static Future<void> load() async {
    const flavor = String.fromEnvironment('FLAVOR', defaultValue: 'dev');
    final configString = await rootBundle.loadString('assets/config/$flavor.json');
    _config = json.decode(configString);
  }

  static String get apiUrl => _config['apiUrl'];
  static int get timeout => _config['timeout'];
  static bool get enableLogging => _config['enableLogging'];
}

üìå 4. dotenv

dependencies:
  flutter_dotenv: 5.1.0

flutter:
  assets:
    - .env.dev
    - .env.test
    - .env.prod

.env.dev:
API_URL=https://api.dev.example.com
API_KEY=dev_key_123
TIMEOUT=30000
ENABLE_LOGGING=true

.env.prod:
API_URL=https://api.example.com
API_KEY=prod_key_456
TIMEOUT=10000
ENABLE_LOGGING=false

import 'package:flutter_dotenv/flutter_dotenv.dart';

class AppConfig {
  static Future<void> load({String flavor = 'dev'}) async {
    await dotenv.load(fileName: '.env.$flavor');
  }

  static String get apiUrl => dotenv.env['API_URL'] ?? '';
  static String get apiKey => dotenv.env['API_KEY'] ?? '';
  static int get timeout => int.parse(dotenv.env['TIMEOUT'] ?? '30000');
  static bool get enableLogging => dotenv.env['ENABLE_LOGGING'] == 'true';
}
''',
  ),
  QA(
    q: '–ö–∞–∫ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å flavors —Å Firebase –≤ Flutter?',
    a: '–°–æ–∑–¥–∞—é—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã Firebase –¥–ª—è –∫–∞–∂–¥–æ–≥–æ flavor, –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ google-services.json –∏ GoogleService-Info.plist, –ø–æ–¥–∫–ª—é—á–∞—è –∏—Ö –≤ build.',
  ),
  QA(
    q: '–ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å flavor –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?',
    a: '–ù–µ—Ç, flavor –∑–∞–¥–∞—ë—Ç—Å—è –ø—Ä–∏ —Å–±–æ—Ä–∫–µ. –î–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥—Ä—É–≥–∏–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, remote config.',
  ),
  QA(
    q: '–ö–∞–∫ —Ö—Ä–∞–Ω–∏—Ç—å —Å–µ–∫—Ä–µ—Ç—ã (API –∫–ª—é—á–∏) –¥–ª—è —Ä–∞–∑–Ω—ã—Ö flavors –±–µ–∑–æ–ø–∞—Å–Ω–æ?',
    a: '–ò—Å–ø–æ–ª—å–∑—É—é—Ç —Ñ–∞–π–ª—ã, –Ω–µ –∫–æ–º–º–∏—Ç—è—â–∏–µ—Å—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, .env), –∏–ª–∏ —Ö—Ä–∞–Ω—è—Ç —Å–µ–∫—Ä–µ—Ç—ã –≤ –∑–∞—â–∏—â—ë–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö, –∑–∞–≥—Ä—É–∂–∞—è –∏—Ö –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏.',
  ),
  QA(
    q: '–ö–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö flavors?',
    a: '–û—Ç–¥–µ–ª—è—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ entry points (main_*.dart), –∏ –≤—ã–¥–µ–ª—è—Ç—å flavor-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –∫–æ–¥ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏.',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ JIT-–∫–æ–º–ø–∏–ª—è—Ü–∏—è –≤ Dart?',
    a: 'JIT ()Just-In-Time) ‚Äî –∫–æ–º–ø–∏–ª—è—Ü–∏—è –∫–æ–¥–∞ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (runtime), —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –∫–æ–¥ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–∑–º–µ–Ω—è—Ç—å –µ–≥–æ.',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ AOT-–∫–æ–º–ø–∏–ª—è—Ü–∏—è –≤ Dart?',
    a: 'AOT (Ahead-of-Time) ‚Äî –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∏–ª—è—Ü–∏—è –∫–æ–¥–∞ –≤ –º–∞—à–∏–Ω–Ω—ã–π –∫–æ–¥ –¥–æ –∑–∞–ø—É—Å–∫–∞, —á—Ç–æ —É–ª—É—á—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —É–º–µ–Ω—å—à–∞–µ—Ç –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.',
  ),
  QA(
    q: '–ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —É JIT-–∫–æ–º–ø–∏–ª—è—Ü–∏–∏?',
    a: '–ë—ã—Å—Ç—Ä–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å hot reload, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–¥–∞ –∏ –æ—Ç–ª–∞–¥–∫–∏.',
  ),
  QA(
    q: '–ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —É AOT-–∫–æ–º–ø–∏–ª—è—Ü–∏–∏?',
    a: '–ë–æ–ª–µ–µ –≤—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –º–µ–Ω—å—à–∏–π —Ä–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –±—ã—Å—Ç—Ä–æ–µ –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞.',
  ),
  QA(
    q: '–ö–æ–≥–¥–∞ Dart –∏—Å–ø–æ–ª—å–∑—É–µ—Ç JIT, –∞ –∫–æ–≥–¥–∞ AOT?',
    a: 'JIT –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (debug) –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ü–∏–∫–ª–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, AOT ‚Äî –¥–ª—è —Å–±–æ—Ä–æ–∫ —Ä–µ–ª–∏–∑–∞ (release).',
  ),
  QA(
    q: '–ö–∞–∫ JIT –≤–ª–∏—è–µ—Ç –Ω–∞ hot reload –≤ Flutter?',
    a: 'JIT –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å hot reload ‚Äî –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.',
  ),
  QA(
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å hot reload —Å AOT-–∫–æ–º–ø–∏–ª—è—Ü–∏–µ–π?',
    a: '–ù–µ—Ç, hot reload —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å JIT, –ø–æ—Ç–æ–º—É —á—Ç–æ AOT-–∫–æ–º–ø–∏–ª—è—Ü–∏—è —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –∫–æ–¥ –∑–∞—Ä–∞–Ω–µ–µ.',
  ),
  QA(
    q: '–ö–∞–∫–∏–µ –µ—Å—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ JIT-–∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ?',
    a: '–ó–∞–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –∏ –ø–æ–Ω–∏–∂–µ–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑-–∑–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –Ω–∞ –ª–µ—Ç—É.',
  ),
  QA(
    q: '–ö–∞–∫ –≤ Flutter –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ—Ö–æ–¥ —Å JIT –Ω–∞ AOT –ø—Ä–∏ —Å–±–æ—Ä–∫–µ?',
    a: '–ü—Ä–∏ —Å–±–æ—Ä–∫–µ release-—Ñ–ª–∞–≥–∞ Flutter –∑–∞–ø—É—Å–∫–∞–µ—Ç AOT-–∫–æ–º–ø–∏–ª—è—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç Dart-–∫–æ–¥ –≤ –º–∞—à–∏–Ω–Ω—ã–π –∫–æ–¥ –¥–ª—è —Ü–µ–ª–µ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.',
  ),
  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å –Ω–µ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç –≤ –¥—Ä—É–≥–æ–π Isolate?',
    a: '''
–ü—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –Ω–µ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤ –¥—Ä—É–≥–æ–π Isolate –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ ArgumentError —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ —Ç–æ–º,
—á—Ç–æ –æ–±—ä–µ–∫—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω.

–ß—Ç–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –º–µ–∂–¥—É Isolates:
- –ü—Ä–∏–º–∏—Ç–∏–≤—ã (int, double, String, bool)
- Collections (List, Map, Set) —Å —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
- –û–±—ä–µ–∫—Ç—ã, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é
- SendPort –¥–ª—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
''',
  ),
  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ Isolate –≤ –Ω–æ–≤–æ–º Isolate?',
    a: '–ù–µ—Ç. Isolate –Ω–µ —Ä–∞–∑–¥–µ–ª—è—é—Ç –ø–∞–º—è—Ç—å, –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –æ–±—ä–µ–∫—Ç—ã –∫–æ–ø–∏—Ä—É—é—Ç—Å—è (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ), –∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ.',
  ),
  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É Isolate –∏ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã?',
    a: '–í—ã–∑–æ–≤ Isolate.kill() –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –∏–∑–æ–ª—è—Ç–∞. –¢–∞–∫–∂–µ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞—Ç—å ReceivePort —á–µ—Ä–µ–∑ .close(), —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —É—Ç–µ—á–µ–∫.',
  ),
  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–æ–ª—è—Ç—É –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ?',
    a: '''
–î–∞, –∏–∑–æ–ª—è—Ç –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ —á–µ—Ä–µ–∑ message passing —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º SendPort –∏ ReceivePort.

1. –ß–µ—Ä–µ–∑ compute() (—Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π)

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Future<int> calculateSquare(int number) async {
  return await compute(_squareFunction, number);
}

int _squareFunction(int n) {
  return n * n;
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
final result = await calculateSquare(5); // 25


2. –†—É—á–Ω–∞—è —Å–≤—è–∑—å —á–µ—Ä–µ–∑ SendPort/ReceivePort

Future<String> processInIsolate(String data) async {
  final receivePort = ReceivePort();

  // –°–æ–∑–¥–∞–µ–º –∏–∑–æ–ª—è—Ç –∏ –ø–µ—Ä–µ–¥–∞–µ–º SendPort
  await Isolate.spawn(_isolateFunction, {
    'data': data,
    'sendPort': receivePort.sendPort,
  });

  // –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  final result = await receivePort.first;
  receivePort.close();

  return result;
}

void _isolateFunction(Map<String, dynamic> params) {
  final data = params['data'] as String;
  final sendPort = params['sendPort'] as SendPort;

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  final result = data.toUpperCase();

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ
  sendPort.send(result);
}
''',
  ),
  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Isolate.current?',
    a: r'''
Isolate.current ‚Äî —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–µ–∫—É—â–∏–π –∏–∑–æ–ª—è—Ç (Isolate), –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–¥.

void main() {
  print('Main isolate: ${Isolate.current.debugName}');
}
''',
  ),
  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–ö–∞–∫–∏–µ –µ—Å—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã Isolate, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ –∑–∞–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å?',
    a: '–ï—Å–ª–∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (Future, async/await), –º–∏–∫—Ä–æ—Ç–∞—Å–∫–∏ –∏ event loop Dart-–∞, —á—Ç–æ –≥–æ—Ä–∞–∑–¥–æ –¥–µ—à–µ–≤–ª–µ –ø–æ —Ä–µ—Å—É—Ä—Å–∞–º.',
  ),
  QA(
    tags: [Tag.dart, Tag.isolate],
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É compute() –∏ Isolate.spawn() ?',
    a: r'''
üìå compute() ‚Äî –æ–±—ë—Ä—Ç–∫–∞ –≤–æ–∫—Ä—É–≥ Isolate.spawn() —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏: –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –∏ –Ω–µ–ª—å–∑—è —É–ø—Ä–∞–≤–ª—è—Ç—å –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º.
compute() –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ç—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º Isolate, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å UI Thread.
–£–¥–æ–±–Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –∑–∞–¥–∞—á.

int heavyTask(int n) {
  int sum = 0;
  for (int i = 0; i < n; i++) {
    sum += i * i;
  }
  return sum;
}

void main() async {
  int result = await compute(heavyTask, 1000000);
  print('–†–µ–∑—É–ª—å—Ç–∞—Ç: $result');
}

üìå –î–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Isolate.spawn().
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ mixin?',
    a: r'''
Mixin ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–ª–∞—Å—Å–∞—Ö –±–µ–∑ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.
–° –ø–æ–º–æ—â—å—é `with` –º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–∑ mixin –∫ –∫–ª–∞—Å—Å—É.
Mixin –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤, –ø–æ—ç—Ç–æ–º—É –Ω–µ–ª—å–∑—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å `const`, `factory` –∏–ª–∏ `named constructor` –≤ mixin-

–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å

mixin Logger {
  void log(String message) {
    print('[${DateTime.now()}] $message');
  }
}

class ApiService with Logger {
  void fetchData() {
    log('Fetching data from API'); // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ –∏–∑ mixin
  }
}

üìå 1. –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è

mixin Flyable {
  void fly() => print('Flying');
}

mixin Swimmable {
  void swim() => print('Swimming');
}

class Duck extends Animal with Flyable, Swimmable {
  // Duck –ø–æ–ª—É—á–∞–µ—Ç –º–µ—Ç–æ–¥—ã fly() –∏ swim()
}

üìå 2. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ on

mixin DatabaseMixin on Repository {
  void logQuery(String query) {
    print('Executing: $query');
  }
}

abstract class Repository {
  void save();
}

// –ú–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞–º Repository
class UserRepository extends Repository with DatabaseMixin {
  @override
  void save() {
    logQuery('INSERT INTO users...');
  }
}

üìå 3. –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≤ mixin

mixin Validatable {
  bool validate(); // –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –º–µ—Ç–æ–¥

  void saveIfValid() {
    if (validate()) {
      print('Saving...');
    }
  }
}

class User with Validatable {
  @override
  bool validate() => name.isNotEmpty;

  String name = '';
}

üìå –ü–æ—Ä—è–¥–æ–∫ –ª–∏–Ω–µ–∞—Ä–∏–∑–∞—Ü–∏–∏

mixin A {
  void method() => print('A');
}

mixin B {
  void method() => print('B');
}

mixin C {
  void method() => print('C');
}

class MyClass with A, B, C {
  // method() –≤—ã–∑–æ–≤–µ—Ç 'C' (–ø–æ—Å–ª–µ–¥–Ω–∏–π –≤ —Ü–µ–ø–æ—á–∫–µ)
}

üìå –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å mixin:
- –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –Ω–µ—Å–≤—è–∑–∞–Ω–Ω—ã–º –∫–ª–∞—Å—Å–∞–º
- –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–æ–π –∫–ª–∞—Å—Å–∞

üìå Mixin vs –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ:
–ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: "—è–≤–ª—è–µ—Ç—Å—è" (is-a)
Mixin: "–º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å" (can-do)

üìå Mixin vs –∫–æ–º–ø–æ–∑–∏—Ü–∏—è:
Mixin –≤—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –≤ –∫–ª–∞—Å—Å
–ö–æ–º–ø–æ–∑–∏—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—ä–µ–∫—Ç –∫–∞–∫ –ø–æ–ª–µ
''',
  ),

  QA(
    tags: [Tag.dart],
    q: 'Extension –∏ Mixin ‚Äî –≤ —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞?',
    a: 'Extension –Ω–µ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∞ mixin ‚Äî –º–æ–∂–µ—Ç. Extension –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∏–µ—Ä–∞—Ä—Ö–∏–∏ —Ç–∏–ø–æ–≤.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –≤ –æ–¥–Ω–æ–º –∫–ª–∞—Å—Å–µ?',
    a: '–ú–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —á–µ—Ä–µ–∑ implements, –Ω–æ Dart –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ (extends ‚Äî —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∫–ª–∞—Å—Å).',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ build_runner –∏ –∫–∞–∫ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç?',
    a: '`build_runner` ‚Äî —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∫–æ–¥–∞. –û–Ω –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã (`Builder`), –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–∑–¥–∞—é—Ç Dart-–∫–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π –∏–ª–∏ —à–∞–±–ª–æ–Ω–æ–≤.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø–∞–∫–µ—Ç json_serializable –∏ –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω?',
    a: '`json_serializable` –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–¥ –¥–ª—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏/–¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ JSON. –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –∏ code generation, –∏–∑–±–∞–≤–ª—è—è –æ—Ç —Ä—É—á–Ω–æ–≥–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—è `toJson`/`fromJson`.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∞—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∫–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ json_serializable?',
    a: "`@JsonSerializable()` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏. –¢–∞–∫–∂–µ –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å part-—Ñ–∞–π–ª –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–∏–≤—É `part 'model.g.dart'`.",
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å code generation –¥–ª—è –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π?',
    a: '–î–∞. DI-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –≤—Ä–æ–¥–µ `injectable` –∏ `get_it` –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `build_runner` –∏ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É final –∏ const?',
    a: '`final` –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (runtime). `const` –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–∑–≤–µ—Å—Ç–Ω–æ –≤–æ –≤—Ä–µ–º—è compile-time. `const` ‚Äî compile-time, `final` ‚Äî run-time.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ late-–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–æ –µ—ë –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏?',
    a: '–ï—Å–ª–∏ —ç—Ç–æ `late` –±–µ–∑ `final`, –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç runtime error `LateInitializationError`. –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—ã–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ ‚Äî –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å late —Å final?',
    a: '`late final` –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –æ–¥–∏–Ω —Ä–∞–∑, –Ω–æ –ø–æ–∑–∂–µ ‚Äî –Ω–µ –≤ –º–æ–º–µ–Ω—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –≠—Ç–æ –ª–µ–Ω–∏–≤–æ–µ final-–ø–æ–ª–µ.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Static?',
    a: '''
static ‚Äî —ç—Ç–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–ª–∏ –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏–º–∏ –∫–ª–∞—Å—Å—É, –∞ –Ω–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—É —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞.
–î–æ—Å—Ç—É–ø –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞: ClassName.member.

static const - –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
static final - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –≤ runtime
static late final - –æ—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–µ—Ç –ª–∏ static-–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—ã—Ç—å const –∏–ª–∏ final?',
    a: '–î–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: `static const String version = "1.0";`. –¢–∞–∫–∂–µ –¥–æ–ø—É—Å—Ç–∏–º `static final`, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å late —Å static?',
    a: '–î–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: `static late final MyService service;` ‚Äî —ç—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–ª–æ–∂–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –æ–±—â–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–æ –º–æ–º–µ–Ω—Ç–∞ –µ—ë –ø–µ—Ä–≤–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ const –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞?',
    a: '''
1) –≠–∫–æ–Ω–æ–º–∏—è –ø–∞–º—è—Ç–∏ - –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–Ω—É –∏ —Ç—É –∂–µ –ø–∞–º—è—Ç—å
2) –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å - –æ–±—ä–µ–∫—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
3) –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã
4) –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ - –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –Ω–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ

–ò—Å–ø–æ–ª—å–∑—É–π const –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –¥–ª—è –∫–ª–∞—Å—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω—ã –Ω–∞ —ç—Ç–∞–ø–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.

–ö–ª–∞—Å—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ final –ø–æ–ª—è:

class Person {
  final String name;
  final int age;
  const Person(this.name, this.age);
}

void main() {
  const person1 = Person('Alice', 25);
  const person2 = Person('Alice', 25);

  // person1 –∏ person2 - —ç—Ç–æ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç –≤ –ø–∞–º—è—Ç–∏!
  print(person1 == person2); // true
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ final –ø–æ—Å–ª–µ –µ–≥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏?',
    a: '–ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É: `final` –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∞—Ç—å –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –≤–∏–¥—ã –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Dart?',
    a: r'''
üìå 1. –ü–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

void greet(String name, int age) {
  print('Hello $name, you are $age years old');
}

// –í—ã–∑–æ–≤
greet('Alice', 25);

üìå 2. –ü–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
–û–±–æ—Ä–∞—á–∏–≤–∞—é—Ç—Å—è –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ []:

void greet(String name, [String? surname, int? age]) {
  print('Hello $name');
  if (surname != null) print('Surname: $surname');
  if (age != null) print('Age: $age');
}

// –í—ã–∑–æ–≤—ã
greet('Alice');              // Hello Alice
greet('Alice', 'Smith');     // Hello Alice, Surname: Smith
greet('Alice', 'Smith', 25); // Hello Alice, Surname: Smith, Age: 25

üìå 3. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

–î–ª—è –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:

void greet(String name, {String greeting = 'Hello', int times = 1}) {
  for (int i = 0; i < times; i++) {
    print('$greeting, $name!');
  }
}

// –í—ã–∑–æ–≤—ã
greet('Alice');                    // Hello, Alice!
greet('Alice', greeting: 'Hi');   // Hi, Alice!
greet('Alice', times: 3);         // Hello, Alice! (3 —Ä–∞–∑–∞)

–î–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö:

void calculate(int a, [int b = 0, int c = 1]) {
  print(a + b + c);
}

üìå 4. –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ required:

class User {
  final String name;
  final int age;
  final String email; // –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π

  User(this.name, {required this.age, this.email = ''});
}

// –í—ã–∑–æ–≤
User('Alice', age: 25);
User('Bob', age: 30, email: 'bob@example.com');

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å default –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤?',
    a: '–î–∞. –î–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∏ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è default.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —É —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏?',
    a: '–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö: `void f(int a, [int? b]) {}`.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏?',
    a: '–î–∞. –°–Ω–∞—á–∞–ª–∞ –∏–¥—É—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∑–∞—Ç–µ–º ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –∏–ª–∏ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ generic-–ø–∞—Ä–∞–º–µ—Ç—Ä –≤ Dart?',
    a: '''
Dart –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø—Ä—è–º–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ extends, –Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å
—á–µ—Ä–µ–∑ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.

abstract class ComparableAndIterable<T> implements Comparable<T>, Iterable<T> {}

class MyClass<T extends ComparableAndIterable<T>> {
  // T –¥–æ–ª–∂–µ–Ω —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –∏ Comparable, –∏ Iterable
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ —É–∫–∞–∑–∞—Ç—å default –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è generic-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞?',
    a: '''
–ù–µ—Ç, –≤ Dart –Ω–µ–ª—å–∑—è —É–∫–∞–∑–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è generic-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞ (—Ç–∏–ø–∞).

// ‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢
class Box<T = String> {  // –û—à–∏–±–∫–∞: Default values for type parameters are not supported.
  T value;
  Box(this.value);
}

‚úÖ –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥

class Box<T> {
  final T value;

  Box(this.value);

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ —Å —Ç–∏–ø–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  static Box<String> create(String value) => Box<String>(value);
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
void main() {
  var box1 = Box<int>(100);
  var box2 = Box.create("default string"); // —Ç–∏–ø String "–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
}

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É <T extends Object> –∏ <T> ?',
    a: '`T extends Object` –∏—Å–∫–ª—é—á–∞–µ—Ç null-–∑–Ω–∞—á–µ–Ω–∏—è (–µ—Å–ª–∏ null safety –≤–∫–ª—é—á–µ–Ω–∞). –ü—Ä–æ—Å—Ç–æ `T` ‚Äî –º–æ–∂–µ—Ç –±—ã—Ç—å `T?`. –≠—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–∏–ø–æ–≤—É—é —Å—Ç—Ä–æ–≥–æ—Å—Ç—å –∏ –∑–∞—â–∏—Ç—É –æ—Ç null.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ callable –∫–ª–∞—Å—Å?',
    a: '''
–ö–ª–∞—Å—Å, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –º–µ—Ç–æ–¥ call(...).

–¢–∞–∫–æ–π –º–µ—Ç–æ–¥ –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å —Ç–∞–∫, –±—É–¥—Ç–æ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è:

class Adder {
  final int addValue;
  const Adder(this.addValue);

  int call(int x) => x + addValue;
}

void main() {
  final addFive = Adder(5);
  print(addFive(10)); // 15 ‚Äî –≤—ã–∑–≤–∞–ª–∏ –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é
}

call ‚Äî –æ–±—ã—á–Ω—ã–π –º–µ—Ç–æ–¥, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä–∞–º–∏.
–†–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º–∏ (async, async*, sync*).
–ú–µ—Ç–æ–¥ `call()` –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ª—é–±—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–∞–∫ –æ–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è.

Callable class –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é.

Dart –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–≥—Ä—É–∑–∫—É –º–µ—Ç–æ–¥–æ–≤. –î–æ–ø—É—Å—Ç–∏–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –º–µ—Ç–æ–¥ `call`,

Dart –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç —Å –º–µ—Ç–æ–¥–æ–º `call` –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—é, –µ—Å–ª–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç.
–ù–∞–ø—Ä–∏–º–µ—Ä, `void doStuff(Function(String) action)` –ø—Ä–∏–º–µ—Ç –∏ `MyCallableClass().call`.

–ï—Å–ª–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ `call()` —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å typedef, –æ–±—ä–µ–∫—Ç –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–º, –≥–¥–µ –æ–∂–∏–¥–∞–µ—Ç—Å—è typedef-—Ñ—É–Ω–∫—Ü–∏—è.
''',
  ),
  QA(
    q: '–ö–∞–∫ –æ—Ç–ª–∏—á–∏—Ç—å –≤—ã–∑–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –æ—Ç –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞ call() —É —ç–∫–∑–µ–º–ø–ª—è—Ä–∞?',
    a: '''
–í—ã–∑–æ–≤ `MyClass()` ‚Äî —ç—Ç–æ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
      `MyClass()()` ‚Äî —ç—Ç–æ —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏–µ, –∞ –ø–æ—Ç–æ–º –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ `call()`. –°–∫–æ–±–∫–∏ –ø–æ—Å–ª–µ —Å–∫–æ–±–æ–∫ ‚Äî –Ω–µ –æ—à–∏–±–∫–∞, –∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å.

class A {
  void call() {}
}

class B { }

A()(); // OK
B()(); // –æ—à–∏–±–∫–∞

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏–µ?',
    a: '''
—ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏, –¥–∞–∂–µ –∫–æ–≥–¥–∞ —ç—Ç–∞ –æ–±–ª–∞—Å—Ç—å —É–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
- –ó–∞—Ö–≤–∞—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: –∑–∞–º—ã–∫–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∞ –Ω–µ –∫–æ–ø–∏—é –∑–Ω–∞—á–µ–Ω–∏—è (–∫—Ä–æ–º–µ –ø—Ä–∏–º–∏—Ç–∏–≤–æ–≤ –ø—Ä–∏ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–∏)
- –ñ–∏–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ –∑–∞–º—ã–∫–∞–Ω–∏—è –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –Ω–∞ –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏
- –£—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏: –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–æ–≥—É—Ç —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã –¥–æ–ª—å—à–µ, —á–µ–º –Ω—É–∂–Ω–æ

Function makeAdder(int x) {
  return (int y) => x + y; // –∑–∞–º—ã–∫–∞–Ω–∏–µ: –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç x
}

void main() {
  final add5 = makeAdder(5);
  print(add5(3)); // 8
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–î–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω List.filled ?',
    a: '''
–ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞–ª—Å—è –æ–±—ä–µ–∫—Ç (–Ω–µ –ø—Ä–∏–º–∏—Ç–∏–≤), —Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ —Å—Å—ã–ª–∫—É. –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ ‚Äî –º–µ–Ω—è–µ—Ç –≤—Å–µ. –≠—Ç–æ —á–∞—Å—Ç—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –±–∞–≥–æ–≤.

// –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç, —Ç–æ –∏–∑–º–µ–Ω—è—è –æ–¥–∏–Ω, –º–µ–Ω—è—é—Ç—Å—è –≤—Å–µ.
final list1 = List.filled(3, []);
list1[0].add(1);
print(list1); // [[1], [1], [1]] - –≤—Å–µ —Å–ø–∏—Å–∫–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å!

–¢–∞–∫–∂–µ

void main() {
  final list1 = List.filled(3, Person('Tom'));
  list1[0].name = 'Jeryy';
  print(list1); // [Jeryy, Jeryy, Jeryy] - –≤—Å–µ —Å–ø–∏—Å–∫–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å!
}

class Person {
  String name;

  Person(this.name);

  String toString() => name;
}

—Å–æ–∑–¥–∞—ë—Ç—Å—è –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç Person('Tom'), –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–µ–≥–æ –∫–ª–∞–¥—ë—Ç—Å—è –≤–æ –≤—Å–µ 3 —è—á–µ–π–∫–∏ —Å–ø–∏—Å–∫–∞.
–ü–æ—ç—Ç–æ–º—É –∫–æ–≥–¥–∞ —Ç—ã –º–µ–Ω—è–µ—à—å list1[0].name, –º–µ–Ω—è–µ—Ç—Å—è –∏ list1[1].name, –∏ list1[2].name.

–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, –Ω—É–∂–Ω–æ –≤–º–µ—Å—Ç–æ List.filled –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å List.generate.


üîë –†–∞–∑–Ω–∏—Ü–∞:
List.filled(3, Person('Tom')) ‚Üí —Ç—Ä–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç.
List.generate(3, (_) => Person('Tom')) ‚Üí —Ç—Ä–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–∞, –ø—É—Å—Ç—å –¥–∞–∂–µ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º.



// –° –ø—Ä–∏–º–∏—Ç–∏–≤–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ:
  final list1 = List.filled(3, 0);
  list1[0] = 5;
  print(list1); // [5, 0, 0]
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–î–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω List.generate?',
    a: '''
–°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫, –≤—ã–∑—ã–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—é-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞.

// –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
final list1 = List.generate(3, (_) => []);
list1[0].add(1);
print(list1); // [[1], [], []] - —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–∏–ª—Å—è

// –ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω–¥–µ–∫—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π
final squares = List.generate(5, (index) => index * index);
print(squares); // [0, 1, 4, 9, 16]
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç spread-–æ–ø–µ—Ä–∞—Ç–æ—Ä (...) –∏ null-aware spread (...?) –≤ List?',
    a: 'Spread-–æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –¥—Ä—É–≥–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤–Ω—É—Ç—Ä—å —Ç–µ–∫—É—â–µ–≥–æ. Null-aware (`...?`) –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –Ω–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ —Ä–∞–≤–µ–Ω null.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–µ—Ç–æ–¥ List.unmodifiable()? –í —á—ë–º –æ—Ç–ª–∏—á–∏–µ –æ—Ç const List?',
    a: '`List.unmodifiable()` —Å–æ–∑–¥–∞—ë—Ç —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ –≤—Ä–µ–º—è runtime, –Ω–æ –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö. `const []` ‚Äî –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–π –Ω–∞ —ç—Ç–∞–ø–µ compile.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏–µ —É—Å–ª–æ–≤–∏—é, –∏–∑ —Å–ø–∏—Å–∫–∞?',
    a: '''

1. removeWhere() - –º—É—Ç–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫

final numbers = [1, 2, 3, 4, 5, 6];
numbers.removeWhere((n) => n % 2 == 0); // —É–¥–∞–ª–∏—Ç—å —á–µ—Ç–Ω—ã–µ
print(numbers); // [1, 3, 5]

2. where() + toList() - —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫

final numbers = [1, 2, 3, 4, 5, 6];
final oddNumbers = numbers.where((n) => n % 2 != 0).toList(); // –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–µ—á–µ—Ç–Ω—ã–µ
print(oddNumbers); // [1, 3, 5]

3. retainWhere() - –æ—Å—Ç–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ —É—Å–ª–æ–≤–∏—é

  final numbers = [1, 2, 3, 4, 5, 6];
  numbers.retainWhere((n) => n > 4);
  print(numbers); // [5, 6]

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫, –Ω–µ –∏–∑–º–µ–Ω—è—è –∏—Å—Ö–æ–¥–Ω—ã–π?',
    a: '''

1. List.from() (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π)

final original = [1, 2, 3];
final copy = List.from(original);

2. Spread operator ... (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥)

final original = [1, 2, 3];
final copy = [...original];

// –° –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
final extended = [...original, 4, 5];
final combined = [...list1, ...list2];


''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è List.from(other) –æ—Ç List.of(other)?',
    a: '''

List.from(other)
- –ù–µ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ T –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏. –ú–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å –≤ —Ä–∞–Ω—Ç–∞–π–º–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –¥–æ—Å—Ç—É–ø–∞/–º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏.
  final a = List.from(<num>[1, 2]);
  final b = List<int>.from(<num>[1, 2.5]); // –û–ö –Ω–∞ —ç—Ç–∞–ø–µ —Å–æ–∑–¥–∞–Ω–∏—è, –Ω–æ –¥–∞—Å—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ 2.5
                                              Unhandled exception: type 'double' is not a subtype of type 'int'

List.of(other)
- –î–µ–ª–∞–µ—Ç runtime –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç other —Å–æ–≤–º–µ—Å—Ç–∏–º —Å —Ç–∏–ø–æ–º T, –∏ –≤—ã–±—Ä–æ—Å–∏—Ç CastError —Å—Ä–∞–∑—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞.
  final b = List<int>.of(<num>[1, 2.5]); // CastError —Å—Ä–∞–∑—É
                                            The argument type 'List<num>' can't be assigned to the parameter type 'Iterable<int>'. The argument type 'List<num>' can't be assigned to the parameter type 'Iterable<int>'.

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–µ—Ç–æ–¥ List.setAll() –∏ —á–µ–º –æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç addAll()?',
    a: '''

setAll –∑–∞–º–µ–Ω—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ.
List.setAll(index, iterable) ‚Äî –∑–∞–º–µ–Ω—è–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ index —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏–∑ iterable. –î–ª–∏–Ω–∞ —Å–ø–∏—Å–∫–∞ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è, –∏ —Ç—ã –æ–±—è–∑–∞–Ω –∏–º–µ—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ index, –∏–Ω–∞—á–µ –±—É–¥–µ—Ç RangeError.
final list = [1, 2, 3, 4];
list.setAll(1, [7, 8]); // [1, 7, 8, 4]


addAll —Ä–∞—Å—à–∏—Ä—è–µ—Ç —Å–ø–∏—Å–æ–∫.
addAll(iterable) ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞, —É–≤–µ–ª–∏—á–∏–≤–∞—è –µ–≥–æ –¥–ª–∏–Ω—É. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è GrowableList (–æ–±—ã—á–Ω—ã–π List), –Ω–æ –Ω–µ –¥–ª—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã.
final list2 = [1, 2];
list2.addAll([3, 4]);   // [1, 2, 3, 4]
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞, —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —á–µ—Ä–µ–∑ List.filled(..., ..., growable: false)?',
    a: '–ù–µ—Ç. –¢–æ–ª—å–∫–æ —Å–ø–∏—Å–∫–∏ —Å `growable: true` –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ò–Ω–∞—á–µ –±—É–¥–µ—Ç –≤—ã–±—Ä–æ—à–µ–Ω–æ `UnsupportedError` –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Å–ø–∏—Å–∫–∞?',
    a: '–° –ø–æ–º–æ—â—å—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: `list.where((e) => e.isNotEmpty).toList();`. –≠—Ç–æ –∏–∑–±–∞–≤–ª—è–µ—Ç –æ—Ç –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Map?',
    a: 'Map ‚Äî —ç—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä: `final map = {"name": "Alice", "age": 30};`. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã: `Map()` –∏–ª–∏ `Map.from({...})`.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ —Ç–∏–ø—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –∫–ª—é—á–∏ –≤ Map?',
    a: '–õ—é–±—ã–µ –æ–±—ä–µ–∫—Ç—ã, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ `==` –∏ `hashCode`. –û–±—ã—á–Ω–æ —ç—Ç–æ `String`, `int`, `enum`, –Ω–æ –º–æ–∂–Ω–æ –∏ –∫–ª–∞—Å—Å—ã —Å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º `==` –∏ `hashCode`.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–í —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É Map.of(), Map.from() –∏ Map.unmodifiable()?',
    a: '''
üìå Map.from(other)
- –°–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –∏–∑–º–µ–Ω—è–µ–º—ã–π Map<K, V> –∏ –∫–æ–ø–∏—Ä—É–µ—Ç –≤—Å–µ –ø–∞—Ä—ã –∫–ª—é—á‚Äì–∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ other.
- –¢–∏–ø—ã –∫–ª—é—á–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è (cast –¥–µ–ª–∞–µ—Ç—Å—è –ª–µ–Ω–∏–≤–æ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ).
- –ú–æ–∂–Ω–æ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

üìå Map.of(other)
- –¢–æ –∂–µ, —á—Ç–æ Map.from, –Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Ç–∏–ø–æ–≤ –∫–ª—é—á–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏–π —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ generic-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
—Å—Ä–∞–∑—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏. –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚Äî –≤—ã–±—Ä–æ—Å–∏—Ç CastError –Ω–∞ –º–µ—Å—Ç–µ.

üìå Map.unmodifiable(other)
- –°–æ–∑–¥–∞—ë—Ç –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—É—é –∫–∞—Ä—Ç—É (read-only view). –õ—é–±–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë (add, remove, –ø—Ä–∏—Å–≤–æ–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ) –≤—ã–±—Ä–æ—Å–∏—Ç UnsupportedError. –¢–∏–ø—ã –∫–ª—é—á–µ–π/–∑–Ω–∞—á–µ–Ω–∏–π —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ Map, –µ—Å–ª–∏ –∫–ª—é—á –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å?',
    a: '–ß–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ç–æ—Ä []: final String name = map["name"] ?? "default"`',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —É–¥–∞–ª–∏—Ç—å –∫–ª—é—á –∏–∑ Map?',
    a: '–° –ø–æ–º–æ—â—å—é `map.remove("key")`. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å removeWhere((k, v) => —É—Å–ª–æ–≤–∏–µ) –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ —É—Å–ª–æ–≤–∏—é.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ Map?',
    a: r'–ß–µ—Ä–µ–∑ `map.forEach((key, value) => ...)`, –∏–ª–∏ —á–µ—Ä–µ–∑ `map.entries.forEach(...)`. –ü—Ä–∏–º–µ—Ä: `for (var e in map.entries) { print("${e.key}: ${e.value}"); }`.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å Map?',
    a: '''
final original = {'a': 1, 'b': 2, 'c': 3, 'd': 4};

üìå 1. Map.fromEntries() + where() (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)

// –ü–æ –∑–Ω–∞—á–µ–Ω–∏—é
final filtered = Map.fromEntries(
  original.entries.where((entry) => entry.value > 2)
);
// Result: {'c': 3, 'd': 4}

// –ü–æ –∫–ª—é—á—É
final filtered = Map.fromEntries(
  original.entries.where((entry) => entry.key != 'b')
);
// Result: {'a': 1, 'c': 3, 'd': 4}

// –ü–æ —É—Å–ª–æ–≤–∏—é –∫–ª—é—á + –∑–Ω–∞—á–µ–Ω–∏–µ
final filtered = Map.fromEntries(
  original.entries.where((entry) => entry.key == 'a' || entry.value > 3)
);
// Result: {'a': 1, 'd': 4}

üìå 2. removeWhere() (–∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—É—é Map)

final map = {'a': 1, 'b': 2, 'c': 3};
map.removeWhere((key, value) => value <= 2);
// Result: {'c': 3}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ MapEntry?',
    a: '''
MapEntry ‚Äî —ç—Ç–æ –∫–ª–∞—Å—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø–∞—Ä—É –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ Map, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–≤—è–∑–∫–∏ –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ.

class MapEntry<K, V> {
  final K key;
  final V value;
  const MapEntry(this.key, this.value);
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å spread-–æ–ø–µ—Ä–∞—Ç–æ—Ä —Å Map?',
    a: '–î–∞. –ü—Ä–∏–º–µ—Ä: `final newMap = {...map1, ...map2}`. –ó–Ω–∞—á–µ–Ω–∏—è –∏–∑ –≤—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø–∏—à—É—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ –∫–ª—é—á–µ–π.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å Map –ø–æ –∫–ª—é—á–∞–º –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º?',
    a: '''
–í Dart Map –Ω–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π (–µ—Å–ª–∏ —ç—Ç–æ HashMap), –ø–æ—ç—Ç–æ–º—É —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –¥–µ–ª–∞—é—Ç —á–µ—Ä–µ–∑ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
–≤ —Å–ø–∏—Å–æ–∫ –ø–∞—Ä MapEntry –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ LinkedHashMap (–æ–Ω —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫).

üìå –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–ª—é—á–∞–º:

  final Map<String, int> map = {'b': 2, 'a': 3, 'c': 1};
  final LinkedHashMap<String, int> sortedByKey = LinkedHashMap.fromEntries(
    map.entries.toList()..sort((a, b) => a.key.compareTo(b.key)),
  );
  print(sortedByKey); // {a: 3, b: 2, c: 1}

üìå –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º:

  final Map<String, int> map = {'b': 2, 'a': 3, 'c': 1};
  final LinkedHashMap<String, int> sortedByValue = LinkedHashMap.fromEntries(
    map.entries.toList()..sort((a, b) => a.value.compareTo(b.value)),
  );
  print(sortedByValue); // {c: 1, b: 2, a: 3}
''',
  ),
  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Set?',
    a: '''
Set ‚Äî —ç—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞ (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç List).

–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:
- –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —É–Ω–∏–∫–∞–ª–µ–Ω (–¥—É–±–ª–∏–∫–∞—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è)
- –ù–µ—É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –∫–æ–ª–ª–µ–∫—Ü–∏—è (–≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç List)
- –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫: O(1) –¥–ª—è contains/remove/add

üìå –õ–∏—Ç–µ—Ä–∞–ª
final set1 = {1, 2, 3, 2}; // {1, 2, 3} - –¥—É–±–ª–∏–∫–∞—Ç—ã —É–¥–∞–ª—è—é—Ç—Å—è

üìå –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
final set2 = Set<int>();
set2.add(1);
set2.add(2);
set2.add(1); // –Ω–µ –¥–æ–±–∞–≤–∏—Ç—Å—è

üìå Iterable
final List<int> list = [1, 2, 3, 2, 1];

final Set<int> set3 = Set.from(list); // {1, 2, 3}
final Set<int> set4 = Set.of(list);   // {1, 2, 3}

–û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:

final numbers = {1, 2, 3, 4, 5};

üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ
numbers.add(6);        // –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
numbers.remove(3);     // —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
numbers.contains(4);   // –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ

üìå –†–∞–∑–º–µ—Ä
print(numbers.length); // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

üìå –ò—Ç–µ—Ä–∞—Ü–∏—è
for (final item in numbers) {
  print(item);
}

–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:

final setA = {1, 2, 3, 4};
final setB = {3, 4, 5, 6};

üìå –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ
final union = setA.union(setB); // {1, 2, 3, 4, 5, 6}

üìå –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ
final intersection = setA.intersection(setB); // {3, 4}

üìå –†–∞–∑–Ω–æ—Å—Ç—å
final difference = setA.difference(setB); // {1, 2}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –º–µ—Ç–æ–¥ lookup() —É Set?',
    a: '''
–ú–µ—Ç–æ–¥ lookup() —É Set –Ω–∞—Ö–æ–¥–∏—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ, –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.

–û—Ç–ª–∏—á–∏–µ –æ—Ç contains():
  - contains() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç bool (true/false)
  - lookup() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç –∏–ª–∏ null

// –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
final users = {'John', 'JANE', 'Bob'};
final user = users.lookup('john'.toUpperCase()); // null
final correctUser = users.lookup('JANE');        // 'JANE'

// –° –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º ==
class Person {
  final String name;
  Person(this.name);

  @override
  bool operator ==(Object other) => other is Person && name == other.name;

  @override
  int get hashCode => name.hashCode;
}

final people = {Person('John'), Person('Jane')};
final foundPerson = people.lookup(Person('John')); // Person('John')
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ sealed class?',
    a: '''
–∑–∞–∫—Ä—ã—Ç—ã–π –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ç–∏–ø, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º –∂–µ —Ñ–∞–π–ª–µ, –≥–¥–µ –æ–Ω –æ–±—ä—è–≤–ª–µ–Ω.

sealed class Animal {}

class Dog extends Animal {}
class Cat extends Animal {}

–í—Å–µ –∫–ª–∞—Å—Å—ã, —Ä–∞—Å—à–∏—Ä—è—é—â–∏–µ Animal, –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ç–æ–º –∂–µ —Ñ–∞–π–ª–µ.

–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è switch-case

String sound(Animal a) {
  return switch (a) {
    Dog() => 'woof',
    Cat() => 'meow',
    // üî• –æ—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –µ—Å–ª–∏ –∑–∞–±—ã–ª —Å–ª—É—á–∞–π!
  };
}

sealed ‚Äî —ç—Ç–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–µ—Ä–∞—Ä—Ö–∏–∏, –∞ –Ω–µ –ø–æ–≤–µ–¥–µ–Ω–∏—è.
–û–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å abstract, –∏–º–µ—Ç—å factory, const, static –º–µ—Ç–æ–¥—ã –∏ –ø–æ–ª—è.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–í —á—ë–º –æ—Ç–ª–∏—á–∏–µ sealed class –æ—Ç abstract class?',
    a: 'abstract class –º–æ–∂–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –æ—Ç–∫—É–¥–∞ —É–≥–æ–¥–Ω–æ, –∞ sealed ‚Äî —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —Ç–æ–π –∂–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏. Sealed –∑–∞–ø—Ä–µ—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞. –ú–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –¥–ª—è –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä sealed –∫–ª–∞—Å—Å–∞ –Ω–∞–ø—Ä—è–º—É—é?',
    a: '–ù–µ—Ç. sealed –∫–ª–∞—Å—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é ‚Äî –æ–Ω –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø–æ–¥–∫–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª–∏–∑—É—é—Ç –∏–ª–∏ —Ä–∞—Å—à–∏—Ä—è—é—Ç –µ–≥–æ.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß–µ–º sealed class –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç enum –≤ Dart?',
    a: 'Enum ‚Äî —ç—Ç–æ –Ω–∞–±–æ—Ä —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (–æ–¥–∏–Ω–æ—á–Ω—ã–µ –∏–Ω—Å—Ç–∞–Ω—Å—ã), —Ç–æ–≥–¥–∞ –∫–∞–∫ sealed class ‚Äî —ç—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è –∫–ª–∞—Å—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏–º–µ—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ª–æ–≥–∏–∫—É. Enums ‚Äî —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è, sealed ‚Äî —Ç–∏–ø—ã.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ sealed class –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å pattern matching?',
    a: '–î–∞, sealed –∫–ª–∞—Å—Å—ã —Å–æ—á–µ—Ç–∞—é—Ç—Å—è —Å pattern matching, —Ç–∞–∫ –∫–∞–∫ –ø–æ–∑–≤–æ–ª—è—é—Ç –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ª—É—á–∞–∏.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å sealed class –≤ –¥—Ä—É–≥–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ?',
    a: '–ù–µ—Ç. –ü–æ–¥–∫–ª–∞—Å—Å—ã sealed –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä—è–≤–ª–µ–Ω—ã –≤ —Ç–æ–π –∂–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ. –≠—Ç–æ –∫–ª—é—á–µ–≤–æ–µ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ abstract –∫–ª–∞—Å—Å–∞ –∏–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ sealed –∫–ª–∞—Å—Å –∏–º–µ–µ—Ç –ø–æ–¥–∫–ª–∞—Å—Å –≤ –¥—Ä—É–≥–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ?',
    a: '–ë—É–¥–µ—Ç –æ—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. Dart —Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–∞–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ sealed –∫–ª–∞—Å—Å–∞ –≤–Ω–µ –µ–≥–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å sealed class —Å mixin –∏–ª–∏ implements?',
    a: '–î–∞, –º–æ–∂–Ω–æ. –ü–æ–¥–∫–ª–∞—Å—Å—ã sealed –∫–ª–∞—Å—Å–∞ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å mixin –∏ —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ sealed class –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, bloc –∏–ª–∏ pattern matching –≤ UI)?',
    a: 'Sealed –∫–ª–∞—Å—Å—ã –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ —Å–æ–±—ã—Ç–∏–π: –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤—Å–µ —Å–ª—É—á–∞–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã. –≠—Ç–æ —Å–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –≤–µ—Ç–æ–∫ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è BehaviorSubject –æ—Ç StreamController?',
    a: '''
BehaviorSubject ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–∏–ø StreamController –∏–∑ –ø–∞–∫–µ—Ç–∞ rxdart, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç
–ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –æ—Ç–¥–∞–µ—Ç –µ–≥–æ –Ω–æ–≤–æ–º—É –ø–æ–¥–ø–∏—Å—á–∏–∫—É —Å—Ä–∞–∑—É –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ.

StreamController —Ç–∞–∫–æ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ BehaviorSubject –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è?',
    a: '–ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –µ—â—ë –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å, —Ç–æ –ø–æ–¥–ø–∏—Å—á–∏–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç –Ω–∏—á–µ–≥–æ –¥–æ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–±—ã—Ç–∏—è. –ï—Å–ª–∏ —É–∂–µ –±—ã–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –æ–Ω –ø–æ–ª—É—á–∏—Ç –µ–≥–æ —Å—Ä–∞–∑—É.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ BehaviorSubject?',
    a: '''
–° –ø–æ–º–æ—â—å—é —Å–≤–æ–π—Å—Ç–≤–∞ .value. –û–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.

final subject = BehaviorSubject<int>();
subject.add(10);
final lastValue = subject.value; // 10
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å BehaviorSubject –∏ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã?',
    a: '–ù—É–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –º–µ—Ç–æ–¥ .close(). –≠—Ç–æ –∑–∞–≤–µ—Ä—à–∏—Ç –ø–æ—Ç–æ–∫ –∏ –æ—Å–≤–æ–±–æ–¥–∏—Ç —Ä–µ—Å—É—Ä—Å—ã. –í–∞–∂–Ω–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ú–æ–∂–Ω–æ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å BehaviorSubject –≤ –∫–∞—á–µ—Å—Ç–≤–µ state-holder –≤ BLoC?',
    a: '–î–∞, —ç—Ç–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –ø–æ–¥—Ö–æ–¥. BehaviorSubject —Ö—Ä–∞–Ω–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏ —Å–ª—É—à–∞—Ç—å, —á—Ç–æ —É–¥–æ–±–Ω–æ –¥–ª—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ UI –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π.',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß–µ–º –æ—Ç–ª–∏—á–∞—é—Ç—Å—è Queue –∏ List?',
    a: '''
Queue –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è —Å –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ (O(1)), –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ List –∏–º–µ–µ—Ç O(n) –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –Ω–∞—á–∞–ª–∞.
Queue –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –≤–∞–∂–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ —á–∞—Å—Ç–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏/—É–¥–∞–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –æ–±–æ–∏—Ö –∫–æ–Ω—Ü–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, FIFO/LIFO –ª–æ–≥–∏–∫–∞).
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø—Ä–∏ —Å–¥–≤–∏–≥–µ —á–∏—Å–ª–∞ 3 –Ω–∞ 2 –±–∏—Ç–∞ –≤–ª–µ–≤–æ? (3 << 2)',
    a: '''
3 = 0b0011
–°–¥–≤–∏–≥ –≤–ª–µ–≤–æ –Ω–∞ 2 –±–∏—Ç–∞: 0b1100 = 12
–û—Ç–≤–µ—Ç: 12
''',
  ),
  QA(
    q: '–ö–∞–∫–æ–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å —á–∏—Å–ª–æ–º –ø–æ–∑–≤–æ–ª—è–µ—Ç –µ–≥–æ —É–º–Ω–æ–∂–∏—Ç—å –Ω–∞ 2^n?',
    a: '''
  print(2 << 1); // 4
  print(2 << 2); // 8
  print(2 << 3); // 16
  print(2 << 4); // 32
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Å –ø–æ–º–æ—â—å—é –ø–æ–±–∏—Ç–æ–≤–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ AND (&) –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ —á—ë—Ç–Ω—ã–º?',
    a: '''
–ß–∏—Å–ª–æ 1 –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ: ...00000001 (—Ç–æ–ª—å–∫–æ –º–ª–∞–¥—à–∏–π –±–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)

–ü—Ä–∏–º–µ—Ä—ã:

// –ß–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ (–º–ª–∞–¥—à–∏–π –±–∏—Ç = 0):
4 & 1:  100 & 001 = 000 ‚Üí 0
6 & 1:  110 & 001 = 000 ‚Üí 0
8 & 1: 1000 & 001 = 000 ‚Üí 0

// –ù–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ (–º–ª–∞–¥—à–∏–π –±–∏—Ç = 1):
3 & 1:  011 & 001 = 001 ‚Üí 1
5 & 1:  101 & 001 = 001 ‚Üí 1
7 & 1:  111 & 001 = 001 ‚Üí 1

–ü–æ—á–µ–º—É —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
–í –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ:

–ß–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –≤—Å–µ–≥–¥–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω–∞ 0
–ù–µ—á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –≤—Å–µ–≥–¥–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω–∞ 1

–ü–æ–±–∏—Ç–æ–≤–æ–µ AND —Å 1 "–≤—ã–¥–µ–ª—è–µ—Ç" —Ç–æ–ª—å–∫–æ –º–ª–∞–¥—à–∏–π –±–∏—Ç, –æ–±–Ω—É–ª—è—è –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ.

bool isEven(int x) => (x & 1) == 0;
bool isOdd(int x) => (x & 1) == 1;

// –ë—ã—Å—Ç—Ä–µ–µ —á–µ–º:
bool isEven(int x) => x % 2 == 0;  // –º–æ–¥—É–ª–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: –ø–æ–±–∏—Ç–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –±—ã—Å—Ç—Ä–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞.
''',
  ),
  QA(
    q: '–ß—Ç–æ –≤–µ—Ä–Ω—ë—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: (-1 >> 1) –≤ Dart?',
    a: '''
–í Dart –æ–ø–µ—Ä–∞—Ç–æ—Ä >> —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–Ω–∞–∫ (–∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–π —Å–¥–≤–∏–≥).
-1 = 0xFFFFFFFF
-1 >> 1 = -1
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É class –∏ mixin',
    a: '''

| –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å                        | `class`                                  | `mixin`                                   |
| ---------------------------------- | ---------------------------------------- | ----------------------------------------- |
| üîπ –ù–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ                    | –ú–æ–∂–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å –∏ –±—ã—Ç—å —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω     | –ù–µ –º–æ–∂–µ—Ç –Ω–∞—Å–ª–µ–¥–æ–≤–∞—Ç—å (—Ç–æ–ª—å–∫–æ `Object`)    |
| üî∏ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ                   | –ß–µ—Ä–µ–∑ `extends` –∏ `implements`           | –ß–µ—Ä–µ–∑ `with`                              |
| üîÑ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ     | –ù–µ—Ç                                      | –î–∞ (`with A, B`)                          |
| üß± –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã                    | –ï—Å—Ç—å, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å               | ‚ùå –ù–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤                      |
| üîê –°–æ—Å—Ç–æ—è–Ω–∏–µ (–ø–æ–ª—è)                | –ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏ —Ö—Ä–∞–Ω–∏—Ç—å                | –ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å, –Ω–æ –Ω–µ—Ç `super()`         |
| üéØ –¢–∏–ø–∏–∑–∞—Ü–∏—è                       | –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä—ã               | –ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä `mixin` –Ω–∞–ø—Ä—è–º—É—é |
| üß© –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ     | –ë–∞–∑–æ–≤—ã–µ —Ç–∏–ø—ã, –º–æ–¥–µ–ª–∏, UI-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã      | –ü–æ–≤–µ–¥–µ–Ω–∏–µ: –ª–æ–≥–≥–µ—Ä—ã, –∫–µ—à, —É—Ç–∏–ª–∏—Ç—ã          |
| üì¶ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è            | `class MyButton extends StatelessWidget` | `mixin Logger { void log() {} }`          |

''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É reduce –∏ fold –≤ –º–∞—Å—Å–∏–≤–µ?',
    a: '''
reduce
- –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏
- –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: —Ç–æ—Ç –∂–µ, —á—Ç–æ —É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
- –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: –∫–æ–ª–ª–µ–∫—Ü–∏—è –ù–ï –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—É—Å—Ç–æ–π

final numbers = [1, 2, 3, 4];
final sum = numbers.reduce((a, b) => a + b); // 10
// –¢–∏–ø: int (–∫–∞–∫ —É —ç–ª–µ–º–µ–Ω—Ç–æ–≤)

// –û–®–ò–ë–ö–ê –Ω–∞ –ø—É—Å—Ç–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏:
final empty = <int>[];
// empty.reduce((a, b) => a + b); // StateError!


fold
- –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: –∑–∞–¥–∞–µ—à—å —Å–∞–º
- –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: –ª—é–±–æ–π (–º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ç–∏–ø–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
- –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—É—Å—Ç—ã–º–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏

final numbers = [1, 2, 3, 4];
final sum = numbers.fold<int>(0, (acc, item) => acc + item); // 10

// –†–∞–∑–Ω—ã–µ —Ç–∏–ø—ã:
final strings = ['a', 'b', 'c'];
final length = strings.fold<int>(0, (acc, str) => acc + str.length); // 3

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Å –ø—É—Å—Ç–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π:
final empty = <int>[];
final result = empty.fold<int>(0, (acc, item) => acc + item); // 0
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '''
–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥:

  final List<int> numbers = [1, 2, 3, 4, 5];

  print(numbers.any((element) => element > 3));
  print(numbers.any((element) => element > 6));
''',
    a: '''
–•–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é

  print(numbers.any((element) => element > 3)); // true
  print(numbers.any((element) => element > 6)); // false
  ''',
  ),
  QA(
    tags: [Tag.dart],
    q: '''
–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç?

  final List<int> numbers = [1, 2, 3, 4, 5];
  print(numbers.asMap());
''',
    a: '// {0: 1, 1: 2, 2: 3, 3: 4, 4: 5}',
  ),
  QA(
    tags: [Tag.dart],
    q: '''
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç single –≤ –º–∞—Å—Å–∏–≤–µ?

  final List<int> numbers = [1, 2, 3, 4, 5];
  print(numbers.single); // 1

  ''',
    a: '''
–ï—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –û–î–ò–ù —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è, –∏–Ω–∞—á–µ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç reversed –≤ –º–∞—Å—Å–∏–≤–µ?',
    a: '''
  final List<int> numbers = [1, 2, 3, 4, 5];
  print(numbers.reversed); // [5, 4, 3, 2, 1]''',
  ),
  QA(
    tags: [Tag.dart],
    q: '''
–ß—Ç–æ –¥–µ–ª–∞–µ—Ç every?

  final List<int> numbers = [1, 2, 3, 4, 5];
  print(numbers.every((key) => key > 3)); –∫–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç?
''',
    a: '''

  final List<int> numbers = [1, 2, 3, 4, 5];
  print(numbers.every((key) => key > 3)); // false
  print(numbers.every((key) => key > 0)); // true

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç expand –≤ –º–∞—Å—Å–∏–≤–µ?',
    a: '''

// –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤
final lists = [[1, 2], [3, 4], [5]];
final flattened = lists.expand((list) => list).toList();
print(flattened); // [1, 2, 3, 4, 5]

// –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
final numbers = [1, 2, 3];
final doubled = numbers.expand((n) => [n, n]).toList();
print(doubled); // [1, 1, 2, 2, 3, 3]

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π
final words = ['hello', 'world'];
final chars = words.expand((word) => word.split('')).toList();
print(chars); // [h, e, l, l, o, w, o, r, l, d]

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç filled –∏ filledRange',
    a: '''
  final words = List.filled(5, 'old');
  print(words); // [old, old, old, old, old]


  words.fillRange(1, 3, 'new');
  print(words); // [old, new, new, old, old]
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß–¢–æ –¥–µ–ª–∞–µ—Ç followedBy?',
    a: '''

–æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å –¥—Ä—É–≥–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π

final a = [1, 2];
final b = [3, 4];
final c = [5, 6];
final result = a.followedBy(b).followedBy(c);
print(result.toList()); // [1, 2, 3, 4, 5, 6]

''',
  ),

  QA(
    tags: [Tag.dart],
    q: '''
–î–æ–±–∞–≤—å—Ç–µ —Ä–µ—Ñ–ª–µ–∫—Ü–∏—é –≤ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥

import 'dart:mirrors';

void main() {
  print(basicOp('+', 2, 4)); // 6
  print(basicOp('-', 2, 4)); // -2
}

int basicOp(String operator, int value1, int value2) {
  ...
}

''',
    a: '''
int basicOp(String operator, int value1, int value2) {
  return reflect(value1).invoke(Symbol(operator), [value2]).reflectee.toInt();
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '''
–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å

  1) print([] == []);

  2) print(const [] == const []);

  3)
  final list1 = [];
  final list2 = [];
  print(const DeepCollectionEquality().equals(list1, list2));

''',
    a: '''
  print([] == []); // false
  –í Dart [] == [] –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞–∑–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –≤ –ø–∞–º—è—Ç–∏, –∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ø–∏—Å–∫–æ–≤.


  print(const [] == const []); // true
  —Ç–∞–∫ –∫–∞–∫ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–Ω—Ç–µ—Ä–Ω–∏—Ä—É—é—Ç—Å—è)


import 'package:collection/collection.dart';
void main() {
  final list1 = [];
  final list2 = [];
  print(const DeepCollectionEquality().equals(list1, list2)); // true
}

''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ Record –∏ —á–µ–º –æ–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –∫–ª–∞—Å—Å–æ–≤?',
    a: '''
Record ‚Äî —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.

–û—Å–Ω–æ–≤–Ω—ã–µ –æ—Ç–ª–∏—á–∏—è:

- Immutable by default ‚Äî –≤—Å–µ –ø–æ–ª—è final
- –°—Ç—Ä—É–∫—Ç—É—Ä–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è ‚Äî —Ç–∏–ø –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π, –Ω–µ –∏–º–µ–Ω–µ–º
- –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å ‚Äî (String, int) –≤–º–µ—Å—Ç–æ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ == –∏ hashCode –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
- –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è ‚Äî var (name, age) = person;

// Record
(String, int) person = ('Alice', 25);

// –≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã–π –∫–ª–∞—Å—Å
class Person {
  final String name;
  final int age;
  const Person(this.name, this.age);

  // + equals, hashCode, toString
}
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è Recors –∏ –ø–∞—Ç—Ç–µ—Ä–Ω-–º–∞—Ç—á–∏–Ω–≥?',
    a: r'''

(String, int, bool) data = ('Alice', 25, true);

// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è
var (name, age, isActive) = data;

// –ü–∞—Ç—Ç–µ—Ä–Ω-–º–∞—Ç—á–∏–Ω–≥ –≤ switch
switch (data) {
  case (String name, int age, true) when age >= 18:
    print('$name —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π –∏ –∞–∫—Ç–∏–≤–µ–Ω');
  case (_, int age, false) when age < 18:
    print('–ù–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π –∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω');
  case (name, age, _):
    print('$name, $age –ª–µ—Ç');
}

// –í —Ñ—É–Ω–∫—Ü–∏—è—Ö
String formatPerson((String, int) person) {
  var (name, age) = person;
  return '$name: $age';
}

''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–º–∏ –∏ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ Record?',
    a: r'''

// –ü–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–ª—è (–¥–æ—Å—Ç—É–ø –ø–æ $1, $2, ...)
(String, int) positional = ('Alice', 25);
print(positional.$1); // Alice
print(positional.$2); // 25

// –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—è
({String name, int age}) named = (name: 'Alice', age: 25);
print(named.name); // Alice
print(named.age); // 25

// –°–º–µ—à–∞–Ω–Ω—ã–µ
(String, {int age, bool active}) mixed = ('Alice', age: 25, active: true);
print(mixed.$1); // Alice (–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–æ–µ)
print(mixed.age); // 25 (–∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–µ)

// –¢–∏–ø—ã –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã
(String, int) != ({String name, int age}) // –†–∞–∑–Ω—ã–µ —Ç–∏–ø—ã!

''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ Records –≤–µ–¥—É—Ç —Å–µ–±—è –ø—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ –∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–µ–π Map?',
    a: '''

// –°—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ
var person1 = ('Alice', 25);
var person2 = ('Alice', 25);
var person3 = ('Bob', 25);

print(person1 == person2); // true (–æ–¥–∏–Ω–∞–∫–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –∑–Ω–∞—á–µ–Ω–∏—è)
print(person1 == person3); // false

// –ö–∞–∫ –∫–ª—é—á–∏ Ma
Map<(String, int), String> roles = {
  ('Alice', 25): 'Developer',
  ('Bob', 30): 'Designer',
};

print(roles[('Alice', 25)]); // Developer

// hashCode –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –¥–ª—è —Ä–∞–≤–Ω—ã—Ö records
print(person1.hashCode == person2.hashCode); // true

// –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ Set
Set<(String, int)> people = {('Alice', 25), ('Alice', 25)};
print(people.length); // 1 (–¥—É–±–ª–∏–∫–∞—Ç—ã —É–¥–∞–ª–µ–Ω—ã)

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Record –≤–º–µ—Å—Ç–æ –∫–ª–∞—Å—Å–æ–≤ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö?',
    a: '''

–ò—Å–ø–æ–ª—å–∑—É–π Records –∫–æ–≥–¥–∞:
- –ù—É–∂–Ω–∞ –ø—Ä–æ—Å—Ç–∞—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –ø–æ–≤–µ–¥–µ–Ω–∏—è
- –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–≤–æ–∑–≤—Ä–∞—Ç –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π, –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ)
- –ö–ª—é—á–∏ –¥–ª—è Map/Set –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
- –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –≤–∞–∂–Ω–µ–µ –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–∏

// ‚úÖ –•–æ—Ä–æ—à–æ –¥–ª—è Records
(double lat, double lng) getCoordinates() => (55.7558, 37.6176);
Map<(String, int), User> userCache = {};

// ‚ùå –ü–ª–æ—Ö–æ –¥–ª—è Records - –ª—É—á—à–µ –∫–ª–∞—Å—Å
class User {
  final String name;
  final List<String> permissions;

  bool hasPermission(String perm) => permissions.contains(perm);
  void addPermission(String perm) { /* logic */ }
}

''',
  ),

  QA(
    tags: [Tag.dart],
    q: r'''
–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥?

void main() {
  A()().then((result) {
    _someGetter1;
    print({result.$1.first, result.$2});
  });

  _someGetter2;
}

class A {
  A() {
    print('init');
  }

  Future<(List, bool)> call() async{
    final list1 = <Object>[const {} == const {}];
    final list2 = list1..add(123);
    list1.removeLast();
    return Future.value((list2, [] == []));
  }
}

get _someGetter1 => () => print('a');

get _someGetter2 => (() => print(2))();

''',
    a: '''

Output:

init
2
{true, false}

===

_someGetter1 –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –Ω–æ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç –µ—ë.

get _someGetter1 => () => print('a');  // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Function
get _someGetter2 => (() => print(2))(); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ Function


–†–∞–∑–±–æ—Ä:
- _someGetter1 –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Function, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –≥–µ—Ç—Ç–µ—Ä—É —Å–æ–∑–¥–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
- _someGetter2 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç IIFE (Immediately Invoked Function Expression) ‚Äî —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç—Å—è –∏ —Å—Ä–∞–∑—É –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ ()()

''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–î–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω compareTo ?',
    a: r'''
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏.

–ü–æ —É–±—ã–≤–∞–Ω–∏—é:

final a = [1, 7, 3, 5];
a.sort((a, b) => b.compareTo(a)); // [7, 5, 3, 1]

–ü–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é:

final a = [1, 7, 3, 5];
a.sort((a, b) => a.compareTo(b));
print(a); //[1, 3, 5, 7]
''',
  ),

  QA(
    tags: [Tag.isolate, Tag.dart],
    q: '–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏–∑–æ–ª—è—Ç–∞',
    a: r'''

import 'dart:isolate';

void main() async {
 // –°–æ–∑–¥–∞–µ–º ReceivePort –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∏–∑–æ–ª—è—Ç–∞
 final receivePort = ReceivePort();

 // –°–æ–∑–¥–∞–µ–º –∏–∑–æ–ª—è—Ç –∏ –ø–µ—Ä–µ–¥–∞–µ–º SendPort
 final isolate = await Isolate.spawn(
   isolateFunction,
   receivePort.sendPort,
 );

 // –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∏–∑–æ–ª—è—Ç–∞
 receivePort.listen((message) {
   print('–ì–ª–∞–≤–Ω—ã–π –∏–∑–æ–ª—è—Ç –ø–æ–ª—É—á–∏–ª: $message');

   // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–ª—è—Ç –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
   isolate.kill();
   receivePort.close();
 });

 print('–ì–ª–∞–≤–Ω—ã–π –∏–∑–æ–ª—è—Ç: –∏–∑–æ–ª—è—Ç –∑–∞–ø—É—â–µ–Ω');
}

// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –Ω–æ–≤–æ–º –∏–∑–æ–ª—è—Ç–µ
// –ò–º–∏—Ç–∏—Ä—É–µ–º —Ç—è–∂–µ–ª—É—é —Ä–∞–±–æ—Ç—É
void isolateFunction(SendPort sendPort) {
 print('–î–æ—á–µ—Ä–Ω–∏–π –∏–∑–æ–ª—è—Ç: –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É');
 int result = 0;
 for (int i = 0; i < 100000000; i++) {
   result += i;
 }

 // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ –≥–ª–∞–≤–Ω—ã–π –∏–∑–æ–ª—è—Ç
 sendPort.send('–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è: $result');

 print('–î–æ—á–µ—Ä–Ω–∏–π –∏–∑–æ–ª—è—Ç: —Ä–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}
''',
  ),

  QA(
    tags: [Tag.dart, Tag.memory],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ –≤ Dart?',
    a: '''

–°–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ (Garbage Collector, GC) –≤ Dart —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º:

–°—É—â–µ—Å—Ç–≤—É—é—Ç –¥–≤–∞ –≤–∏–¥–∞ –ø–æ–∫–æ–ª–µ–Ω–∏–π:

üéØ Young space (–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–æ–ª–æ–¥—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤)

1) –û—á–∏—â–∞–µ—Ç—Å—è —á–∞—Å—Ç–æ –∏ –±—ã—Å—Ç—Ä–æ
2) –û–±—ä–µ–∫—Ç—ã –∂–∏–≤—É—Ç —Ç–∞–º –Ω–µ–¥–æ–ª–≥–æ
3) –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤

- –°–æ–∑–¥–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞
- –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
- –ù–µ—Ç –¥–æ–ª–≥–æ–∂–∏–≤—É—â–∏—Ö —Å—Å—ã–ª–æ–∫
void processUserData(User user) {
  // –≠—Ç–∏ –æ–±—ä–µ–∫—Ç—ã –ø–æ–ø–∞–¥–∞—é—Ç –≤ Young space:

  // –õ–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  final currentTime = DateTime.now();   // –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
  final formattedName = user.name.toUpperCase(); // –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç

  // –ê–Ω–æ–Ω–∏–º–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
  final tempData = [user.id, user.email]; // –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
}

üéØ Old space (–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å—Ç–∞—Ä—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤)

1) –û–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –¥–æ–ª–≥–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ –≤—Å—ë –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è).
2) –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∏–∑ Young space: –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç "–ø–µ—Ä–µ–∂–∏–ª" –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–±–æ—Ä–æ–∫ –º—É—Å–æ—Ä–∞, –æ–Ω –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –≤ Old space.
–≠—Ç–æ —Å–∏–Ω–≥–ª—Ç–æ–Ω—ã, –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, API-–∫–ª–∏–µ–Ω—Ç—ã).


üéØ –¶–∏–∫–ª —Å–±–æ—Ä–∫–∏ (GC cycle) ‚Äî —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ (Garbage Collector, GC)
–¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–∞–º—è—Ç–∏, –∑–∞–Ω—è—Ç–æ–π –æ–±—ä–µ–∫—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ.

–ï—Å–ª–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç –Ω–µ—Ç —Å—Å—ã–ª–∫–∏, —Ç–æ —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç —Å—á–∏—Ç–∞–µ—Ç—Å—è –º—É—Å–æ—Ä–æ–º.
–¶–∏–∫–ª —Å–±–æ—Ä–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç –∏–º –Ω–∞–ø—Ä—è–º—É—é.

üéØ –ï—Å–ª–∏ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ —Å—Å—ã–ª–∞—é—Ç—Å—è –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞, –Ω–æ –±–æ–ª—å—à–µ –Ω–∏–∫—Ç–æ –Ω–∞ –Ω–∏—Ö –Ω–µ —Å—Å—ã–ª–∞–µ—Ç—Å—è,
—Å–±–æ—Ä—â–∏–∫ –º—É—Å–æ—Ä–∞ (Garbage Collector, GC) –≤ Dart –≤—Å—ë —Ä–∞–≤–Ω–æ —Å–º–æ–∂–µ—Ç –∏—Ö —É–¥–∞–ª–∏—Ç—å.

class Node {
  Node? next;
}

void main() {
  var a = Node();
  var b = Node();

  a.next = b; // a —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ b
  b.next = a; // b —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ a

  // –¢–µ–ø–µ—Ä—å a –∏ b —Å—Å—ã–ª–∞—é—Ç—Å—è –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞
} // –ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ –º–µ—Ç–æ–¥–∞, a –∏ b —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–¥–æ—Å—Ç–∏–∂–∏–º—ã–º–∏

üéØ –£—Ç–µ—á–∫–∞ –ø–∞–º—è—Ç–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –æ–±—ä–µ–∫—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã.

1) –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –∂–∏–≤—É—Ç –≤—Å—ë –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
class AppState {
  static final List<User> users = [];
}

2) –û—Ç–º–µ–Ω–∞ –ø–æ–¥–ø–∏—Å–æ–∫. –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç–µ—Å—å –Ω–∞ —Å–æ–±—ã—Ç–∏—è, –Ω–æ –Ω–µ –æ—Ç–ø–∏—Å—ã–≤–∞–µ—Ç–µ—Å—å, —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ—Å—Ç–∞—é—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏.

3) AnimationController –∏ –¥—Ä—É–≥–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –±–µ–∑ dispose:
class _MyWidgetState extends State<MyWidget> with TickerProviderStateMixin {
  late AnimationController _controller;

  @override
  void dispose() {
    _controller.dispose(); // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!
    super.dispose();
  }
}

5) Timer –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏:
Timer.periodic(Duration(seconds: 1), (timer) {
  // timer.cancel() –Ω–µ –≤—ã–∑–≤–∞–Ω
});
''',
  ),
  QA(
    tags: [Tag.dart, Tag.memory],
    q: '–ü–æ—á–µ–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ, –µ—Å–ª–∏ –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞ –∏–∑–≤–µ—Å—Ç–Ω–∞?',
    a: '''
üéØ –ü–æ—á–µ–º—É —ç—Ç–æ –ø–ª–æ—Ö–æ:

1) –ß–∞—Å—Ç—ã–µ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏:
- –í Dart (–∏ –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–∞—Ö) –º–∞—Å—Å–∏–≤—ã –∏–º–µ—é—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤ –ø–∞–º—è—Ç–∏.
- –ö–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ add), –∏ –æ–Ω –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Ç–µ–∫—É—â—É—é –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å, —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞, –∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ–ø–∏—Ä—É—é—Ç—Å—è –≤ –Ω–µ–≥–æ.
- –≠—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.

2) –ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:
- –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ —á–∞—Å—Ç–æ —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è, Dart –º–æ–∂–µ—Ç –≤—ã–¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–µ –ø–∞–º—è—Ç–∏, —á–µ–º –Ω—É–∂–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–≤–µ–ª–∏—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –≤ 1.5‚Äì2 —Ä–∞–∑–∞), —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —á–∞—Å—Ç—ã—Ö –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–π.
- –≠—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–º—É –ø–µ—Ä–µ—Ä–∞—Å—Ö–æ–¥—É –ø–∞–º—è—Ç–∏.

3) –ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:
- –û–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–æ–≥—É—Ç –∫–∞–∑–∞—Ç—å—Å—è –±—ã—Å—Ç—Ä—ã–º–∏, –Ω–æ –≤–Ω–µ–∑–∞–ø–Ω–æ–µ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –∑–∞–º–µ—Ç–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏.


üéØ –ö–∞–∫ –ª—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å:
- —Å—Ä–∞–∑—É –≤—ã–¥–µ–ª–∏—Ç—å –º–∞—Å—Å–∏–≤ –Ω—É–∂–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞

void main() {
  final length = 1000; // –ó–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –¥–ª–∏–Ω–∞
  final List<int> data = List.filled(length, 0); // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º

  for (int i = 0; i < length; i++) {
    data[i] = i * 2; // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã–º–∏
  }

  print(data);
}
''',
  ),
  QA(
    tags: [Tag.dart, Tag.memory],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Map?',
    a: '''
–≤ Dart —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è Map –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (Map<K, V>) –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü–µ.

–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å Map –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –∑–∞ O(1), –Ω–æ –º–æ–∂–µ—Ç —É—Ö—É–¥—à–∏—Ç—å—Å—è –¥–æ O(n) –∏–∑-–∑–∞ –∫–æ–∞–ª–∏–∑–∏–π.

üéØ –ü–æ–∏—Å–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ö–µ—à-—Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∫–ª—é—á—É.

–ü—Ä–∏–º–µ—Ä
1) –£ –Ω–∞—Å –µ—Å—Ç—å {'Apple': 4}. –ú—ã —Ö–æ—Ç–∏–º –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç—É –ø–∞—Ä—É –≤ Map.
2) –ö–ª—é—á 'Apple' —Ö–µ—à–∏—Ä—É–µ—Ç—Å—è: –•–µ—à-—Ñ—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç —á–∏—Å–ª–æ –¥–ª—è –∫–ª—é—á–∞ 'Apple'. –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –ø—É—Å—Ç—å —Ö–µ—à —Ä–∞–≤–µ–Ω 7.
3) –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å 7 –≤ —Ç–∞–±–ª–∏—Ü–µ.
4) –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä—É {'Apple': 4} –≤ bucket —Å –∏–Ω–¥–µ–∫—Å–æ–º 7.

–ò–Ω–¥–µ–∫—Å | bucket
0      | null
1      | null
2      | null
3      | null
4      | null
5      | null
6      | null
7      | {'Apple': 4}
8      | null
9      | null

üéØ –ö–æ–ª–ª–∏–∑–∏—è –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –∫–æ–≥–¥–∞ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è –∫–ª—é—á–∞ –ø–æ–ª—É—á–∏–ª–∏ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —Ö—ç—à.

–ü—É—Å—Ç—å —É –Ω–∞—Å –µ—Å—Ç—å {'Apple': 4} –∏ {'Carrot': 2}, –≥–¥–µ —Ö–µ—à –¥–ª—è 'Apple' –∏ 'Carrot' –æ–¥–∏–Ω–∞–∫–æ–≤—ã.

–í Dart –∫–æ–ª–ª–∏–∑–∏–∏ —Ä–∞–∑—Ä–µ—à–∞—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —Å–ø–∏—Å–∫–æ–≤ –≤–Ω—É—Ç—Ä–∏ bucket.

–ò–Ω–¥–µ–∫—Å | bucket
6      | null
7      | [{'Apple': 4}, {'Carrot': 2}]
8      | null

–ü—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–ª—é—á–∞ 'Apple' –∏–ª–∏ 'Carrot' –º—ã –Ω–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å 7 –≤ —Ö–µ—à-—Ç–∞–±–ª–∏—Ü–µ.
- –ó–∞—Ç–µ–º –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π –∫–ª—é—á.
- –≠—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è, –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –±–∞–∫–µ—Ç–µ O(n).
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Set?',
    a: '''
–£ Set –≤ Dart –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–∞ –∂–µ –∏–¥–µ—è, —á—Ç–æ –∏ —É Map, —Ç–æ–ª—å–∫–æ –±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π (—Ç–æ –µ—Å—Ç—å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ —ç—Ç–æ Map<K, Null>).

–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç Set
1) –ö–æ–≥–¥–∞ –≤—Å—Ç–∞–≤–ª—è–µ—à—å —ç–ª–µ–º–µ–Ω—Ç –≤ Set, —É –Ω–µ–≥–æ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è hashCode.
2) –ü–æ hashCode –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –∫–æ—Ä–∑–∏–Ω–∞ (bucket).
3) –í —ç—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ Set —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ ==.
4) –ï—Å–ª–∏ —Ä–∞–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –µ—Å—Ç—å ‚Üí –Ω–æ–≤—ã–π –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è.
5) –ï—Å–ª–∏ —Ä–∞–≤–Ω–æ–≥–æ –Ω–µ—Ç ‚Üí —ç–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è.
''',
  ),
  QA(
    tags: [Tag.dart, Tag.complexity],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ SplayTreeMap?',
    a: r'''
SplayTreeMap –ø–æ–ª–µ–∑–µ–Ω —Ç–∞–º, –≥–¥–µ –≤–∞–∂–µ–Ω –ø–æ—Ä—è–¥–æ–∫ –∫–ª—é—á–µ–π, "–æ–±–æ–π—Ç–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é/—É–±—ã–≤–∞–Ω–∏—é".

üîé –û—Ç–ª–∏—á–∏—è –æ—Ç HashMap –∏ LinkedHashMap

HashMap / LinkedHashMap:
- –ò—Å–ø–æ–ª—å–∑—É—é—Ç hashCode –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.
- –°—Ä–µ–¥–Ω—è—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å ‚Äî O(1) –Ω–∞ –≤—Å—Ç–∞–≤–∫—É/–ø–æ–∏—Å–∫/—É–¥–∞–ª–µ–Ω–∏–µ. –í —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ O(n).
- –ù–æ –∫–ª—é—á–∏ –Ω–µ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω—ã (–≤ LinkedHashMap —Ç–æ–ª—å–∫–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ—Ä—è–¥–æ–∫ –≤—Å—Ç–∞–≤–∫–∏).

SplayTreeMap:
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç hashCode, –∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫–ª—é—á–µ–π.
- –î–µ—Ä–∂–∏—Ç –∫–ª—é—á–∏ –≤—Å–µ–≥–¥–∞ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.
- –°–ª–æ–∂–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π ‚Äî O(log n) –∞–º–æ—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ.
- –ü–æ–¥—Ö–æ–¥–∏—Ç, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —á–∞—Å—Ç–æ –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ –∏–ª–∏ –∏—Å–∫–∞—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –∫–ª—é—á–∏ (firstKey, lastKey, –¥–∏–∞–ø–∞–∑–æ–Ω—ã).

void main() {
  final map = SplayTreeMap<int, String>();

  map[3] = 'c';
  map[1] = 'a';
  map[2] = 'b';
  map[5] = 'e';
  map[4] = 'd';

  print(map.keys); // (1, 2, 3, 4, 5) ‚Äî –≤—Å–µ–≥–¥–∞ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ

  print(map[3]); // –¥–æ—Å—Ç—É–ø –∫ "3"
  print(map[1]); // –¥–æ—Å—Ç—É–ø –∫ "1"

  // –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è ‚Äî —Ç–æ–∂–µ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
  for (var entry in map.entries) {
    print('${entry.key} -> ${entry.value}');
  }
}


üéØ SplayTreeMap - —ç—Ç–æ —Å–∞–º–æ–±–∞–ª–∞–Ω—Å–∏—Ä—É—é—â–µ–µ—Å—è –±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ —Å "–≤—Å–ø–ª—ã—Ç–∏–µ–º".

–ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:
- –ö–ª—é—á–∏ –≤—Å–µ–≥–¥–∞ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã
- –ü—Ä–∏ –ª—é–±–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ —ç–ª–µ–º–µ–Ω—Ç—É, –æ–Ω "–≤—Å–ø–ª—ã–≤–∞–µ—Ç" –≤ –∫–æ—Ä–µ–Ω—å
- –ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ –¥–æ—Å—Ç—É–ø–Ω—ã

–ü—Ä–∏—á–∏–Ω–∞ "–≤—Å–ø–ª—ã—Ç–∏—è":
- –ê–º–æ—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å O(log n)
- –õ–æ–∫–∞–ª—å–Ω–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞ - —á–∞—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –±–ª–∏–∂–µ –∫ –∫–æ—Ä–Ω—é


–û–ø–µ—Ä–∞—Ü–∏–∏:
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  –û–ø–µ—Ä–∞—Ü–∏—è   ‚îÇ –°–ª–æ–∂–Ω–æ—Å—Ç—å   ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ –î–æ—Å—Ç—É–ø      ‚îÇ O(log n)*   ‚îÇ
‚îÇ –í—Å—Ç–∞–≤–∫–∞     ‚îÇ O(log n)*   ‚îÇ
‚îÇ –£–¥–∞–ª–µ–Ω–∏–µ    ‚îÇ O(log n)*   ‚îÇ
‚îÇ –ú–∏–Ω–∏–º—É–º     ‚îÇ O(log n)    ‚îÇ
‚îÇ –ú–∞–∫—Å–∏–º—É–º    ‚îÇ O(log n)    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
*–∞–º–æ—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–æ–¥ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–æ—Å—Ç—É–ø–∞
‚úì –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
‚úì –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥—Ä—É–≥–∏–º–∏ —Å–∞–º–æ–±–∞–ª–∞–Ω—Å–∏—Ä—É—é—â–∏–º–∏—Å—è –¥–µ—Ä–µ–≤—å—è–º–∏

–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:
‚úó –í —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å O(n)
‚úó –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–∫–ª–∞–¥–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –ø–µ—Ä–µ—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–∞


üéØ –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –≤ SplayTreeMap –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –∑–∞ —Å—á—ë—Ç —Å–≤–æ–π—Å—Ç–≤–∞ –ë–∏–Ω–∞—Ä–Ω–æ–≥–æ –î–µ—Ä–µ–≤–∞ –ü–æ–∏—Å–∫–∞ (BST):

–°–í–û–ô–°–¢–í–û BST:
–î–ª—è –∫–∞–∂–¥–æ–≥–æ —É–∑–ª–∞:
- –í—Å–µ –∫–ª—é—á–∏ –≤ –ª–µ–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ < –∫–ª—é—á —Ç–µ–∫—É—â–µ–≥–æ —É–∑–ª–∞
- –í—Å–µ –∫–ª—é—á–∏ –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ > –∫–ª—é—á —Ç–µ–∫—É—â–µ–≥–æ —É–∑–ª–∞

–ü–†–ò–ú–ï–†:
–í—Å—Ç–∞–≤–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ: 4, 2, 6, 1, 3, 5, 7

–®–∞–≥ 1: –í—Å—Ç–∞–≤–ª—è–µ–º 4 (–∫–æ—Ä–µ–Ω—å)
       4

–®–∞–≥ 2: –í—Å—Ç–∞–≤–ª—è–µ–º 2 (2 < 4 ‚Üí –ª–µ–≤–æ)
       4
      /
     2

–®–∞–≥ 3: –í—Å—Ç–∞–≤–ª—è–µ–º 6 (6 > 4 ‚Üí –ø—Ä–∞–≤–æ)
       4
      / \
     2   6

–®–∞–≥ 4: –í—Å—Ç–∞–≤–ª—è–µ–º 1 (1 < 4 ‚Üí –ª–µ–≤–æ, 1 < 2 ‚Üí –ª–µ–≤–æ)
       4
      / \
     2   6
    /
   1

–®–∞–≥ 5: –í—Å—Ç–∞–≤–ª—è–µ–º 3 (3 < 4 ‚Üí –ª–µ–≤–æ, 3 > 2 ‚Üí –ø—Ä–∞–≤–æ)
       4
      / \
     2   6
    / \
   1   3

–ò–ù–í–ê–†–ò–ê–ù–¢:
–ü—Ä–∏ –æ–±—Ö–æ–¥–µ –¥–µ—Ä–µ–≤–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –õ–µ–≤–æ-–ö–æ—Ä–µ–Ω—å-–ü—Ä–∞–≤–æ (in-order traversal)
–≤—Å–µ–≥–¥–∞ –ø–æ–ª—É—á–∞–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:
1 ‚Üí 2 ‚Üí 3 ‚Üí 4 ‚Üí 5 ‚Üí 6 ‚Üí 7

SPLAY-–û–ü–ï–†–ê–¶–ò–ò:
–ü—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –ª—é–±–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –¥–µ—Ä–µ–≤–æ –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è,
–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ BST —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è:

–î–æ –¥–æ—Å—Ç—É–ø–∞ –∫ "2":    –ü–æ—Å–ª–µ splay(2):
       4                 2
      / \               / \
     2   6             1   4
    / \                   / \
   1   3                 3   6
                            / \
                           5   7
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É % –∏ ~/ ',
    a: '''
üéØ % - –û–ø–µ—Ä–∞—Ç–æ—Ä –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è (modulo)

print(10 % 3);  // 1 (10 = 3*3 + 1)
print(7 % 2);   // 1 (7  = 2*3 + 1)
print(8 % 4);   // 0 (8  = 4*2 + 0)

// –° –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏
print(-10 % 3); // 2 (–Ω–µ -1!)

–ï–≤–∫–ª–∏–¥–æ–≤–æ –¥–µ–ª–µ–Ω–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –æ—Å—Ç–∞—Ç–æ–∫ –≤—Å–µ–≥–¥–∞ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π.

-10 √∑ 3 = -3.33...

–î–ª—è –µ–≤–∫–ª–∏–¥–æ–≤–∞ –¥–µ–ª–µ–Ω–∏—è:
-10 = 3 √ó (-4) + 2
     ‚Üì     ‚Üì    ‚Üì
   –¥–µ–ª–∏–º–æ–µ –¥–µ–ª–∏—Ç–µ–ª—å –æ—Å—Ç–∞—Ç–æ–∫

–ì–¥–µ: -4 —ç—Ç–æ floor(-10/3)
–û—Å—Ç–∞—Ç–æ–∫ = 2 (–≤—Å–µ–≥–¥–∞ ‚â• 0)

üéØ ~/ - –û–ø–µ—Ä–∞—Ç–æ—Ä —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –¥–µ–ª–µ–Ω–∏—è

print(10 ~/ 3);  // 3 (10 √∑ 3 = 3.33... ‚Üí 3)
print(7 ~/ 2);   // 3 (7 √∑ 2  = 3.5 ‚Üí 3)
print(8 ~/ 4);   // 2 (8 √∑ 4  = 2)

// –° –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏
print(-10 ~/ 3); // -3

''',
  ),
  QA(
    tags: [Tag.isolate, Tag.dart],
    q: '–ö–∞–∫–∏–µ –µ—Å—Ç—å —Å–ø–æ—Å–æ–±—ã —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–ª—è—Ç–æ–≤?',
    a: '''
üéØ 1) compute() - Flutter only, —Å—Ç–∞—Ä—ã–π –ø–æ–¥—Ö–æ–¥

–î–ª—è Flutter: compute() ‚Üí Isolate.run() (–º–∏–≥—Ä–∞—Ü–∏—è)

// –ü—Ä–æ—Å—Ç—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ Flutter-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
final result = await compute(heavyFunction, data);

–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞:
- –†–∞–±–æ—Ç–∞–µ—à—å –≤–æ Flutter (–Ω–µ –≤ pure Dart)
- –ù—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–Ω—É –∑–∞–¥–∞—á—É –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
- –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–æ—Ç–∞ –∏ –º–∏–Ω–∏–º—É–º –∫–æ–¥–∞

üéØ 2) Isolate.run() - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥

// –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è —Ä–∞–∑–æ–≤—ã—Ö –∑–∞–¥–∞—á
final result = await Isolate.run(() => heavyComputation(params));

Async/await - –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∏–∑–æ–ª—è—Ç–∞
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ - —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∏–∑–æ–ª—è—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
–ü—Ä–æ—Å—Ç–æ–π API - –±–µ–∑ ReceivePort/SendPort
–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ - —á–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ try/catch —Å Future

Isolate.run() –ø–æ—è–≤–∏–ª—Å—è –≤ Dart 2.19 –∏ —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–º —Å–ø–æ—Å–æ–±–æ–º –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —Å–ª—É—á–∞–µ–≤.
–î–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Å –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–µ–π –∏—Å–ø–æ–ª—å–∑—É–π Isolate.spawn() —Å ReceivePort/SendPort.

–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞:
- –ù—É–∂–µ–Ω —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, —á–∏—Å—Ç—ã–π API
- –†–∞–∑–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
- –•–æ—á–µ—à—å –ø–µ—Ä–µ–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–º—ã–∫–∞–Ω–∏–µ
- –†–∞–±–æ—Ç–∞–µ—à—å –≤ pure Dart –ø—Ä–æ–µ–∫—Ç–µ

üéØ 3) Isolate.spawn() - Maximum control

// –î–æ–ª–≥–æ–∂–∏–≤—É—â–∏–π –∏–∑–æ–ª—è—Ç —Å –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω–µ–π —Å–≤—è–∑—å—é
final receivePort = ReceivePort();
await Isolate.spawn(isolateEntryPoint, receivePort.sendPort);

–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞:

–ù—É–∂–Ω–∞ –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è
- –ò–∑–æ–ª—è—Ç –¥–æ–ª–∂–µ–Ω –∂–∏—Ç—å –¥–æ–ª–≥–æ
- –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º
- –†–∞–±–æ—Ç–∞–µ—à—å —Å –ø–æ—Ç–æ–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ null safety?',
    a: '''
–í —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö Dart (–¥–æ Dart 2.12, –¥–æ –≤–≤–µ–¥–µ–Ω–∏—è null safety) Null –æ—Ç–Ω–æ—Å–∏–ª—Å—è –∫ Object:

Object
  ‚îú‚îÄ‚îÄ Null (null –æ—Ç–Ω–æ—Å–∏–ª—Å—è —Å—é–¥–∞)
  ‚îú‚îÄ‚îÄ num
  ‚îÇ   ‚îú‚îÄ‚îÄ int
  ‚îÇ   ‚îî‚îÄ‚îÄ double
  ‚îú‚îÄ‚îÄ String
  ‚îú‚îÄ‚îÄ bool
  ‚îú‚îÄ‚îÄ List
  ‚îú‚îÄ‚îÄ Map
  ‚îî‚îÄ‚îÄ ...

// Dart < 2.12
print(null is Object);        // true
print(null is Null);          // true
print(null.runtimeType);      // Null

Object obj = null;            // –ö–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª–æ—Å—å –±–µ–∑ –æ—à–∏–±–æ–∫
List<int> list = null;        // –î–æ–ø—É—Å—Ç–∏–º–æ
int x = null;                 // –î–æ–ø—É—Å—Ç–∏–º–æ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤

üéØ –ü–æ—Å–ª–µ –≤–≤–µ–¥–µ–Ω–∏—è null safety (Dart 2.12+):

Object?
  ‚îú‚îÄ‚îÄ Object (–Ω–µ –≤–∫–ª—é—á–∞–µ—Ç null)
  ‚îÇ   ‚îú‚îÄ‚îÄ String
  ‚îÇ   ‚îú‚îÄ‚îÄ int
  ‚îÇ   ‚îî‚îÄ‚îÄ ...
  |
  ‚îî‚îÄ‚îÄ Null (null)

–∏–ª–∏

//  –ö–æ—Ä–Ω–µ–≤–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è —Ç–∏–ø–æ–≤:
//
//         Object?
//        /       \
//   Object        Null
//      |           |
//   [–≤—Å–µ —Ç–∏–ø—ã]    null
//      |
//  String, int...

–¢–µ–ø–µ—Ä—å null —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ—Ç–¥–µ–ª—å–Ω–æ –∏ —Ç–æ–ª—å–∫–æ Object? –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å null.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç allMatches –¥–ª—è String?',
    a: '''
–ò—â–µ—Ç –≤—Å–µ –Ω–µ–ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è –≤—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ (—Å—Ç—Ä–æ–∫–∏ –∏–ª–∏ RegExp) –≤ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Iterable<Match>.

–ü—Ä–∏–º–µ—Ä

  String a = 'xooo';
  print('x'.allMatches(a).length); // 1
  print('o'.allMatches(a).length); // 3

–ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º 'x'.allMatches(...) ‚Äî —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–∞—è —Ñ–æ—Ä–º–∞ –¥–ª—è: RegExp('x').allMatches(a)
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ `Completer`?',
    a: '''
Completer - —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—ã—Ö Future
Future - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
–†—É—á–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º Future (—É—Å–ø–µ—Ö/–æ—à–∏–±–∫–∞)

üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
final Completer<T> completer = Completer<T>();
- –°–æ–∑–¥–∞–µ—Ç "–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä" –¥–ª—è Future —Ç–∏–ø–∞ T

üéØ –ü–æ–ª—É—á–µ–Ω–∏–µ Future
final Future<T> future = completer.future;
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Future, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å Completer

üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
bool completer.isCompleted
- –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ —É–∂–µ Future
- true - –∑–∞–≤–µ—Ä—à–µ–Ω (—É—Å–ø–µ—à–Ω–æ –∏–ª–∏ —Å –æ—à–∏–±–∫–æ–π)
- false - –≤—Å–µ –µ—â–µ –æ–∂–∏–¥–∞–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

üéØ –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
completer.complete(value);
- –ó–∞–≤–µ—Ä—à–∞–µ—Ç Future —É—Å–ø–µ—à–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º value
- –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—Å–µ .then() –∏ await –ø–æ–ª—É—á–∞—Ç —ç—Ç–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç

üéØ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
dartcompleter.completeError(error);
- –ó–∞–≤–µ—Ä—à–∞–µ—Ç Future —Å –æ—à–∏–±–∫–æ–π
- –û—à–∏–±–∫–∞ –ø–æ–ø–∞–¥–µ—Ç –≤ .catchError() –∏–ª–∏ try-catch –ø—Ä–∏ await

üéØ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
Future<String> loadDataFromServer() {
  final Completer<String> completer = Completer<String>();

  // –ò–º–∏—Ç–∞—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
  Timer(Duration(seconds: 2), () {
    if (Random().nextBool()) {
      // –£—Å–ø–µ—à–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
      completer.complete("–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!");
    } else {
      // –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
      completer.completeError("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏");
    }
  });

  return completer.future;
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ join?',
    a: '''
–ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ —Å—Ç—Ä–æ–∫—É

üéØ –°—Ç—Ä–æ–∫–∏
final List<String> names = ['Alice', 'Bob', 'Charlie'];
final String result = names.join(', '); // "Alice, Bob, Charlie"

üéØ –ß–∏—Å–ª–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É—é—Ç—Å—è –≤ —Å—Ç—Ä–æ–∫–∏)
final List<int> numbers = [1, 2, 3, 4];
final String numbersString = numbers.join('-'); // "1-2-3-4"

üéØ –° –ø—É—Å—Ç—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
final List<String> chars = ['H', 'e', 'l', 'l', 'o'];
final String word = chars.join(''); // "Hello"
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–æ–π —Ñ–æ—Ä–º—É–ª–æ–π –≤—ã–≤–µ—Å—Ç–∏ —Å—É–º–º—É —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ n?',
    a: '''
üéØ –ù–∞–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - O(n)

int sumOfNaive(int n) {
  int sum = 0;
  for (int i = 1; i <= n; i++) {
    sum += i;
  }
  return sum;
}

üéØ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–æ—Ä–º—É–ª–∞ - O(1)

int sumOf(int n) {
  return (n + 1) ~/ 2 * n;
}

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ O(1): –ù–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

–°–ª–æ–∂–µ–Ω–∏–µ: n + 1 ‚Üí 1 –æ–ø–µ—Ä–∞—Ü–∏—è
–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ: ~/ 2 ‚Üí 1 –æ–ø–µ—Ä–∞—Ü–∏—è
–£–º–Ω–æ–∂–µ–Ω–∏–µ: * n ‚Üí 1 –æ–ø–µ—Ä–∞—Ü–∏—è

–ò—Ç–æ–≥–æ: 3 —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ clamp?',
    a: '''
–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≥—Ä–∞–Ω–∏—Ü–∞—Ö.
–û–Ω –¥–æ—Å—Ç—É–ø–µ–Ω —É —á–∏—Å–ª–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ (int, double, num) –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫:

num clamp(num lowerLimit, num upperLimit)
- lowerLimit ‚Äî –Ω–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞
- upperLimit ‚Äî –≤–µ—Ä—Ö–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞

void main() {
  var value1 = 5;
  print(value1.clamp(0, 10)); // 5 (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö)

  var value2 = -3;
  print(value2.clamp(0, 10)); // 0 (–º–µ–Ω—å—à–µ –º–∏–Ω–∏–º—É–º–∞)

  var value3 = 15;
  print(value3.clamp(0, 10)); // 10 (–±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º—É–º–∞)
}

üìå –î–ª—è —á–µ–≥–æ —ç—Ç–æ —É–¥–æ–±–Ω–æ
- –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ Flutter)
- –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç)
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –∏–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞)

üí° –ó–∞–º–µ—á–∞–Ω–∏–µ:
clamp() –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω–æ–µ —á–∏—Å–ª–æ, –∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
''',
  ),
  QA(
    tags: [Tag.dart, Tag.complexity],
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ StringBuffer?',
    a: r'''
1Ô∏è‚É£ –°—Ç—Ä–æ–∫–∏ –≤ Dart –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–µ

–í Dart (–∫–∞–∫ –∏ –≤ Java, C#, Python) —Å—Ç—Ä–æ–∫–∞ ‚Äî immutable.
–ö–æ–≥–¥–∞ –ø–∏—à–µ–º:

var s = 'a';
s += 'b';

–ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ, –∞:
- –°–æ–∑–¥–∞—ë—Ç—Å—è –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å—Ç—Ä–æ–∫–∏ –¥–ª–∏–Ω–æ–π len(s) + len('b')
- –ö–æ–ø–∏—Ä—É–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä–æ–∫–∏ s
- –ö–æ–ø–∏—Ä—É–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ 'b'
- –°—Ç–∞—Ä—ã–π –æ–±—ä–µ–∫—Ç –æ—Å—Ç–∞—ë—Ç—Å—è –≤–∏—Å–µ—Ç—å –¥–æ —Å–±–æ—Ä–∫–∏ –º—É—Å–æ—Ä–∞

–í —Ü–∏–∫–ª–µ —ç—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –±–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ:

var s = '';
for (var i = 0; i < 1_000_000; i++) {
  s += i.toString();
}

–ö–∞–∂–¥–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –∏ –∫–æ–ø–∏—Ä—É–µ—Ç –≤—Å—ë –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–Ω–æ–≤–æ ‚Äî –ø–æ–ª—É—á–∞–µ–º O(n¬≤) –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –ø–∞–º—è—Ç–∏.

2Ô∏è‚É£ StringBuffer –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∏–∑–º–µ–Ω—è–µ–º—ã–π –±—É—Ñ–µ—Ä

–í–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –∫–∞–∂–¥—ã–π —Ä–∞–∑:
- –û–Ω —Ö—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–∫–µ (List<Object>) –∏–ª–∏ –º–∞—Å—Å–∏–≤–µ –±–∞–π—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ (–≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ Dart —ç—Ç–æ List<dynamic>).
- –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ write() –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç –≤ —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫.
- –ö–æ–≥–¥–∞ —Ç—ã –≤—ã–∑—ã–≤–∞–µ—à—å toString(), –≤—Å–µ –∫—É—Å–∫–∏ –æ–¥–∏–Ω —Ä–∞–∑ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∏—Ä—É—é—Ç—Å—è –≤ –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É.

–í—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫ (—É–ø—Ä–æ—â—ë–Ω–Ω–æ):
class StringBuffer {
  final List<Object?> _chunks = [];

  void write(Object? obj) {
    _chunks.add(obj.toString());
  }

  String toString() {
    // join –∫–æ–ø–∏—Ä—É–µ—Ç –≤—Å—ë –≤ –æ–¥–∏–Ω –Ω–æ–≤—ã–π StringBuilder –Ω–∞ —É—Ä–æ–≤–Ω–µ –¥–≤–∏–∂–∫–∞
    return _chunks.join();
  }
}

–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º:
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ ‚Äî O(1) –∞–º–æ—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ
–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ ‚Äî O(n) —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –∫–æ–Ω—Ü–µ

üéØ –ó–∞–º–µ—Ä —Å–∫–æ—Ä–æ—Å—Ç–∏

void performanceComparison() {
  final Stopwatch stopwatch = Stopwatch();
  const int iterations = 10000;

  // ‚ùå –ù–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫
  stopwatch.start();
  String inefficient = '';
  for (int i = 0; i < iterations; i++) {
    inefficient += 'segment $i '; // –ö–∞–∂–¥—ã–π —Ä–∞–∑ –Ω–æ–≤—ã–π String –æ–±—ä–µ–∫—Ç
  }
  stopwatch.stop();
  print('String concatenation: ${stopwatch.elapsedMilliseconds}ms');


  stopwatch.reset();


  // ‚úÖ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - StringBuffer
  stopwatch.start();
  final StringBuffer buffer = StringBuffer();
  for (int i = 0; i < iterations; i++) {
    buffer.write('segment $i '); // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±—É—Ñ–µ—Ä
  }
  final String efficient = buffer.toString(); // –û–¥–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
  stopwatch.stop();
  print('StringBuffer: ${stopwatch.elapsedMilliseconds}ms');
}

void main () {
  performanceComparison();

  // String concatenation: 35ms
  // StringBuffer: 2ms
}


–í–†–ï–ú–ï–ù–ù–ê–Ø –°–õ–û–ñ–ù–û–°–¢–¨ –°–¢–†–û–ö–û–í–´–• –û–ü–ï–†–ê–¶–ò–ô –í DART:

STRING CONCATENATION (—Å–ª–æ–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫):
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
–û–ø–µ—Ä–∞—Ç–æ—Ä +:  O(n) –¥–ª—è –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
–ü—Ä–∏—á–∏–Ω–∞: —Å—Ç—Ä–æ–∫–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã, —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞

–ü–†–ò–ú–ï–†:
String result = '';
for (int i = 0; i < n; i++) {
  result += 'a';  // O(1) + O(2) + O(3) + ... + O(n) = O(n¬≤)
}

–°–ª–æ–∂–Ω–æ—Å—Ç—å n –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–π: O(n¬≤)

STRINGBUFFER:
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
append (write):     O(1) –∞–º–æ—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ
toString():         O(n) –≥–¥–µ n - –æ–±—â–∞—è –¥–ª–∏–Ω–∞

–ü–†–ò–ú–ï–†:
StringBuffer buffer = StringBuffer();
for (int i = 0; i < n; i++) {
  buffer.write('a');  // O(1) –∫–∞–∂–¥–∞—è, –≤—Å–µ–≥–æ O(n)
}
String result = buffer.toString();  // O(n)

–°–ª–æ–∂–Ω–æ—Å—Ç—å n –¥–æ–±–∞–≤–ª–µ–Ω–∏–π + toString(): O(n)

–°–†–ê–í–ù–ï–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò:
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ –û–ø–µ—Ä–∞—Ü–∏—è        ‚îÇ String      ‚îÇ StringBuffer‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1 –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è  ‚îÇ O(n)        ‚îÇ O(1)        ‚îÇ
‚îÇ n –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–π  ‚îÇ O(n¬≤)       ‚îÇ O(n)        ‚îÇ
‚îÇ toString()      ‚îÇ O(1)        ‚îÇ O(n)        ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚úì –ò—Å–ø–æ–ª—å–∑—É–π StringBuffer –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–π
‚úì –î–ª—è 2-3 —Å—Ç—Ä–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä + –ø—Ä–∏–µ–º–ª–µ–º
‚úì –î–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–π interpolation: '${a}${b}'

''',
  ),
  QA(
    tags: [Tag.dart, Tag.complexity],
    q: '–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç sort –≤ dart?',
    a: r'''
–ê–ª–≥–æ—Ä–∏—Ç–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Dual-Pivot Quicksort ‚Äî —É–ª—É—á—à–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –±—ã—Å—Ç—Ä–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å –¥–≤—É–º—è –æ–ø–æ—Ä–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.

if (–º–∞—Å—Å–∏–≤ <= 32_—ç–ª–µ–º–µ–Ω—Ç–æ–≤) {
  –∏—Å–ø–æ–ª—å–∑—É–µ–º_insertion sort(); // –ü—Ä–æ—Å—Ç–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è –¥–ª—è –º–∞–ª–æ–≥–æ –æ–±—ä–µ–º–∞
} else {
  –∏—Å–ø–æ–ª—å–∑—É–µ–º_dualPivotQuicksort();   // –ë—ã—Å—Ç—Ä–∞—è –¥–ª—è –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤
}

https://github.com/dart-lang/sdk/blob/main/sdk/lib/internal/sort.dart#L61


–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—Å—Ç–∞–≤–∫–∞–º–∏ (insertion sort) - —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç—Ä–æ–∏—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
–ø–æ –æ–¥–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∑–∞ —Ä–∞–∑. –û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç, –±–µ—Ä—è –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –≤—Ö–æ–¥–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –≤—Å—Ç–∞–≤–ª—è—è –µ–≥–æ
–≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —á–∞—Å—Ç—å –º–∞—Å—Å–∏–≤–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é.

–ü—Ä–∏–º–µ—Ä –ø–æ—à–∞–≥–æ–≤–æ

[5, 3, 8, 4, 2]
[3, 5, 8, 4, 2]
[3, 4, 8, 5, 2]
[2, 3, 4, 8, 5]
[2, 3, 4, 5, 8]

üéØ Dual-Pivot Quicksort

–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ –Ω—É–∂–Ω–æ —Ä–∞—Å—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ª—é–¥–µ–π –ø–æ —Ä–æ—Å—Ç—É:
- –í –æ–±—ã—á–Ω–æ–º quicksort —Ç—ã —Å—Ç–∞–≤–∏—à—å –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∫–∞–∫ —ç—Ç–∞–ª–æ–Ω –∏ –≥–æ–≤–æ—Ä–∏—à—å: "–í—Å–µ, –∫—Ç–æ –Ω–∏–∂–µ ‚Äî –Ω–∞–ª–µ–≤–æ, –∫—Ç–æ –≤—ã—à–µ ‚Äî –Ω–∞–ø—Ä–∞–≤–æ".
- –í dual-pivot —É —Ç–µ–±—è –¥–≤–∞ —ç—Ç–∞–ª–æ–Ω–∞ (–Ω–∏–∑–∫–∏–π –∏ –≤—ã—Å–æ–∫–∏–π), –∏ –ª—é–¥–∏ —Å—Ä–∞–∑—É –¥–µ–ª—è—Ç—Å—è –Ω–∞ —Ç—Ä–∏ –≥—Ä—É–ø–ø—ã: –Ω–∏–∑–∫–∏–µ, —Å—Ä–µ–¥–Ω–∏–µ –∏ –≤—ã—Å–æ–∫–∏–µ. –≠—Ç–æ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –¥–µ–ª–∞—Ç—å –¥–≤–∞ –ø—Ä–æ—Ö–æ–¥–∞.

1Ô∏è‚É£ –û–±—ã—á–Ω—ã–π Quicksort
–û–±—ã—á–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º Quicksort –≤—ã–±–∏—Ä–∞–µ—Ç –æ–¥–Ω—É –æ–ø–æ—Ä–Ω—É—é —Ç–æ—á–∫—É (pivot) –∏ –¥–µ–ª–∏—Ç –º–∞—Å—Å–∏–≤ –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏:
- —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ–Ω—å—à–µ pivot
- —ç–ª–µ–º–µ–Ω—Ç—ã –±–æ–ª—å—à–µ pivot
- –ü–æ—Ç–æ–º —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç—Ç–∏ –¥–≤–µ —á–∞—Å—Ç–∏.


2Ô∏è‚É£ Dual-Pivot Quicksort (–¥–≤–æ–π–Ω–æ–π pivot)
–í–º–µ—Å—Ç–æ –æ–¥–Ω–æ–≥–æ –æ–ø–æ—Ä–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –±–µ—Ä—É—Ç—Å—è –¥–≤–∞ pivots (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç).
–¢–æ–≥–¥–∞ –º–∞—Å—Å–∏–≤ –¥–µ–ª–∏—Ç—Å—è —Å—Ä–∞–∑—É –Ω–∞ —Ç—Ä–∏ —á–∞—Å—Ç–∏:
- –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ–Ω—å—à–µ –ø–µ—Ä–≤–æ–≥–æ pivot1
- –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ–∂–¥—É pivot1 –∏ pivot2
- –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ pivot2
- –î–∞–ª—å—à–µ –∫–∞–∂–¥–∞—è —á–∞—Å—Ç—å —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Ç–µ–º –∂–µ –º–µ—Ç–æ–¥–æ–º.

–ú–∞—Å—Å–∏–≤:
[9, 2, 7, 4, 6, 8, 1]

–í—ã–±–∏—Ä–∞–µ–º –¥–≤–∞ pivot: 2 –∏ 8.
–†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Ç—Ä–∏ –≥—Ä—É–ø–ø—ã:
  < 2: [1]
  2..8: [7, 4, 6]
  > 8: [9]
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞? –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –±—É–∫–≤—ã z?',
    a: r'''
üéØ –î–ª—è –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ (String –¥–ª–∏–Ω–æ–π 1)
int code1 = 'z'.codeUnitAt(0); // 122
int code2 = 'Z'.codeUnitAt(0); // 90

üéØ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ
int code3 = 'z'.codeUnits.first; // 122
int code4 = 'Z'.codeUnits.first; // 90

üéØ –û–±—Ä–∞—Ç–Ω–æ - –∏–∑ –∫–æ–¥–∞ –≤ —Å–∏–º–≤–æ–ª
String z = String.fromCharCode(122); // 'z'
String Z = String.fromCharCode(90);  // 'Z'

void main() {
  print('z: ${'z'.codeUnitAt(0)}');     // z: 122
  print('Z: ${'Z'.codeUnitAt(0)}');     // Z: 90

  // –î–∏–∞–ø–∞–∑–æ–Ω a-z: 97-122
  // –î–∏–∞–ø–∞–∑–æ–Ω A-Z: 65-90

  for (int i = 97; i <= 122; i++) {
    print('${String.fromCharCode(i)} = $i');
  }
}

for (int i = 97; i <= 122; i++) {
  print('${String.fromCharCode(i)} = $i');
}

// –≤—ã–≤–æ–¥: 97...122
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–î–ª—è —á–µ–≥–æ –Ω—É–∂–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏ min –∏ max?',
    a: r'''
üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
min(a, b) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
max(a, b) - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

int smaller = min(5, 10);     // 5
int bigger = max(5, 10);      // 10
double minDouble = min(3.14, 2.71); // 2.71

üéØ –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –≤–∏–¥–∂–µ—Ç–∞
Widget adaptiveContainer(double screenWidth) {
  return Container(
    width: min(screenWidth * 0.8, 400), // –ú–∞–∫—Å–∏–º—É–º 400px –∏–ª–∏ 80% —ç–∫—Ä–∞–Ω–∞
    height: max(200, screenWidth * 0.3), // –ú–∏–Ω–∏–º—É–º 200px
  );
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ –±—ã–≤–∞—é—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –∫–ª–∞—Å—Å–∞?',
    a: r'''
üéØ 1. –û–±—ã—á–Ω—ã–π (Default) –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä

class User {
  String name;
  int age;

  User(this.name, this.age); // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
}

üéØ 2. –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã

class User {
  String name;
  int age;

  User(this.name, this.age);

  User.guest() : name = 'Guest', age = 0; // –ø—Ä–∏–º–µ—Ä 1

  User.fromJson(Map<String, dynamic> json) // –ø—Ä–∏–º–µ—Ä 2
      : name = json['name'],
        age = json['age'];

  User.child(String name) : this(name, 0); // –ø—Ä–∏–º–µ—Ä 3
}

üéØ 3. Factory –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã

class User {
  String name;
  int age;

  User(this.name, this.age);

  factory User(String name, int age) {
    if (age < 0) throw ArgumentError('Invalid age');
    return User._(name, age);
  }

  factory User.admin() => AdminUser._('Admin', 30);

  factory User.fromJson(Map<String, dynamic> json) {
    return User(json['name'], json['age']);
  }
}

üéØ 4. Const –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã

class Point {
  final double x, y;

  // Const –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —Å–æ–∑–¥–∞–µ—Ç compile-time –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
  const Point(this.x, this.y);

  const Point.origin() : x = 0, y = 0;
}

// –û–¥–∏–Ω–∞–∫–æ–≤—ã–µ const –æ–±—ä–µ–∫—Ç—ã - –∏–¥–µ–Ω—Ç–∏—á–Ω—ã
const p1 = Point(1, 2);
const p2 = Point(1, 2);
print(identical(p1, p2)); // true

–ö–ª—é—á–µ–≤—ã–µ —Ä–∞–∑–ª–∏—á–∏—è:

- –û–±—ã—á–Ω—ã–π/–ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π - –≤—Å–µ–≥–¥–∞ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
- Factory - –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å, –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ
- Const - compile-time –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã, –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã

üéØ 5. –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä

class StubRestaurantsDatabase {
  // –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
  StubRestaurantsDatabase._();
''',
  ),
  QA(
    tags: [Tag.dart, Tag.future],
    q: '''
–í –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–¥?

void main() {
  print('1. Sync code');
  scheduleMicrotask(() => print('2. scheduleMicrotask'));
  Future.microtask(() => print('3. Future.microtask'));
  Future.sync(() => print('4. Future.sync - –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ!'));
  Future.value(42).then((value) => print('5. Future.value.then'));
  Future(() => 'completed').then((_) => print('6. Future().then'));
  Future(() => print('7. Future()'));
  Future.delayed(Duration.zero, () => print('8. Future.delayed(zero)'));
  Future.delayed(Duration(milliseconds: 1), () => print('9. Future.delayed(1ms)'));
  Timer.run(() => print('10. Timer.run'));
  Timer(Duration.zero, () => print('11. Timer(zero)'));
  Timer(Duration(milliseconds: 1), () => print('12. Timer(1ms)'));
  Stream.fromIterable([1]).listen((_) => print('13. Stream event'));
  print('16. More sync code');
}
  ''',
    a: '''
// –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É:
1.  print(Sync code)
4.  Future.sync(() => print()) - –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ!
16. print(More sync code)

// –ó–∞—Ç–µ–º MICROTASK QUEUE: (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
2.  scheduleMicrotask
3.  Future.microtask
5.  Future.value.then
13. Stream event
6.  Future().then

// –ó–∞—Ç–µ–º EVENT QUEUE: (–Ω–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
7.  Future()
8.  Future.delayed(zero) // –¥–∞–∂–µ 0
10. Timer.run
11. Timer(zero)
9.  Future.delayed(1ms)
12. Timer(1ms)
''',
  ),
  QA(
    tags: [Tag.dart, Tag.future],
    q: '''
–í –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–¥?

class AsyncPerson {
  AsyncPerson() {
    print('1. Constructor start');
    Future(() => print('2. From constructor Future'));
    scheduleMicrotask(() => print('3. From constructor Microtask'));
    print('4. Constructor end');
  }
}

void main() {
  print('5. Before');
  final person = AsyncPerson();
  print('6. After');
  Future(() => print('7. Main Future'));
}
  ''',
    a: '''
// –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É:
print('5. Before');
print('1. Constructor start');
print('4. Constructor end');
print('6. After');

// –ó–∞—Ç–µ–º MICROTASK QUEUE:
scheduleMicrotask(() => print('3. From constructor Microtask');

// –ó–∞—Ç–µ–º EVENT QUEUE:
Future(() => print('2. From constructor Future'));
Future(() => print('7. Main Future'));
''',
  ),
  QA(
    tags: [Tag.dart, Tag.future],
    q: '''
–í –∫–∞–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–¥?

void main() {
  print('A');
  Future(() => print('B'));
  scheduleMicrotask(() => print('C'));
  Future.delayed(Duration.zero, () => print('D'));
  print('E');
}
''',
    a: '''
// –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É
print('A');
print('E');

// –ó–∞—Ç–µ–º MICROTASK QUEUE
scheduleMicrotask(() => print('C'));

// –ó–∞—Ç–µ–º EVENT QUEUE
Future(() => print('B'));
Future.delayed(Duration.zero, () => print('D'));
''',
  ),
  QA(
    tags: [Tag.dart],
    q: r'–ö–∞–∫ –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, @, —á–µ—Ä–µ–∑ RegExp?',
    a: '''
üéØ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤
String text = "Hello @ world @ test @";
int count = RegExp(r'@').allMatches(text).length;
print(count); // –í—ã–≤–µ–¥–µ—Ç: 3

üéØ –ù–∞–ª–∏—á–∏–µ
String text = "Hello D world @ test";
bool hasDog = RegExp(r'D').hasMatch(text);
print(hasDog); // –í—ã–≤–µ–¥–µ—Ç: true
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è i++ –æ—Ç ++i ?',
    a: '''
üéØ i++ (–ø–æ—Å—Ç—Ñ–∏–∫—Å–Ω—ã–π –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç):
- –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ i, –∑–∞—Ç–µ–º —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –Ω–∞ 1
- –°–Ω–∞—á–∞–ª–∞ –≤–æ–∑–≤—Ä–∞—Ç, –ø–æ—Ç–æ–º –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç

üéØ ++i (–ø—Ä–µ—Ñ–∏–∫—Å–Ω—ã–π –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç):
- –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç i –Ω–∞ 1, –∑–∞—Ç–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
- –°–Ω–∞—á–∞–ª–∞ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç, –ø–æ—Ç–æ–º –≤–æ–∑–≤—Ä–∞—Ç

–ü—Ä–∏–º–µ—Ä:

int a = 5;
int b = 5;

int x = a++; // x = 5
             // a = 6

int y = ++b; // y = 6
             // b = 6

–í —Ü–∏–∫–ª–∞—Ö —Ä–∞–∑–Ω–∏—Ü—ã –Ω–µ—Ç:

// –≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã
for (int i = 0; i < 10; i++) { }
for (int i = 0; i < 10; ++i) { }
''',
  ),
  QA(
    tags: [Tag.dart, Tag.future],
    q: '–¢–∞–±–ª–∏—Ü–∞ Event Loop - –û—á–µ—Ä–µ–¥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
    a: '''
–ü–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
- –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ (main thread) - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É
- Microtask Queue - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞, –∏–º–µ–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
- Event Queue - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–ø—É—Å—Ç–æ—à–µ–Ω–∏—è microtask queue

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                         –°–ò–ù–•–†–û–ù–ù–´–ô –ö–û–î                          ‚îÇ
‚îÇ                    (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ)                     ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ‚úì print('1. Sync code')                                         ‚îÇ
‚îÇ ‚úì Future.sync(() => print('4. Future.sync'))                    ‚îÇ
‚îÇ ‚úì print('16. More sync code')                                   ‚îÇ
‚îÇ ‚úì var result = someFunction()                                   ‚îÇ
‚îÇ ‚úì if/for/while —Ü–∏–∫–ª—ã                                            ‚îÇ
‚îÇ ‚úì –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤: var obj = MyClass()                        ‚îÇ
‚îÇ ‚úì –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã: list.add(), map.putIfAbsent()              ‚îÇ
‚îÇ ‚úì setState(() {}) - —Å–∞–º –≤—ã–∑–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π                        ‚îÇ
‚îÇ ‚úì throw Exception() - —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π                                ‚îÇ
‚îÇ ‚úì try/catch –±–ª–æ–∫–∏                                               ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                        MICROTASK QUEUE                          ‚îÇ
‚îÇ                  (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, FIFO)                      ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ‚ó¶ scheduleMicrotask(() => print('2. scheduleMicrotask'))        ‚îÇ
‚îÇ ‚ó¶ Future.microtask(() => print('3. Future.microtask'))          ‚îÇ
‚îÇ ‚ó¶ Future.value(42).then((value) => print('5. then'))            ‚îÇ
‚îÇ ‚ó¶ Future.error('error').catchError((e) => print(e))             ‚îÇ
‚îÇ ‚ó¶ Completer().future.then(...)                                  ‚îÇ
‚îÇ ‚ó¶ Stream.fromIterable([1]).listen(...) - —Å–∞–º listener           ‚îÇ
‚îÇ ‚ó¶ StreamController.add() - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è listeners                ‚îÇ
‚îÇ ‚ó¶ async/await - –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ await                         ‚îÇ
‚îÇ ‚ó¶ Zone.current.scheduleMicrotask(...)                           ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                         EVENT QUEUE                             ‚îÇ
‚îÇ                    (–æ–±—ã—á–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç, FIFO)                    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ ‚óã Future(() => print('7. Future()'))                            ‚îÇ
‚îÇ ‚óã Future(() => 'completed').then((_) => print('6. then'))       ‚îÇ
‚îÇ ‚óã Future.delayed(Duration.zero, () => print('8. delayed'))      ‚îÇ
‚îÇ ‚óã Future.delayed(Duration(milliseconds: 1), () => print('9'))   ‚îÇ
‚îÇ ‚óã Timer.run(() => print('10. Timer.run'))                       ‚îÇ
‚îÇ ‚óã Timer(Duration.zero, () => print('11. Timer zero'))           ‚îÇ
‚îÇ ‚óã Timer(Duration(milliseconds: 1), () => print('12. Timer'))    ‚îÇ
‚îÇ ‚óã Timer.periodic(Duration(seconds: 1), ...)                     ‚îÇ
‚îÇ ‚óã HttpClient.get().then(...) - HTTP –æ—Ç–≤–µ—Ç—ã                      ‚îÇ
‚îÇ ‚óã File.readAsString().then(...) - I/O –æ–ø–µ—Ä–∞—Ü–∏–∏                  ‚îÇ
‚îÇ ‚óã Socket —Å–æ–±—ã—Ç–∏—è                                                ‚îÇ
‚îÇ ‚óã Process.run().then(...) - –∑–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤                    ‚îÇ
‚îÇ ‚óã Directory.list().listen(...) - —Ñ–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞               ‚îÇ
‚îÇ ‚óã Isolate.spawn().then(...) - —Å–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–ª—è—Ç–æ–≤                 ‚îÇ
‚îÇ ‚óã Platform –∫–∞–Ω–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è                                    ‚îÇ
‚îÇ ‚óã UI —Å–æ–±—ã—Ç–∏—è (–∂–µ—Å—Ç—ã, –Ω–∞–∂–∞—Ç–∏—è) - –≤ Flutter                       ‚îÇ
‚îÇ ‚óã AnimationController.forward().then(...)                       ‚îÇ
‚îÇ ‚óã Future(() => heavyComputation()) - —Ç—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è         ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

''',
  ),

  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –±—ã—Å—Ç—Ä–æ —É–¥–≤–æ–∏—Ç—å integer?',
    a: '''
void main() {
  print(2 << 0); // 2  (2 * 1)
  print(2 << 1); // 4  (2 * 2)
  print(2 << 2); // 8  (2 * 2 * 2)
  print(2 << 3); // 16 (2 * 2 * 2 * 2)

  print(3 << 1); // 6  (3 * 2)
  print(3 << 2); // 12 (3 * 2 * 2)
  print(3 << 3); // 24 (3 * 2 * 2 * 2)
}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '''
–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É?
A value of type 'Iterable<int>' can't be assigned to a variable of type List
''',
    a: '''
–≠—Ç–∞ –æ—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø–æ—Ç–æ–º—É, —á—Ç–æ Iterable<int> –∏ List<int> ‚Äî —ç—Ç–æ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã, —Ö–æ—Ç—è List –∏ —Ä–µ–∞–ª–∏–∑—É–µ—Ç Iterable.

–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —è–≤–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é toList()

// –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ
List<int> numbers = [1, 2, 3].where((n) => n > 1); // –û—à–∏–±–∫–∞

// –ü—Ä–∞–≤–∏–ª—å–Ω–æ
List<int> numbers = [1, 2, 3].where((n) => n > 1).toList();
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫ –ø—Ä–∏–≤–æ–¥–∏—Ç—å —Ç–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏?',
    a: '''
üéØ 1. cast<T>()

List<dynamic> source = [1, 'hello', 3, null];
List<int> result = source.where((e) => e is int).cast<int>().toList(); [1, 3]

Use 'whereType' to select elements of a given type.

üéØ 2. whereType<T>() - –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è

List<dynamic> source = [1, 'hello', 3, null];
List<int> result = source.whereType<int>().toList(); // [1, 3]
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –µ—Å—Ç—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ Map?',
    a: r'''
Map<String, int> result = {'a': 1};

üéØ –í–∞—Ä–∏–∞–Ω—Ç 1: –ü—Ä—è–º–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ null
result['a'] = (result['a'] ?? 0) + 1; // {a: 2}

üéØ –í–∞—Ä–∏–∞–Ω—Ç 2: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ update (–±–æ–ª–µ–µ –∏–¥–∏–æ–º–∞—Ç–∏—á–Ω–æ)
result.update('a', (value) => value + 1, ifAbsent: () => 1); // {a: 3}

üéØ –í–∞—Ä–∏–∞–Ω—Ç 3: –ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –∫–ª—é—á —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
result['a'] = result['a']! + 1; // {a: 4}
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –û–ø–µ—Ä–∞—Ç–æ—Ä XOR (^) ‚Äî "–∏—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò"',
    a: '''

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è:
- –∏–Ω–≤–µ—Ä—Å–∏—è –±–∏—Ç–æ–≤
- –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —Å—É–º–º
- –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö—ç—à

üéØ –ö–∞–∫ —Å –ø–æ–º–æ—â—å—é XOR –æ–±–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –¥–≤—É—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ—Ç—å–µ–π?

void swap(a, b) {
  a = a ^ b;
  b = a ^ b; // —Ç–µ–ø–µ—Ä—å b = (a ^ b) ^ b = a
  a = a ^ b; // —Ç–µ–ø–µ—Ä—å a = (a ^ b) ^ a = b
}

üéØ –ß–µ–º—É —Ä–∞–≤–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: 5 ^ 3?

  5 = 0b0101
  3 = 0b0011
XOR = 0b0110 = 6
–û—Ç–≤–µ—Ç: 6

üéØ –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∞—Å—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: true ^ true?

true ^ true   = false  // –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ ‚Üí false
false ^ false = false  // –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ ‚Üí false
true ^ false  = true   // —Ä–∞–∑–Ω—ã–µ ‚Üí true
false ^ true  = true   // —Ä–∞–∑–Ω—ã–µ ‚Üí true

üéØ –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∞—Å—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: 12 ^ 12?

–õ—é–±–æ–µ —á–∏—Å–ª–æ XOR —Å–∞–º–æ —Å —Å–æ–±–æ–π –¥–∞—ë—Ç 0.
–û—Ç–≤–µ—Ç: 0

üéØ –ö–∞–∫ —Å –ø–æ–º–æ—â—å—é XOR –æ–±–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –¥–≤—É—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ—Ç—å–µ–π?

void swap(a, b) {
  a = a ^ b;
  b = a ^ b; // —Ç–µ–ø–µ—Ä—å b = (a ^ b) ^ b = a
  a = a ^ b; // —Ç–µ–ø–µ—Ä—å a = (a ^ b) ^ a = b
}
''',
  ),

  QA(
    tags: [Tag.dart],
    q: '''
–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É:

const String envFile = String.fromEnvironment('ENV_FILE');
final String envFile = String.fromEnvironment('ENV_FILE');

''',
    a: '''
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ - –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
const String envFile = String.fromEnvironment('ENV_FILE', defaultValue: '.env');

// ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ - –Ω–µ –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
final String envFile = String.fromEnvironment('ENV_FILE', defaultValue: '.env');


–¥–ª—è --dart-define –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π const, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ compile-time –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã.
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '''
–ö–∞–∫ –Ω–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ?

–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å—Ç—å final text = "–Ø –ª—é–±–ª—é –∫–æ—à–µ–∫ –∏ —Å–æ–±–∞–∫";

–ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Å–ª–æ–≤ "–∫–æ—à–µ–∫" –∏ "—Å–æ–±–∞–∫"

–û—Ç–≤–µ—Ç: 2
''',
    a: '''
  final RegExp regexp = RegExp(r'–∫–æ—à–µ–∫|—Å–æ–±–∞–∫', caseSensitive: false);
  return regexp.allMatches("–Ø –ª—é–±–ª—é –∫–æ—à–µ–∫ –∏ —Å–æ–±–∞–∫").length;
''',
  ),
  QA(
    tags: [Tag.dart],
    q: '–î–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω padLeft –∏ padRight?',
    a: r'''
padLeft –∏ padRight –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç—Ä–æ–∫ –¥–æ –Ω—É–∂–Ω–æ–π –¥–ª–∏–Ω—ã:

===

String number = '42';
String paddedLeft = number.padLeft(5, '0');   // '00042'
String paddedRight = number.padRight(5, '0'); // '42000'

String text = 'Hi';
String centered = text.padLeft(4, ' ').padRight(6, ' '); // '  Hi  '

====

String formatTime(DateTime time) {
  final hour = time.hour.toString().padLeft(2, '0');
  final minute = time.minute.toString().padLeft(2, '0');
  final second = time.second.toString().padLeft(2, '0');
  return '$hour:$minute:$second'; // 09:05:03 –≤–º–µ—Å—Ç–æ 9:5:3
}
''',
  ),

  QA(
    q: '–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç?',
    a: '''
–°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º—ã–π –æ–±—ä–µ–∫—Ç ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
–∏–ª–∏ –ø–µ—Ä–µ–¥–∞—á–∏ (—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è) –∏ –∑–∞—Ç–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ (–¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è).

class User {
  final String name;
  final int age;
  final String email;

  User({required this.name, required this.age, required this.email});

  // –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤ Map
  Map<String, dynamic> toJson() => {
    'name': name,
    'age': age,
    'email': email,
  };

  // –î–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–∑ Map
  factory User.fromJson(Map<String, dynamic> json) => User(
    name: json['name'],
    age: json['age'],
    email: json['email'],
  );
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
final user = User(name: 'John', age: 30, email: 'john@example.com');
final json = user.toJson(); // Map<String, dynamic>
final jsonString = jsonEncode(json); // JSON —Å—Ç—Ä–æ–∫–∞
final restoredUser = User.fromJson(jsonDecode(jsonString));
''',
  ),
];
